[build-system]
requires = ["maturin>=1.0,<2.0", "polars>=1.3.0"]
build-backend = "maturin"

[project]
name = "polars-grouper"
version = "0.3.0"
description = "High-performance graph analysis and pattern mining extension for Polars"
authors = [
    { name = "Edward Vaneechoud", email = "evaneechoud@gmail.com" }
]
requires-python = ">=3.8"
license = "MIT"
readme = "README.md"
keywords = ["polars", "graph", "network", "clustering", "data-science"]
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/yourusername/polars-grouper"  # Update with your repo
Documentation = "https://github.com/yourusername/polars-grouper#readme"  # Update with your repo
"Bug Tracker" = "https://github.com/yourusername/polars-grouper/issues"  # Update with your repo

[tool.maturin]
module-name = "polars_grouper._internal"
features = ["pyo3/extension-module"]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",       # Linting
    "pytest>=7.0.0",     # Testing
    "mypy>=1.0.0",       # Type checking
    "black>=23.0.0",     # Code formatting
    "isort>=5.0.0",      # Import sorting
]

docs = [
    "mkdocs>=1.5.0",     # Documentation generator
    "mkdocs-material",   # Documentation theme
    "mkdocstrings",      # Python API documentation
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "polars.utils.udfs"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["arg-type", "attr-defined"]  # Disable specific errors for tests

[tool.ruff]
select = ["E", "F", "B", "Q", "D"]
ignore = ["D100", "D104", "D205", "D212"]
line-length = 120


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --doctest-modules"