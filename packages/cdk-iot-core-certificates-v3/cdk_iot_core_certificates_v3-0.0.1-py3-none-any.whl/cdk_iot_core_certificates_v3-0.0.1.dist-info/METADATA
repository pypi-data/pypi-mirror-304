Metadata-Version: 2.1
Name: cdk-iot-core-certificates-v3
Version: 0.0.1
Summary: CDK Construct for AWS IoT Core certificates and things
Home-page: https://github.com/badmintoncryer/cdk-iot-core-certificates-v3.git
Author: Kazuho CryerShinozuka<malaysia.cryer@gmail.com>
License: Apache-2.0
Project-URL: Source, https://github.com/badmintoncryer/cdk-iot-core-certificates-v3.git
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: JavaScript
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Typing :: Typed
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved
Requires-Python: ~=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aws-cdk-lib<3.0.0,>=2.100.0
Requires-Dist: constructs<11.0.0,>=10.0.5
Requires-Dist: jsii<2.0.0,>=1.104.0
Requires-Dist: publication>=0.0.3
Requires-Dist: typeguard<4.3.0,>=2.13.3

# AWS IoT Core Thing with Certificate v3 construct

This is a CDK construct that creates an AWS IoT Core Thing with a certificate and policy using [aws-sdk-js-v3](https://github.com/aws/aws-sdk-js-v3).

![elements](./images/iot.png)

Cloudformation does not support creating a certificate for an IoT Thing, so this construct uses the AWS SDK to create a certificate and attach it to the Thing.

This construct is a modified version of this excellent [construct (cdk-iot-core-certificate)](https://github.com/devops-at-home/cdk-iot-core-certificates) to work with aws-sdk-js-v3.

## Installation

```bash
npm i cdk-iot-core-certificates-v3
```

## Usage

```python
import { ThingWithCert } from 'cdk-iot-core-certificate-v3';

const thing = new ThingWithCert(this, 'MyThing', {
  // The name of the thing
  thingName: 'MyThing',
  // Whether to save the certificate and private key to the SSM Parameter Store
  saveToParamStore: true,
  // The prefix to use for the SSM Parameter Store parameters
  paramPrefix: 'test',
});

const thingArn = thing.thingArn;
const certId = thing.certId;
const certPem = thing.certPem;
const privateKey = thing.privKey;
```
