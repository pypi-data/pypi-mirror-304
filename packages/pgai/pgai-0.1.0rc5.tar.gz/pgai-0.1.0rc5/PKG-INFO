Metadata-Version: 2.1
Name: pgai
Version: 0.1.0rc5
Summary: AI workflows in your PostgreSQL database
Project-URL: Homepage, https://github.com/timescale/pgai
Project-URL: Repository, https://github.com/timescale/pgai
Project-URL: Bug Tracker, https://github.com/timescale/pgai/issues
Project-URL: Documentation, https://github.com/timescale/pgai/tree/main/docs
Keywords: ai,postgres
Classifier: License :: OSI Approved :: PostgreSQL License
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Database
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click<9.0,>=8.0
Requires-Dist: psycopg[binary]<4.0,>=3.2
Requires-Dist: langchain-openai<1.0,>=0.1
Requires-Dist: langchain-text-splitters<1.0,>=0.2
Requires-Dist: pydantic<3.0,>=2.0
Requires-Dist: openai<2.0,>=1.44
Requires-Dist: python-dotenv<2.0,>=1.0
Requires-Dist: structlog<25.0,>=24.0
Requires-Dist: pgvector<1.0,>=0.3
Requires-Dist: tiktoken<1.0,>=0.7
Requires-Dist: typing_extensions<5.0,>=4.0
Requires-Dist: datadog_lambda<7.0,>=6.9
Requires-Dist: pytimeparse<2.0,>=1.1

# pgai

<h3>pgai brings AI workflows to your PostgreSQL database</h3>

[![Discord](https://img.shields.io/badge/Join_us_on_Discord-black?style=for-the-badge&logo=discord&logoColor=white)](https://discord.gg/KRdHVXAmkp)
[![Try Timescale for free](https://img.shields.io/badge/Try_Timescale_for_free-black?style=for-the-badge&logo=timescale&logoColor=white)](https://tsdb.co/gh-pgai-signup)

</div>

pgai simplifies the process of building [search](https://en.wikipedia.org/wiki/Similarity_search), and
[Retrieval Augmented Generation](https://en.wikipedia.org/wiki/Prompt_engineering#Retrieval-augmented_generation) (RAG) AI applications with PostgreSQL.

pgai brings embedding and generation AI models closer to the database. With pgai, you can now do the following directly from within PostgreSQL in a SQL query:

- Create vector [embeddings](#embed) for your data.
- Retrieve LLM [chat completions](#chat-complete) from models like Claude Sonnet 3.5, OpenAI GPT4o, Cohere Command, and Llama 3 (via Ollama).
- Reason over your data and facilitate use cases like [classification, summarization, and data enrichment](docs/advanced.md) on your existing relational data in PostgreSQL.
