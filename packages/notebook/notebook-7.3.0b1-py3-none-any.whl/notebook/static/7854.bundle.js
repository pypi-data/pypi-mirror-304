"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[7854],{97854:(e,n,t)=>{t.r(n),t.d(n,{CommandIDs:()=>f,default:()=>v});var o=t(84241),s=t(20911),a=t(2315),i=t(20780),r=t(71565),l=t(66649),c=t(7258),d=t(77075),u=t(68086),h=t(32406),m=t(2159),g=t(78156),p=t.n(g);const w="jp-mod-kernel",b="jp-RunningSessions-item-label-kernel-id";var _;!function(e){e.KernelSpecItem=class{constructor(e){this._name=e.name,this.className="jp-mod-kernelspec",this._kernels=e.kernels,this.spec=e.spec||null,this.trans=e.trans}icon(){const{spec:e}=this;return e&&e.resources?e.resources["logo-svg"]||e.resources["logo-64x64"]||e.resources["logo-32x32"]:c.jupyterIcon}label(){const{_name:e,spec:n}=this;return(null==n?void 0:n.display_name)||e}get children(){return this._kernels}},e.RunningKernel=class{constructor(e){this.className=w,this.commands=e.commands,this.kernel=e.kernel,this.context=this.kernel.id,this.kernels=e.kernels,this.sessions=e.sessions,this.trans=e.trans,this._mode=e.mode}get children(){var e;const n=[],t=f.kernelOpenSession,{commands:o}=this;for(const s of this.sessions.running())if(this.kernel.id===(null===(e=s.kernel)||void 0===e?void 0:e.id)){const{name:e,path:a,type:i}=s;n.push({className:"jp-mod-kernel-widget",context:this.kernel.id,open:()=>{o.execute(t,{name:e,path:a,type:i})},icon:()=>"console"===i?c.consoleIcon:"notebook"===i?c.notebookIcon:c.jupyterIcon,label:()=>{if("tree"===this._mode)return e;const n=this.kernel.id.split("-")[0];return p().createElement(p().Fragment,null,e," ",p().createElement("span",{className:b},"(",n,")"))},labelTitle:()=>a,name:()=>e})}return n}shutdown(){return this.kernels.shutdown(this.kernel.id)}icon(){return c.kernelIcon}label(){const{kernel:e}=this,n=e.id.split("-")[0];return p().createElement(p().Fragment,null,this._summary," ",p().createElement("span",{className:b},"(",n,")"))}labelTitle(){var e;const{trans:n}=this,{id:t}=this.kernel,o=[`${this._summary}: ${t}`];for(const t of this.sessions.running())if(this.kernel.id===(null===(e=t.kernel)||void 0===e?void 0:e.id)){const{path:e,type:s}=t;o.push(n.__("%1\nPath: %2",s,e))}return o.join("\n\n")}get _summary(){const e=this.children;return 0===e.length?this.trans.__("No sessions connected"):1==e.length?e[0].name():this.trans.__("%1 and %2 more",e[0].name(),e.length-1)}},e.runningChanged=new m.Signal({})}(_||(_={}));var f,k=t(21428);class y{constructor(e){this._tabsChanged=new m.Signal(this),this._widgets=[],this._labShell=e,this._labShell.layoutModified.connect(this._emitTabsChanged,this)}get tabsChanged(){return this._tabsChanged}addWidget(e){e.title.changed.connect(this._emitTabsChanged,this),this._widgets.push(e)}_emitTabsChanged(){this._widgets.forEach((e=>{e.title.changed.disconnect(this._emitTabsChanged,this)})),this._widgets=[],this._tabsChanged.emit(void 0)}}!function(e){e.kernelNewConsole="running:kernel-new-console",e.kernelNewNotebook="running:kernel-new-notebook",e.kernelOpenSession="running:kernel-open-session",e.kernelShutDown="running:kernel-shut-down",e.kernelShutDownUnused="running:kernel-shut-down-unused",e.showPanel="running:show-panel",e.showModal="running:show-modal"}(f||(f={}));const v=[{id:"@jupyterlab/running-extension:plugin",description:"Provides the running session managers.",provides:a.IRunningSessionManagers,requires:[l.ITranslator],optional:[o.ILabShell],autoStart:!0,activate:(e,n,t)=>{const o=new a.RunningSessionManagers;return t&&function(e,n,t){const o=new y(t),s=n.load("jupyterlab");e.add({name:s.__("Open Tabs"),supportsMultipleViews:!1,running:()=>Array.from(t.widgets("main")).map((e=>(o.addWidget(e),new a(e)))),shutdownAll:()=>{for(const e of t.widgets("main"))e.close()},refreshRunning:()=>{},runningChanged:o.tabsChanged,shutdownLabel:s.__("Close"),shutdownAllLabel:s.__("Close All"),shutdownAllConfirmationText:s.__("Are you sure you want to close all open tabs?")});class a{constructor(e){this._widget=e}open(){t.activateById(this._widget.id)}shutdown(){this._widget.close()}icon(){const e=this._widget.title.icon;return e instanceof c.LabIcon?e:c.fileIcon}label(){return this._widget.title.label}labelTitle(){let e;return e=this._widget instanceof k.DocumentWidget?this._widget.context.path:this._widget.title.label,e}}}(o,n,t),async function(e,n,t){const{commands:o,contextMenu:a,serviceManager:i}=t,{kernels:r,kernelspecs:l,sessions:m}=i,{runningChanged:g,RunningKernel:b}=_,k=new h.Throttler((()=>g.emit(void 0)),100),y=n.load("jupyterlab"),v=y.__("Shut Down Unused");let S=!1;const C=new h.Throttler((async function(){const e=S;S=I().length>0,e!==S&&o.notifyCommandChanged(f.kernelShutDownUnused)}),1e4);function I(){return Array.from(r.running()).filter((e=>{var n;return(null!==(n=e.connections)&&void 0!==n?n:1)<1}))}r.runningChanged.connect((()=>{k.invoke(),C.invoke()})),m.runningChanged.connect((()=>{k.invoke()})),await Promise.all([r.ready,l.ready,m.ready]),o.addCommand(f.kernelShutDownUnused,{label:e=>e.toolbar?"":v,icon:e=>e.toolbar?c.cleaningIcon:void 0,execute:async()=>{const e=I();0!==e.length&&(await(0,s.showDialog)({title:v,body:p().createElement(p().Fragment,null,y.__("Are you sure you want to shut down the following unused kernels?"),p().createElement("ul",null,e.map((e=>p().createElement("li",{key:e.id},y.__("%1 (%2)",e.name,e.id.slice(0,8))))))),buttons:[s.Dialog.cancelButton(),s.Dialog.warnButton({label:v})]})).button.accept&&(await Promise.allSettled(e.map((e=>u.KernelAPI.shutdownKernel(e.id)))),await Promise.all([r.refreshRunning(),m.refreshRunning()]))},isEnabled:()=>S}),e.add({name:y.__("Kernels"),supportsMultipleViews:!0,running:e=>{var n;const t=new Map;for(const s of r.running()){const a=null!==(n=t.get(s.name))&&void 0!==n?n:[];t.set(s.name,a),a.push(new b({commands:o,kernel:s,kernels:r,sessions:m,trans:y,mode:e.mode}))}const s=Array.from(t.entries()).map((([e,n])=>{var t;return new _.KernelSpecItem({name:e,kernels:n,spec:null===(t=l.specs)||void 0===t?void 0:t.kernelspecs[e],trans:y})}));return"tree"===e.mode?s:s.map((e=>e.children.map((e=>{var n;return null!==(n=e.children)&&void 0!==n?n:[]})).flat())).flat()},shutdownAll:()=>r.shutdownAll(),refreshRunning:()=>Promise.all([r.refreshRunning(),m.refreshRunning()]),runningChanged:g,shutdownLabel:y.__("Shut Down Kernel"),shutdownAllLabel:y.__("Shut Down All"),shutdownAllConfirmationText:()=>y._n("Are you sure you want to permanently shut down the running kernel?","Are you sure you want to permanently shut down the %1 running kernels?",r.runningCount),toolbarButtons:[new c.CommandToolbarButton({commands:o,id:f.kernelShutDownUnused,caption:v,args:{toolbar:!0}})]});const T=e=>e.classList.contains(w);o.addCommand(f.kernelNewConsole,{icon:c.consoleIcon,label:y.__("New Console for Kernel"),execute:e=>{var n;const s=t.contextMenuHitTest(T),a=null!==(n=e.id)&&void 0!==n?n:null==s?void 0:s.dataset.context;if(a)return o.execute("console:create",{kernelPreference:{id:a}})}}),o.addCommand(f.kernelNewNotebook,{icon:c.notebookIcon,label:y.__("New Notebook for Kernel"),execute:e=>{var n;const s=t.contextMenuHitTest(T),a=null!==(n=e.id)&&void 0!==n?n:null==s?void 0:s.dataset.context;if(a)return o.execute("notebook:create-new",{kernelId:a})}}),o.addCommand(f.kernelOpenSession,{icon:e=>"console"===e.type?c.consoleIcon:"notebook"===e.type?c.notebookIcon:void 0,isEnabled:({path:e,type:n})=>!!n||void 0!==e,label:({name:e,path:n})=>e||d.PathExt.basename(n||y.__("Unknown Session")),execute:({path:e,type:n})=>{if(!n||void 0===e)return;const t="console"===n?"console:open":"docmanager:open";return o.execute(t,{path:e})}}),o.addCommand(f.kernelShutDown,{icon:c.closeIcon,label:y.__("Shut Down Kernel"),execute:e=>{var n;const o=t.contextMenuHitTest(T),s=null!==(n=e.id)&&void 0!==n?n:null==o?void 0:o.dataset.context;if(s)return r.shutdown(s)}});const x=[];a.opened.connect((async()=>{var e,n,o;const s=null!==(n=null===(e=a.menu.items.find((e=>{var n;return"submenu"===e.type&&"jp-contextmenu-connected-sessions"===(null===(n=e.submenu)||void 0===n?void 0:n.id)})))||void 0===e?void 0:e.submenu)&&void 0!==n?n:null;if(!s)return;x.forEach((e=>e.dispose())),x.length=0,s.clearItems();const i=t.contextMenuHitTest(T),r=null==i?void 0:i.dataset.context;if(!r)return;const l=f.kernelOpenSession;for(const e of m.running())if(r===(null===(o=e.kernel)||void 0===o?void 0:o.id)){const{name:n,path:t,type:o}=e;x.push(s.addItem({command:l,args:{name:n,path:t,type:o}}))}}))}(o,n,e),o}},{id:"@jupyterlab/running-extension:sidebar",description:"Provides the running session sidebar.",provides:a.IRunningSessionSidebar,requires:[a.IRunningSessionManagers,l.ITranslator],optional:[o.ILayoutRestorer,r.IStateDB],autoStart:!0,activate:(e,n,t,o,s)=>{const i=t.load("jupyterlab"),r=new a.RunningSessions(n,t,s);return r.id="jp-running-sessions",r.title.caption=i.__("Running Terminals and Kernels"),r.title.icon=c.runningIcon,r.node.setAttribute("role","region"),r.node.setAttribute("aria-label",i.__("Running Sessions section")),o&&o.add(r,"running-sessions"),e.shell.add(r,"left",{rank:200,type:"Sessions and Tabs"}),e.commands.addCommand(f.showPanel,{label:i.__("Sessions and Tabs"),execute:()=>{e.shell.activateById(r.id)}}),r}},{id:"@jupyterlab/running-extension:recently-closed",description:"Adds recently closed documents list.",requires:[a.IRunningSessionManagers,i.IRecentsManager,l.ITranslator],autoStart:!0,activate:(e,n,t,o)=>{!function(e,n,t,o,s){const a=s.load("jupyterlab");e.add({name:a.__("Recently Closed"),supportsMultipleViews:!1,running:()=>n.recentlyClosed.map((e=>new i(e))),shutdownAll:()=>{for(const e of n.recentlyClosed)n.removeRecent(e,"closed")},refreshRunning:()=>{},runningChanged:n.changed,shutdownLabel:a.__("Forget"),shutdownAllLabel:a.__("Forget All"),shutdownAllConfirmationText:a.__("Are you sure you want to clear recently closed tabs?")});class i{constructor(e){this._recent=e}async open(){const e=this._recent;await n.validate(e)&&(await t.execute("docmanager:open",{path:e.path,factory:e.factory}),n.removeRecent(e,"closed"))}shutdown(){n.removeRecent(this._recent,"closed")}icon(){if(!this._recent.factory)return c.fileIcon;const e=o.getFileTypesForPath(this._recent.path);for(const n of e){const e=n.icon;if(e instanceof c.LabIcon)return e}const n=o.getWidgetFactory(this._recent.factory);if(n)for(const e of n.fileTypes){const n=o.getFileType(e),t=null==n?void 0:n.icon;if(t instanceof c.LabIcon)return t}return c.fileIcon}label(){return d.PathExt.basename(this._recent.path)}labelTitle(){return this._recent.path}}}(n,t,e.commands,e.docRegistry,o)}},{id:"@jupyterlab/running-extension:search-tabs",description:"Adds a widget to search open and closed tabs.",requires:[a.IRunningSessionManagers,l.ITranslator],optional:[s.ICommandPalette,a.IRunningSessionSidebar],autoStart:!0,activate:(e,n,t,o,i)=>{const r=t.load("jupyterlab");if(e.commands.addCommand(f.showModal,{execute:()=>{const e=new a.SearchableSessions(n,t),o=new s.Dialog({title:r.__("Tabs and Running Sessions"),body:e,buttons:[s.Dialog.okButton({})],hasClose:!0});return o.addClass("jp-SearchableSessions-modal"),o.launch()},label:r.__("Search Tabs and Running Sessions")}),o&&o.addItem({command:f.showModal,category:r.__("Running")}),i){const n=new c.CommandToolbarButton({commands:e.commands,id:f.showModal,icon:c.launcherIcon,label:""});i.toolbar.addItem("open-as-modal",n)}}}]}}]);