[project]
name = "pulse-telemetry"
description = "Spark applications for transforming raw incoming data into a set of schemas for analysis."
readme = "README.md"
authors = [
    {name = "Maxwell Dylla", email = "maxwell.dylla@gmail.com"},
    {name = "Erik Amundson", email = "erik0422@gmail.com"}
]
dynamic = ["version"]
dependencies = [
    "pyspark==3.5.1",
]

[project.optional-dependencies]
dev = [
    "mypy==1.10.1",
    "pandas==2.2.3",
    "pytest==8.2.2",
    "pytest-cov==5.0.0",
    "ruff==0.5.2",
    "setuptools==75.1.0",
]

[tool.setuptools.dynamic]
version = {attr = "pulse_telemetry.__version__"}

[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "D",
    "E",
    "W",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-commas
    "COM",
    # flake8-datetimez
    "DTZ",
    # flake8-quotes
    "Q",
    # pylint
    "PLE", "PLR", "PLW",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TCH",
    # isort
    "I",
    # comprehensions
    "C4",
    # pygrep-hooks
    "PGH",
    # Ruff-specific rules
    "RUF",
    # Upgrade syntax
    "UP",
]
ignore = [
    # line length, use formatter to get line length approx right
    "E501",
    # module level import not at top of file
    "E402",
    # too many branches
    "PLR0912",
    # too many arguments to function call
    "PLR0913",
    # too many statements in function
    "PLR0915",
    # magic value used in comparison,
    "PLR2004",
    # do not use mutable data structures for argument defaults
    "B006",
    # recommended by Ruff to disable to avoid issues with formatter
    "COM812", "ISC001",
    # extra rules on documentation strings
    "D100", "D401", "D203", "D213",

]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# requires docstring rules in sparklib
"src/pulse_telemetry/sparklib/__init__.py" = ["D"]
"!src/pulse_telemetry/sparklib/**/*.py" = ["D"]


[tool.ruff.lint.flake8-type-checking]
quote-annotations = true

[tool.mypy]
disable_error_code = "type-var"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Ignore type checking
    "if TYPE_CHECKING:",
]
ignore_errors = true

[tool.coverage.run]
omit = []
