# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/gaspard',
                'doc_host': 'https://AnswerDotAI.github.io',
                'git_url': 'https://github.com/AnswerDotAI/gaspard',
                'lib_path': 'gaspard'},
  'syms': { 'gaspard.core': { 'gaspard.core.Chat': ('core.html#chat', 'gaspard/core.py'),
                              'gaspard.core.Chat.__call__': ('core.html#chat.__call__', 'gaspard/core.py'),
                              'gaspard.core.Chat.__init__': ('core.html#chat.__init__', 'gaspard/core.py'),
                              'gaspard.core.Chat._append_pr': ('core.html#chat._append_pr', 'gaspard/core.py'),
                              'gaspard.core.Chat._post_pr': ('core.html#chat._post_pr', 'gaspard/core.py'),
                              'gaspard.core.Chat._stream': ('core.html#chat._stream', 'gaspard/core.py'),
                              'gaspard.core.Chat.use': ('core.html#chat.use', 'gaspard/core.py'),
                              'gaspard.core.Client': ('core.html#client', 'gaspard/core.py'),
                              'gaspard.core.Client.__call__': ('core.html#client.__call__', 'gaspard/core.py'),
                              'gaspard.core.Client.__init__': ('core.html#client.__init__', 'gaspard/core.py'),
                              'gaspard.core.Client._precall': ('core.html#client._precall', 'gaspard/core.py'),
                              'gaspard.core.Client._r': ('core.html#client._r', 'gaspard/core.py'),
                              'gaspard.core.Client._set_sp': ('core.html#client._set_sp', 'gaspard/core.py'),
                              'gaspard.core.Client.structured': ('core.html#client.structured', 'gaspard/core.py'),
                              'gaspard.core.GenerateContentResponse._repr_markdown_': ( 'core.html#generatecontentresponse._repr_markdown_',
                                                                                        'gaspard/core.py'),
                              'gaspard.core.UsageMetadata.__add__': ('core.html#usagemetadata.__add__', 'gaspard/core.py'),
                              'gaspard.core.UsageMetadata.__repr__': ('core.html#usagemetadata.__repr__', 'gaspard/core.py'),
                              'gaspard.core.UsageMetadata.total': ('core.html#usagemetadata.total', 'gaspard/core.py'),
                              'gaspard.core._convert_proto': ('core.html#_convert_proto', 'gaspard/core.py'),
                              'gaspard.core._mk_content': ('core.html#_mk_content', 'gaspard/core.py'),
                              'gaspard.core.cls2tool': ('core.html#cls2tool', 'gaspard/core.py'),
                              'gaspard.core.contents': ('core.html#contents', 'gaspard/core.py'),
                              'gaspard.core.convert_func': ('core.html#convert_func', 'gaspard/core.py'),
                              'gaspard.core.find_block': ('core.html#find_block', 'gaspard/core.py'),
                              'gaspard.core.get_stream': ('core.html#get_stream', 'gaspard/core.py'),
                              'gaspard.core.json2proto': ('core.html#json2proto', 'gaspard/core.py'),
                              'gaspard.core.media_msg': ('core.html#media_msg', 'gaspard/core.py'),
                              'gaspard.core.mk_args': ('core.html#mk_args', 'gaspard/core.py'),
                              'gaspard.core.mk_msg': ('core.html#mk_msg', 'gaspard/core.py'),
                              'gaspard.core.mk_msgs': ('core.html#mk_msgs', 'gaspard/core.py'),
                              'gaspard.core.mk_tool_config': ('core.html#mk_tool_config', 'gaspard/core.py'),
                              'gaspard.core.mk_toolres': ('core.html#mk_toolres', 'gaspard/core.py'),
                              'gaspard.core.text_msg': ('core.html#text_msg', 'gaspard/core.py'),
                              'gaspard.core.usage': ('core.html#usage', 'gaspard/core.py')},
            'gaspard.toolloop': {'gaspard.toolloop.Chat.toolloop': ('toolloop.html#chat.toolloop', 'gaspard/toolloop.py')}}}
