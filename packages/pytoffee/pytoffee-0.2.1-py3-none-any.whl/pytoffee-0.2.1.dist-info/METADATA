Metadata-Version: 2.3
Name: pytoffee
Version: 0.2.1
Summary: a framework for building hardware verification platform using software method
Project-URL: Homepage, https://github.com/XS-MLVP/toffee
Project-URL: Source, https://github.com/XS-MLVP/toffee
Project-URL: Tracker, https://github.com/XS-MLVP/toffee/issues
License:                      木兰宽松许可证, 第2版
        
           木兰宽松许可证， 第2版
           2020年1月 http://license.coscl.org.cn/MulanPSL2
        
        
           您对“软件”的复制、使用、修改及分发受木兰宽松许可证，第2版（“本许可证”）的如下条款的约束：
        
           0. 定义
        
              “软件”是指由“贡献”构成的许可在“本许可证”下的程序和相关文档的集合。
        
              “贡献”是指由任一“贡献者”许可在“本许可证”下的受版权法保护的作品。
        
              “贡献者”是指将受版权法保护的作品许可在“本许可证”下的自然人或“法人实体”。
        
              “法人实体”是指提交贡献的机构及其“关联实体”。
        
              “关联实体”是指，对“本许可证”下的行为方而言，控制、受控制或与其共同受控制的机构，此处的控制是指有受控方或共同受控方至少50%直接或间接的投票权、资金或其他有价证券。
        
           1. 授予版权许可
        
              每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的版权许可，您可以复制、使用、修改、分发其“贡献”，不论修改与否。
        
           2. 授予专利许可
        
              每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的（根据本条规定撤销除外）专利许可，供您制造、委托制造、使用、许诺销售、销售、进口其“贡献”或以其他方式转移其“贡献”。前述专利许可仅限于“贡献者”现在或将来拥有或控制的其“贡献”本身或其“贡献”与许可“贡献”时的“软件”结合而将必然会侵犯的专利权利要求，不包括对“贡献”的修改或包含“贡献”的其他结合。如果您或您的“关联实体”直接或间接地，就“软件”或其中的“贡献”对任何人发起专利侵权诉讼（包括反诉或交叉诉讼）或其他专利维权行动，指控其侵犯专利权，则“本许可证”授予您对“软件”的专利许可自您提起诉讼或发起维权行动之日终止。
        
           3. 无商标许可
        
              “本许可证”不提供对“贡献者”的商品名称、商标、服务标志或产品名称的商标许可，但您为满足第4条规定的声明义务而必须使用除外。
        
           4. 分发限制
        
              您可以在任何媒介中将“软件”以源程序形式或可执行形式重新分发，不论修改与否，但您必须向接收者提供“本许可证”的副本，并保留“软件”中的版权、商标、专利及免责声明。
        
           5. 免责声明与责任限制
        
              “软件”及其中的“贡献”在提供时不带任何明示或默示的担保。在任何情况下，“贡献者”或版权所有者不对任何人因使用“软件”或其中的“贡献”而引发的任何直接或间接损失承担责任，不论因何种原因导致或者基于何种法律理论，即使其曾被建议有此种损失的可能性。
        
           6. 语言
              “本许可证”以中英文双语表述，中英文版本具有同等法律效力。如果中英文版本存在任何冲突不一致，以中文版为准。
        
           条款结束
        
           如何将木兰宽松许可证，第2版，应用到您的软件
        
           如果您希望将木兰宽松许可证，第2版，应用到您的新软件，为了方便接收者查阅，建议您完成如下三步：
        
              1， 请您补充如下声明中的空白，包括软件名、软件的首次发表年份以及您作为版权人的名字；
        
              2， 请您在软件包的一级目录下创建以“LICENSE”为名的文件，将整个许可证文本放入该文件中；
        
              3， 请将如下声明文本放入每个源文件的头部注释中。
        
           Copyright (c) [Year] [name of copyright holder]
           [Software Name] is licensed under Mulan PSL v2.
           You can use this software according to the terms and conditions of the Mulan PSL v2.
           You may obtain a copy of Mulan PSL v2 at:
                    http://license.coscl.org.cn/MulanPSL2
           THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
           See the Mulan PSL v2 for more details.
        
        
                             Mulan Permissive Software License，Version 2
        
           Mulan Permissive Software License，Version 2 (Mulan PSL v2)
           January 2020 http://license.coscl.org.cn/MulanPSL2
        
           Your reproduction, use, modification and distribution of the Software shall be subject to Mulan PSL v2 (this License) with the following terms and conditions:
        
           0. Definition
        
              Software means the program and related documents which are licensed under this License and comprise all Contribution(s).
        
              Contribution means the copyrightable work licensed by a particular Contributor under this License.
        
              Contributor means the Individual or Legal Entity who licenses its copyrightable work under this License.
        
              Legal Entity means the entity making a Contribution and all its Affiliates.
        
              Affiliates means entities that control, are controlled by, or are under common control with the acting entity under this License, ‘control’ means direct or indirect ownership of at least fifty percent (50%) of the voting power, capital or other securities of controlled or commonly controlled entity.
        
           1. Grant of Copyright License
        
              Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable copyright license to reproduce, use, modify, or distribute its Contribution, with modification or not.
        
           2. Grant of Patent License
        
              Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable (except for revocation under this Section) patent license to make, have made, use, offer for sale, sell, import or otherwise transfer its Contribution, where such patent license is only limited to the patent claims owned or controlled by such Contributor now or in future which will be necessarily infringed by its Contribution alone, or by combination of the Contribution with the Software to which the Contribution was contributed. The patent license shall not apply to any modification of the Contribution, and any other combination which includes the Contribution. If you or your Affiliates directly or indirectly institute patent litigation (including a cross claim or counterclaim in a litigation) or other patent enforcement activities against any individual or entity by alleging that the Software or any Contribution in it infringes patents, then any patent license granted to you under this License for the Software shall terminate as of the date such litigation or activity is filed or taken.
        
           3. No Trademark License
        
              No trademark license is granted to use the trade names, trademarks, service marks, or product names of Contributor, except as required to fulfill notice requirements in Section 4.
        
           4. Distribution Restriction
        
              You may distribute the Software in any medium with or without modification, whether in source or executable forms, provided that you provide recipients with a copy of this License and retain copyright, patent, trademark and disclaimer statements in the Software.
        
           5. Disclaimer of Warranty and Limitation of Liability
        
              THE SOFTWARE AND CONTRIBUTION IN IT ARE PROVIDED WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL ANY CONTRIBUTOR OR COPYRIGHT HOLDER BE LIABLE TO YOU FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO ANY DIRECT, OR INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING FROM YOUR USE OR INABILITY TO USE THE SOFTWARE OR THE CONTRIBUTION IN IT, NO MATTER HOW IT’S CAUSED OR BASED ON WHICH LEGAL THEORY, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
        
           6. Language
        
              THIS LICENSE IS WRITTEN IN BOTH CHINESE AND ENGLISH, AND THE CHINESE VERSION AND ENGLISH VERSION SHALL HAVE THE SAME LEGAL EFFECT. IN THE CASE OF DIVERGENCE BETWEEN THE CHINESE AND ENGLISH VERSIONS, THE CHINESE VERSION SHALL PREVAIL.
        
           END OF THE TERMS AND CONDITIONS
        
           How to Apply the Mulan Permissive Software License，Version 2 (Mulan PSL v2) to Your Software
        
              To apply the Mulan PSL v2 to your work, for easy identification by recipients, you are suggested to complete following three steps:
        
              i Fill in the blanks in following statement, including insert your software name, the year of the first publication of your software, and your name identified as the copyright owner;
        
              ii Create a file named “LICENSE” which contains the whole context of this License in the first directory of your software package;
        
              iii Attach the statement to the appropriate annotated syntax at the beginning of each source file.
        
        
           Copyright (c) [Year] [name of copyright holder]
           [Software Name] is licensed under Mulan PSL v2.
           You can use this software according to the terms and conditions of the Mulan PSL v2.
           You may obtain a copy of Mulan PSL v2 at:
                       http://license.coscl.org.cn/MulanPSL2
           THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
           See the Mulan PSL v2 for more details.
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Mulan Permissive Software License v2 (MulanPSL-2.0)
Classifier: Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# toffee

> mlvp 已更名为 toffee

**toffee** 是一款基于 Python 的硬件验证框架，旨在帮助用户更加便捷、规范地使用 Python 构建硬件验证环境。

**toffee** 是一个使用 Python 语言编写的硬件验证框架，依托多语言转换工具 [picker](https://github.com/XS-MLVP/picker)，该工具能够将硬件设计的 Verilog 代码转换为 Python Package，使得用户可以使用 Python 来驱动并验证硬件设计。

**toffee** 吸收了部分 UVM 验证方法学，确保验证环境的规范性与可复用性。此外，toffee 对验证环境的构建方式进行了重新设计，使其更符合软件开发者的使用习惯，从而让软件开发者能够轻松上手硬件验证工作。

更多关于 toffee 的介绍，请参阅 [toffee 文档](https://open-verify.cc/mlvp/docs/mlvp)。

## 安装

toffee 需要的依赖有：

- Python 3.6.8+
- Picker 0.9.0+

当安装好上述依赖后，可通过 pip 安装 toffee：

```bash
pip3 install pytoffee
```

或通过以下命令安装最新版本的 toffee：

```bash
pip3 install pytoffee@git+https://github.com/XS-MLVP/toffee@master
```

通过以下方式可进行本地安装：

```bash
git clone https://github.com/XS-MLVP/toffee.git
cd toffee
pip3 install .
```

## 使用

我们使用一个简单的加法器示例来演示 toffee 的使用方法，该示例位于 `example/adder` 目录下。

加法器的设计如下：

```verilog
module Adder #(
    parameter WIDTH = 64
) (
    input  [WIDTH-1:0] io_a,
    input  [WIDTH-1:0] io_b,
    input              io_cin,
    output [WIDTH-1:0] io_sum,
    output             io_cout
);

assign {io_cout, io_sum}  = io_a + io_b + io_cin;

endmodule
```

使用 toffee 搭建验证环境之前，需要使用 picker 将设计转换为 Python Package。安装好依赖后，可以直接在 `example/adder` 目录下运行以下命令来完成转换：

```bash
make dut
```

为了验证加法器的功能，需要使用 toffee 提供的方法来建立验证环境。

首先需要为其创建加法器接口的驱动方法，这里用到了 `Bundle` 来描述需要驱动的某类接口，`Agent` 用于编写对该接口的驱动方法。如下所示：

```python
class AdderBundle(Bundle):
    a, b, cin, sum, cout = Signals(5)


class AdderAgent(Agent):
    @driver_method()
    async def exec_add(self, a, b, cin):
        self.bundle.a.value = a
        self.bundle.b.value = b
        self.bundle.cin.value = cin
        await self.bundle.step()
        return self.bundle.sum.value, self.bundle.cout.value
```

为了验证加法器的功能，还需要为其创建一个参考模型，用于验证加法器的输出是否正确。在 toffee 中，我们使用 `Model` 来定义参考模型。如下所示：

```python
class AdderModel(Model):
    @driver_hook(agent_name="add_agent")
    def exec_add(self, a, b, cin):
        result = a + b + cin
        sum = result & ((1 << 64) - 1)
        cout = result >> 64
        return sum, cout
```

接下来，需要创建一个顶层的测试环境，将上述的驱动方法与参考模型相关联，如下所示：

```python
class AdderEnv(Env):
    def __init__(self, adder_bundle):
        super().__init__()
        self.add_agent = AdderAgent(adder_bundle)

        self.attach(AdderModel())
```

此时，验证环境已经搭建完成，toffee 会自动驱动参考模型并收集结果，并将结果与加法器的输出进行比对。

之后，需要编写多个测试用例来验证加法器的功能，如下所示：

```python
@toffee_test.case
async def test_random(adder_env):
    for _ in range(1000):
        a = random.randint(0, 2**64 - 1)
        b = random.randint(0, 2**64 - 1)
        cin = random.randint(0, 1)
        await adder_env.add_agent.exec_add(a, b, cin)

@toffee_test.case
async def test_boundary(adder_env):
    for cin in [0, 1]:
        for a in [0, 2**64 - 1]:
            for b in [0, 2**64 - 1]:
                await adder_env.add_agent.exec_add(a, b, cin)
```

toffee 集成了 pytest 框架，用户可直接使用 pytest 的功能来对测试用例进行管理。toffee 会自动完成 dut 的驱动与参考模型的比对工作，并生成验证报告。

可以直接在 `example/adder` 目录下运行以下命令来运行该示例：

```bash
make run
```

运行结束后报告将自动在`reports`目录下生成。

更加详细的使用方法，请参考 [toffee 文档](https://open-verify.cc/mlvp/docs/mlvp)。

## 其他信息

本项目隶属 **万众一芯(UnityChip)** 开放验证，更多信息请访问 [open-verify.cc](https://open-verify.cc)
