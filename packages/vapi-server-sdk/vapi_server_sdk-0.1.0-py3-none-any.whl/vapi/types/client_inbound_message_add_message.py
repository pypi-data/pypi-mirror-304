# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .open_ai_message import OpenAiMessage
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClientInboundMessageAddMessage(UniversalBaseModel):
    type: typing.Literal["add-message"] = pydantic.Field(default="add-message")
    """
    This is the type of the message. Send "add-message" message to add a message to the conversation history.
    """

    message: OpenAiMessage = pydantic.Field()
    """
    This is the message to add to the conversation.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
