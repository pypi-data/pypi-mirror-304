Metadata-Version: 2.1
Name: awc_client
Version: 1.0.0
Summary: AviationWeather.gov API
Home-page: https://github.com/GIT_USER_ID/GIT_REPO_ID
License: NoLicense
Keywords: OpenAPI,OpenAPI-Generator,AviationWeather.gov API
Author: OpenAPI Generator Community
Author-email: team@openapitools.org
Requires-Python: >=3.8,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: pydantic (>=2)
Requires-Dist: python-dateutil (>=2.8.2)
Requires-Dist: typing-extensions (>=4.7.1)
Requires-Dist: urllib3 (>=1.25.3,<3.0.0)
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Description-Content-Type: text/markdown

# awc-client
New data API of AviationWeather.gov. This supercedes the ADDS Data Server and AviationWeather Web Services.

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 3.12
- Package version: 1.0.0
- Generator version: 7.10.0-SNAPSHOT
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.7+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import awc_client
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import awc_client
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import awc_client
from awc_client.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://localhost
# See configuration.py for a list of all supported configuration parameters.
configuration = awc_client.Configuration(
    host = "http://localhost"
)



# Enter a context with an instance of the API client
with awc_client.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = awc_client.DataApi(api_client)
    ids = 'KMCI' # str | Station ID(s) (optional)
    bbox = '' # str | Geographic bounding box (lat0, lon0, lat1, lon1) (optional)
    format = 'format_example' # str | Format (optional)

    try:
        # Airport info
        api_instance.data_airport(ids=ids, bbox=bbox, format=format)
    except ApiException as e:
        print("Exception when calling DataApi->data_airport: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://localhost*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*DataApi* | [**data_airport**](docs/DataApi.md#data_airport) | **GET** /api/data/airport | Airport info
*DataApi* | [**data_area_fcst**](docs/DataApi.md#data_area_fcst) | **GET** /api/data/areafcst | US Area Forecasts
*DataApi* | [**data_cwa**](docs/DataApi.md#data_cwa) | **GET** /api/data/cwa | CWSU Center Advisories
*DataApi* | [**data_fcst_disc**](docs/DataApi.md#data_fcst_disc) | **GET** /api/data/fcstdisc | US Forecast Discussions
*DataApi* | [**data_feature**](docs/DataApi.md#data_feature) | **GET** /api/data/feature | Feature info
*DataApi* | [**data_fix**](docs/DataApi.md#data_fix) | **GET** /api/data/fix | Naviagtional fix info
*DataApi* | [**data_gairmet**](docs/DataApi.md#data_gairmet) | **GET** /api/data/gairmet | US Graphical AIRMETs
*DataApi* | [**data_metars**](docs/DataApi.md#data_metars) | **GET** /api/data/metar | METARs
*DataApi* | [**data_mis**](docs/DataApi.md#data_mis) | **GET** /api/data/mis | Meteorological Information Statement
*DataApi* | [**data_navaid**](docs/DataApi.md#data_navaid) | **GET** /api/data/navaid | Navigational aid info
*DataApi* | [**data_obstacle**](docs/DataApi.md#data_obstacle) | **GET** /api/data/obstacle | Obstacle info
*DataApi* | [**data_pirepphp**](docs/DataApi.md#data_pirepphp) | **GET** /api/data/pirep | Pilot Reports
*DataApi* | [**data_sigmet**](docs/DataApi.md#data_sigmet) | **GET** /api/data/airsigmet | Domestic AIRMETs/SIGMETs
*DataApi* | [**data_station_info**](docs/DataApi.md#data_station_info) | **GET** /api/data/stationinfo | Station info
*DataApi* | [**data_taf**](docs/DataApi.md#data_taf) | **GET** /api/data/taf | TAFs
*DataApi* | [**data_wind_temp**](docs/DataApi.md#data_wind_temp) | **GET** /api/data/windtemp | Wind/Temp Point Data
*DataApi* | [**datai_sigmet**](docs/DataApi.md#datai_sigmet) | **GET** /api/data/isigmet | International SIGMETs
*DataserverApi* | [**dataserver_airep**](docs/DataserverApi.md#dataserver_airep) | **GET** /api/data/dataserver?requestType&#x3D;retrieve&amp;dataSource&#x3D;aircraftreports | Dataserver for AIREPs and PIREPs
*DataserverApi* | [**dataserver_gairmet**](docs/DataserverApi.md#dataserver_gairmet) | **GET** /api/data/dataserver?requestType&#x3D;retrieve&amp;dataSource&#x3D;gairmets | Dataserver for G-AIRMETs
*DataserverApi* | [**dataserver_metars**](docs/DataserverApi.md#dataserver_metars) | **GET** /api/data/dataserver?requestType&#x3D;retrieve&amp;dataSource&#x3D;metars | Dataserver for METARs
*DataserverApi* | [**dataserver_sigmet**](docs/DataserverApi.md#dataserver_sigmet) | **GET** /api/data/dataserver?requestType&#x3D;retrieve&amp;dataSource&#x3D;airsigmets | Dataserver for AIRMETs and SIGMETs
*DataserverApi* | [**dataserver_tafs**](docs/DataserverApi.md#dataserver_tafs) | **GET** /api/data/dataserver?requestType&#x3D;retrieve&amp;dataSource&#x3D;tafs | Dataserver for TAFs


## Documentation For Models

 - [DataCWA200Response](docs/DataCWA200Response.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization

Endpoints do not require authorization.


## Author





