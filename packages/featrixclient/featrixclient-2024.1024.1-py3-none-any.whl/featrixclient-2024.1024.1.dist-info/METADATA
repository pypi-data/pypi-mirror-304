Metadata-Version: 2.1
Name: featrixclient
Version: 2024.1024.1
Summary: Featrix AI API
Home-page: https://featrix.com
Download-URL: https://github.com/Featrix/opensource.git
Author: Featrix, Inc.
Author-email: hello@featrix.ai
License: MIT License
        
        Copyright (c) 2024 Featrix, Inc
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Keywords: ML,AI,embedding,embeddings,tabular,embeddings,vectorize,automl,xgboost,neuralnetwork,eda
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: System :: Installation/Setup
Classifier: Topic :: Utilities
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic[email] (>=2.5.0)
Requires-Dist: pydantic-core (>=2.14.5)
Requires-Dist: pydantic-settings (>=2.4.0)
Requires-Dist: bson
Requires-Dist: fastapi (>=0.106.0)
Requires-Dist: pandas (>=2.1.4)
Requires-Dist: psutil (>=5.9.5)
Requires-Dist: requests (>=2.31.0)
Requires-Dist: eval-type-backport ; python_version < "3.10"

Welcome to Featrix!

Featrix is a data gateway to create ML models for structured data with no data preparation on your part. Featrix comes with a Python client library for ML engineers and data scientists to work with any structured data source, including Pandas dataframes. Featrix is powered by a hosted SaaS or private Docker containers deployed on site in private clouds with an enterprise license.

Getting started is easy and involves just a few steps:

Load your baseline training data into a Featrix “data space”.
Train a “vector space” on that data. This transforms the original data into vectors that you can leverage for models or querying.
At this point, you can cluster the vectors or query for nearest neighbors with no further work.
You can also train a downstream prediction model for a target column. The target column can be in the original data, or it can be something specific to the model itself.
Then you can run the model. The model can be presented with partial records and it returns values for the target.
A few notes on why we have picked these abstractions:

The data space lets you mix and match source data into different configurations or arrangements without having to reload the data.
Manually joining data is not required to associate data in the data space; Featrix infers likely combinations to associate data and you can choose to override these if needed.
A data space can have multiple vector spaces with different arrangements.
A vector space can have multiple models.
Every vector space includes a set of vector indices to enable extremely fast querying for clusters or nearest neighbors in the data set.
