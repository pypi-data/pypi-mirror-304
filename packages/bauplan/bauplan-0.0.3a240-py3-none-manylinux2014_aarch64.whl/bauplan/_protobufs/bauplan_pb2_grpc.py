# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

import bauplan_pb2 as bauplan__pb2


class CommanderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TriggerRun = channel.unary_unary(
            '/bauplan.CommanderService/TriggerRun',
            request_serializer=bauplan__pb2.TriggerRunRequest.SerializeToString,
            response_deserializer=bauplan__pb2.JobId.FromString,
        )
        self.CancelJob = channel.unary_unary(
            '/bauplan.CommanderService/CancelJob',
            request_serializer=bauplan__pb2.CancelJobRequest.SerializeToString,
            response_deserializer=bauplan__pb2.CancelJobResponse.FromString,
        )
        self.SubscribeLogs = channel.unary_stream(
            '/bauplan.CommanderService/SubscribeLogs',
            request_serializer=bauplan__pb2.JobId.SerializeToString,
            response_deserializer=bauplan__pb2.RunnerInfo.FromString,
        )
        self.SubscribeRunner = channel.stream_stream(
            '/bauplan.CommanderService/SubscribeRunner',
            request_serializer=bauplan__pb2.RunnerInfo.SerializeToString,
            response_deserializer=bauplan__pb2.RunnerAction.FromString,
        )
        self.SyncAlphaAccounts = channel.unary_unary(
            '/bauplan.CommanderService/SyncAlphaAccounts',
            request_serializer=bauplan__pb2.SyncAlphaAccountsRequest.SerializeToString,
            response_deserializer=bauplan__pb2.SyncAlphaAccountsResponse.FromString,
        )
        self.GetSnapshotInfo = channel.unary_unary(
            '/bauplan.CommanderService/GetSnapshotInfo',
            request_serializer=bauplan__pb2.GetSnapshotInfoRequest.SerializeToString,
            response_deserializer=bauplan__pb2.GetSnapshotInfoResponse.FromString,
        )
        self.GetBauplanInfo = channel.unary_unary(
            '/bauplan.CommanderService/GetBauplanInfo',
            request_serializer=bauplan__pb2.BauplanInfoRequest.SerializeToString,
            response_deserializer=bauplan__pb2.BauplanInfo.FromString,
        )


class CommanderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TriggerRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeRunner(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncAlphaAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSnapshotInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBauplanInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommanderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'TriggerRun': grpc.unary_unary_rpc_method_handler(
            servicer.TriggerRun,
            request_deserializer=bauplan__pb2.TriggerRunRequest.FromString,
            response_serializer=bauplan__pb2.JobId.SerializeToString,
        ),
        'CancelJob': grpc.unary_unary_rpc_method_handler(
            servicer.CancelJob,
            request_deserializer=bauplan__pb2.CancelJobRequest.FromString,
            response_serializer=bauplan__pb2.CancelJobResponse.SerializeToString,
        ),
        'SubscribeLogs': grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeLogs,
            request_deserializer=bauplan__pb2.JobId.FromString,
            response_serializer=bauplan__pb2.RunnerInfo.SerializeToString,
        ),
        'SubscribeRunner': grpc.stream_stream_rpc_method_handler(
            servicer.SubscribeRunner,
            request_deserializer=bauplan__pb2.RunnerInfo.FromString,
            response_serializer=bauplan__pb2.RunnerAction.SerializeToString,
        ),
        'SyncAlphaAccounts': grpc.unary_unary_rpc_method_handler(
            servicer.SyncAlphaAccounts,
            request_deserializer=bauplan__pb2.SyncAlphaAccountsRequest.FromString,
            response_serializer=bauplan__pb2.SyncAlphaAccountsResponse.SerializeToString,
        ),
        'GetSnapshotInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetSnapshotInfo,
            request_deserializer=bauplan__pb2.GetSnapshotInfoRequest.FromString,
            response_serializer=bauplan__pb2.GetSnapshotInfoResponse.SerializeToString,
        ),
        'GetBauplanInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetBauplanInfo,
            request_deserializer=bauplan__pb2.BauplanInfoRequest.FromString,
            response_serializer=bauplan__pb2.BauplanInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('bauplan.CommanderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CommanderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TriggerRun(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bauplan.CommanderService/TriggerRun',
            bauplan__pb2.TriggerRunRequest.SerializeToString,
            bauplan__pb2.JobId.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CancelJob(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bauplan.CommanderService/CancelJob',
            bauplan__pb2.CancelJobRequest.SerializeToString,
            bauplan__pb2.CancelJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SubscribeLogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/bauplan.CommanderService/SubscribeLogs',
            bauplan__pb2.JobId.SerializeToString,
            bauplan__pb2.RunnerInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SubscribeRunner(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/bauplan.CommanderService/SubscribeRunner',
            bauplan__pb2.RunnerInfo.SerializeToString,
            bauplan__pb2.RunnerAction.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SyncAlphaAccounts(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bauplan.CommanderService/SyncAlphaAccounts',
            bauplan__pb2.SyncAlphaAccountsRequest.SerializeToString,
            bauplan__pb2.SyncAlphaAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetSnapshotInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bauplan.CommanderService/GetSnapshotInfo',
            bauplan__pb2.GetSnapshotInfoRequest.SerializeToString,
            bauplan__pb2.GetSnapshotInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetBauplanInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bauplan.CommanderService/GetBauplanInfo',
            bauplan__pb2.BauplanInfoRequest.SerializeToString,
            bauplan__pb2.BauplanInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
