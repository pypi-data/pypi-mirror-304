# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Ut=Object.defineProperty;var Nt=(A,e)=>{for(var t in e)Ut(A,t,{get:e[t],enumerable:!0})};var Tt="3.3.0",NA=Tt;var Gt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},y=Gt;var Pt={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},k=Pt;function Lt(A,e){let t=null;switch(A){case y.UInt8:{t=new Uint8Array(e);break}case y.Int8:{t=new Int8Array(e);break}case y.UInt16:{t=new Uint16Array(e);break}case y.Int16:{t=new Int16Array(e);break}case y.UInt32:{t=new Uint32Array(e);break}case y.Int32:{t=new Int32Array(e);break}case y.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case y.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case k.Float32:{t=new Float32Array(e);break}case k.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var w=Lt;var xt={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},G=xt;var TA=class{dimension;componentType;pixelType;components;constructor(e=2,t=y.UInt8,r=G.Scalar,o=1){this.dimension=e,this.componentType=t,this.pixelType=r,this.components=o}},ue=TA;function Ot(A,e,t,r,o){A[r+t*e]=o}var fe=Ot;var GA=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new ue){this.imageType=e;let t=e.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)fe(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},PA=GA;var LA=class{dimension;pointComponentType;pointPixelComponentType;pointPixelType;pointPixelComponents;cellComponentType;cellPixelComponentType;cellPixelType;cellPixelComponents;constructor(e=2,t=k.Float32,r=k.Float32,o=G.Scalar,n=1,i=y.Int32,g=k.Float32,l=G.Scalar,B=1){this.dimension=e,this.pointComponentType=t,this.pointPixelComponentType=r,this.pointPixelType=o,this.pointPixelComponents=n,this.cellComponentType=i,this.cellPixelComponentType=g,this.cellPixelType=l,this.cellPixelComponents=B}},pe=LA;var xA=class{meshType;name="Mesh";numberOfPoints;points;numberOfPointPixels;pointData;numberOfCells;cells;cellBufferSize;numberOfCellPixels;cellData;constructor(e=new pe){this.meshType=e,this.name="Mesh",this.numberOfPoints=0,this.points=null,this.numberOfPointPixels=0,this.pointData=null,this.numberOfCells=0,this.cellBufferSize=0,this.cells=null,this.numberOfCellPixels=0,this.cellData=null}},OA=xA;var JA=class{pointPixelComponentType;pointPixelType;pointPixelComponents;cellPixelComponentType;cellPixelType;cellPixelComponents;constructor(e=k.Float32,t=G.Scalar,r=1,o=k.Float32,n=G.Scalar,i=1){this.pointPixelComponentType=e,this.pointPixelType=t,this.pointPixelComponents=r,this.cellPixelComponentType=o,this.cellPixelType=n,this.cellPixelComponents=i}},de=JA;var MA=class{polyDataType;name="PolyData";numberOfPoints;points;verticesBufferSize;vertices;linesBufferSize;lines;polygonsBufferSize;polygons;triangleStripsBufferSize;triangleStrips;numberOfPointPixels;pointData;numberOfCellPixels;cellData;constructor(e=new de){this.polyDataType=e,this.polyDataType=e,this.name="PolyData",this.numberOfPoints=0,this.points=new Float32Array,this.verticesBufferSize=0,this.vertices=null,this.linesBufferSize=0,this.lines=null,this.polygonsBufferSize=0,this.polygons=null,this.triangleStripsBufferSize=0,this.triangleStrips=null,this.numberOfPointPixels=0,this.pointData=null,this.numberOfCellPixels=0,this.cellData=null}},HA=MA;var Jt={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},p=Jt;var ye=Symbol("Comlink.proxy"),Mt=Symbol("Comlink.endpoint"),KA=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),IA=Symbol("Comlink.thrown"),he=A=>typeof A=="object"&&A!==null||typeof A=="function",Ht={canHandle:A=>he(A)&&A[ye],serialize(A){let{port1:e,port2:t}=new MessageChannel;return De(A,e),[t,[t]]},deserialize(A){return A.start(),WA(A)}},Yt={canHandle:A=>he(A)&&IA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},we=new Map([["proxy",Ht],["throw",Yt]]);function qt(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function De(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(o){if(!o||!o.data)return;if(!qt(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:n,type:i,path:g}=Object.assign({path:[]},o.data),l=(o.data.argumentList||[]).map(O),B;try{let I=g.slice(0,-1).reduce((Q,C)=>Q[C],A),s=g.reduce((Q,C)=>Q[C],A);switch(i){case"GET":B=s;break;case"SET":I[g.slice(-1)[0]]=O(o.data.value),B=!0;break;case"APPLY":B=s.apply(I,l);break;case"CONSTRUCT":{let Q=new s(...l);B=_t(Q)}break;case"ENDPOINT":{let{port1:Q,port2:C}=new MessageChannel;De(A,C),B=vA(Q,[Q])}break;case"RELEASE":B=void 0;break;default:return}}catch(I){B={value:I,[IA]:0}}Promise.resolve(B).catch(I=>({value:I,[IA]:0})).then(I=>{let[s,Q]=BA(I);e.postMessage(Object.assign(Object.assign({},s),{id:n}),Q),i==="RELEASE"&&(e.removeEventListener("message",r),Se(e),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(I=>{let[s,Q]=BA({value:new TypeError("Unserializable return value"),[IA]:0});e.postMessage(Object.assign(Object.assign({},s),{id:n}),Q)})}),e.start&&e.start()}function Kt(A){return A.constructor.name==="MessagePort"}function Se(A){Kt(A)&&A.close()}function WA(A,e){return qA(A,[],e)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function be(A){return M(A,{type:"RELEASE"}).then(()=>{Se(A)})}var gA=new WeakMap,CA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(gA.get(A)||0)-1;gA.set(A,e),e===0&&be(A)});function Wt(A,e){let t=(gA.get(e)||0)+1;gA.set(e,t),CA&&CA.register(A,e,A)}function vt(A){CA&&CA.unregister(A)}function qA(A,e=[],t=function(){}){let r=!1,o=new Proxy(t,{get(n,i){if(aA(r),i===KA)return()=>{vt(o),be(A),r=!0};if(i==="then"){if(e.length===0)return{then:()=>o};let g=M(A,{type:"GET",path:e.map(l=>l.toString())}).then(O);return g.then.bind(g)}return qA(A,[...e,i])},set(n,i,g){aA(r);let[l,B]=BA(g);return M(A,{type:"SET",path:[...e,i].map(I=>I.toString()),value:l},B).then(O)},apply(n,i,g){aA(r);let l=e[e.length-1];if(l===Mt)return M(A,{type:"ENDPOINT"}).then(O);if(l==="bind")return qA(A,e.slice(0,-1));let[B,I]=me(g);return M(A,{type:"APPLY",path:e.map(s=>s.toString()),argumentList:B},I).then(O)},construct(n,i){aA(r);let[g,l]=me(i);return M(A,{type:"CONSTRUCT",path:e.map(B=>B.toString()),argumentList:g},l).then(O)}});return Wt(o,A),o}function jt(A){return Array.prototype.concat.apply([],A)}function me(A){let e=A.map(BA);return[e.map(t=>t[0]),jt(e.map(t=>t[1]))]}var ke=new WeakMap;function vA(A,e){return ke.set(A,e),A}function _t(A){return Object.assign(A,{[ye]:!0})}function BA(A){for(let[e,t]of we)if(t.canHandle(A)){let[r,o]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},o]}return[{type:"RAW",value:A},ke.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return we.get(A.name).deserialize(A.value);case"RAW":return A.value}}function M(A,e,t){return new Promise(r=>{let o=zt();A.addEventListener("message",function n(i){!i.data||!i.data.id||i.data.id!==o||(A.removeEventListener("message",n),r(i.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:o},e),t)})}function zt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function Z(A,e){return function(){return A.apply(e,arguments)}}var{toString:Vt}=Object.prototype,{getPrototypeOf:zA}=Object,cA=(A=>e=>{let t=Vt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),N=A=>(A=A.toLowerCase(),e=>cA(e)===A),EA=A=>e=>typeof e===A,{isArray:H}=Array,X=EA("undefined");function Zt(A){return A!==null&&!X(A)&&A.constructor!==null&&!X(A.constructor)&&R(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var Ne=N("ArrayBuffer");function Xt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&Ne(A.buffer),e}var $t=EA("string"),R=EA("function"),Te=EA("number"),QA=A=>A!==null&&typeof A=="object",Ar=A=>A===!0||A===!1,lA=A=>{if(cA(A)!=="object")return!1;let e=zA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},er=N("Date"),tr=N("File"),rr=N("Blob"),or=N("FileList"),nr=A=>QA(A)&&R(A.pipe),ir=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||R(A.append)&&((e=cA(A))==="formdata"||e==="object"&&R(A.toString)&&A.toString()==="[object FormData]"))},sr=N("URLSearchParams"),ar=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function $(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,o;if(typeof A!="object"&&(A=[A]),H(A))for(r=0,o=A.length;r<o;r++)e.call(null,A[r],r,A);else{let n=t?Object.getOwnPropertyNames(A):Object.keys(A),i=n.length,g;for(r=0;r<i;r++)g=n[r],e.call(null,A[g],g,A)}}function Ge(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,o;for(;r-- >0;)if(o=t[r],e===o.toLowerCase())return o;return null}var Pe=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Le=A=>!X(A)&&A!==Pe;function _A(){let{caseless:A}=Le(this)&&this||{},e={},t=(r,o)=>{let n=A&&Ge(e,o)||o;lA(e[n])&&lA(r)?e[n]=_A(e[n],r):lA(r)?e[n]=_A({},r):H(r)?e[n]=r.slice():e[n]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&$(arguments[r],t);return e}var Ir=(A,e,t,{allOwnKeys:r}={})=>($(e,(o,n)=>{t&&R(o)?A[n]=Z(o,t):A[n]=o},{allOwnKeys:r}),A),gr=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Cr=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Br=(A,e,t,r)=>{let o,n,i,g={};if(e=e||{},A==null)return e;do{for(o=Object.getOwnPropertyNames(A),n=o.length;n-- >0;)i=o[n],(!r||r(i,A,e))&&!g[i]&&(e[i]=A[i],g[i]=!0);A=t!==!1&&zA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},lr=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},cr=A=>{if(!A)return null;if(H(A))return A;let e=A.length;if(!Te(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Er=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&zA(Uint8Array)),Qr=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),o;for(;(o=r.next())&&!o.done;){let n=o.value;e.call(A,n[0],n[1])}},ur=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},fr=N("HTMLFormElement"),pr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,o){return r.toUpperCase()+o}),Fe=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),dr=N("RegExp"),xe=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};$(t,(o,n)=>{let i;(i=e(o,n,A))!==!1&&(r[n]=i||o)}),Object.defineProperties(A,r)},mr=A=>{xe(A,(e,t)=>{if(R(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(R(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},yr=(A,e)=>{let t={},r=o=>{o.forEach(n=>{t[n]=!0})};return H(A)?r(A):r(String(A).split(e)),t},hr=()=>{},wr=(A,e)=>(A=+A,Number.isFinite(A)?A:e),jA="abcdefghijklmnopqrstuvwxyz",Ue="0123456789",Oe={DIGIT:Ue,ALPHA:jA,ALPHA_DIGIT:jA+jA.toUpperCase()+Ue},Dr=(A=16,e=Oe.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function Sr(A){return!!(A&&R(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var br=A=>{let e=new Array(10),t=(r,o)=>{if(QA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[o]=r;let n=H(r)?[]:{};return $(r,(i,g)=>{let l=t(i,o+1);!X(l)&&(n[g]=l)}),e[o]=void 0,n}}return r};return t(A,0)},kr=N("AsyncFunction"),Rr=A=>A&&(QA(A)||R(A))&&R(A.then)&&R(A.catch),a={isArray:H,isArrayBuffer:Ne,isBuffer:Zt,isFormData:ir,isArrayBufferView:Xt,isString:$t,isNumber:Te,isBoolean:Ar,isObject:QA,isPlainObject:lA,isUndefined:X,isDate:er,isFile:tr,isBlob:rr,isRegExp:dr,isFunction:R,isStream:nr,isURLSearchParams:sr,isTypedArray:Er,isFileList:or,forEach:$,merge:_A,extend:Ir,trim:ar,stripBOM:gr,inherits:Cr,toFlatObject:Br,kindOf:cA,kindOfTest:N,endsWith:lr,toArray:cr,forEachEntry:Qr,matchAll:ur,isHTMLForm:fr,hasOwnProperty:Fe,hasOwnProp:Fe,reduceDescriptors:xe,freezeMethods:mr,toObjectSet:yr,toCamelCase:pr,noop:hr,toFiniteNumber:wr,findKey:Ge,global:Pe,isContextDefined:Le,ALPHABET:Oe,generateString:Dr,isSpecCompliantForm:Sr,toJSONObject:br,isAsyncFn:kr,isThenable:Rr};function Y(A,e,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o)}a.inherits(Y,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:a.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Je=Y.prototype,Me={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Me[A]={value:A}});Object.defineProperties(Y,Me);Object.defineProperty(Je,"isAxiosError",{value:!0});Y.from=(A,e,t,r,o,n)=>{let i=Object.create(Je);return a.toFlatObject(A,i,function(l){return l!==Error.prototype},g=>g!=="isAxiosError"),Y.call(i,A.message,e,t,r,o),i.cause=A,i.name=A.name,n&&Object.assign(i,n),i};var f=Y;var uA=null;function VA(A){return a.isPlainObject(A)||a.isArray(A)}function Ye(A){return a.endsWith(A,"[]")?A.slice(0,-2):A}function He(A,e,t){return A?A.concat(e).map(function(o,n){return o=Ye(o),!t&&n?"["+o+"]":o}).join(t?".":""):e}function Fr(A){return a.isArray(A)&&!A.some(VA)}var Ur=a.toFlatObject(a,{},null,function(e){return/^is[A-Z]/.test(e)});function Nr(A,e,t){if(!a.isObject(A))throw new TypeError("target must be an object");e=e||new(uA||FormData),t=a.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(E,u){return!a.isUndefined(u[E])});let r=t.metaTokens,o=t.visitor||I,n=t.dots,i=t.indexes,l=(t.Blob||typeof Blob<"u"&&Blob)&&a.isSpecCompliantForm(e);if(!a.isFunction(o))throw new TypeError("visitor must be a function");function B(c){if(c===null)return"";if(a.isDate(c))return c.toISOString();if(!l&&a.isBlob(c))throw new f("Blob is not supported. Use a Buffer instead.");return a.isArrayBuffer(c)||a.isTypedArray(c)?l&&typeof Blob=="function"?new Blob([c]):Buffer.from(c):c}function I(c,E,u){let d=c;if(c&&!u&&typeof c=="object"){if(a.endsWith(E,"{}"))E=r?E:E.slice(0,-2),c=JSON.stringify(c);else if(a.isArray(c)&&Fr(c)||(a.isFileList(c)||a.endsWith(E,"[]"))&&(d=a.toArray(c)))return E=Ye(E),d.forEach(function(U,Ft){!(a.isUndefined(U)||U===null)&&e.append(i===!0?He([E],Ft,n):i===null?E:E+"[]",B(U))}),!1}return VA(c)?!0:(e.append(He(u,E,n),B(c)),!1)}let s=[],Q=Object.assign(Ur,{defaultVisitor:I,convertValue:B,isVisitable:VA});function C(c,E){if(!a.isUndefined(c)){if(s.indexOf(c)!==-1)throw Error("Circular reference detected in "+E.join("."));s.push(c),a.forEach(c,function(d,F){(!(a.isUndefined(d)||d===null)&&o.call(e,d,a.isString(F)?F.trim():F,E,Q))===!0&&C(d,E?E.concat(F):[F])}),s.pop()}}if(!a.isObject(A))throw new TypeError("data must be an object");return C(A),e}var P=Nr;function qe(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function Ke(A,e){this._pairs=[],A&&P(A,this,e)}var We=Ke.prototype;We.append=function(e,t){this._pairs.push([e,t])};We.toString=function(e){let t=e?function(r){return e.call(this,r,qe)}:qe;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var fA=Ke;function Tr(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function AA(A,e,t){if(!e)return A;let r=t&&t.encode||Tr,o=t&&t.serialize,n;if(o?n=o(e,t):n=a.isURLSearchParams(e)?e.toString():new fA(e,t).toString(r),n){let i=A.indexOf("#");i!==-1&&(A=A.slice(0,i)),A+=(A.indexOf("?")===-1?"?":"&")+n}return A}var ZA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){a.forEach(this.handlers,function(r){r!==null&&e(r)})}},XA=ZA;var pA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var ve=typeof URLSearchParams<"u"?URLSearchParams:fA;var je=typeof FormData<"u"?FormData:null;var _e=typeof Blob<"u"?Blob:null;var ze={isBrowser:!0,classes:{URLSearchParams:ve,FormData:je,Blob:_e},protocols:["http","https","file","blob","url","data"]};var $A={};Nt($A,{hasBrowserEnv:()=>Ve,hasStandardBrowserEnv:()=>Gr,hasStandardBrowserWebWorkerEnv:()=>Pr});var Ve=typeof window<"u"&&typeof document<"u",Gr=(A=>Ve&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Pr=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var D={...$A,...ze};function Ae(A,e){return P(A,new D.classes.URLSearchParams,Object.assign({visitor:function(t,r,o,n){return D.isNode&&a.isBuffer(t)?(this.append(r,t.toString("base64")),!1):n.defaultVisitor.apply(this,arguments)}},e))}function Lr(A){return a.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function xr(A){let e={},t=Object.keys(A),r,o=t.length,n;for(r=0;r<o;r++)n=t[r],e[n]=A[n];return e}function Or(A){function e(t,r,o,n){let i=t[n++];if(i==="__proto__")return!0;let g=Number.isFinite(+i),l=n>=t.length;return i=!i&&a.isArray(o)?o.length:i,l?(a.hasOwnProp(o,i)?o[i]=[o[i],r]:o[i]=r,!g):((!o[i]||!a.isObject(o[i]))&&(o[i]=[]),e(t,r,o[i],n)&&a.isArray(o[i])&&(o[i]=xr(o[i])),!g)}if(a.isFormData(A)&&a.isFunction(A.entries)){let t={};return a.forEachEntry(A,(r,o)=>{e(Lr(r),o,t,0)}),t}return null}var dA=Or;function Jr(A,e,t){if(a.isString(A))try{return(e||JSON.parse)(A),a.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var ee={transitional:pA,adapter:["xhr","http"],transformRequest:[function(e,t){let r=t.getContentType()||"",o=r.indexOf("application/json")>-1,n=a.isObject(e);if(n&&a.isHTMLForm(e)&&(e=new FormData(e)),a.isFormData(e))return o?JSON.stringify(dA(e)):e;if(a.isArrayBuffer(e)||a.isBuffer(e)||a.isStream(e)||a.isFile(e)||a.isBlob(e))return e;if(a.isArrayBufferView(e))return e.buffer;if(a.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let g;if(n){if(r.indexOf("application/x-www-form-urlencoded")>-1)return Ae(e,this.formSerializer).toString();if((g=a.isFileList(e))||r.indexOf("multipart/form-data")>-1){let l=this.env&&this.env.FormData;return P(g?{"files[]":e}:e,l&&new l,this.formSerializer)}}return n||o?(t.setContentType("application/json",!1),Jr(e)):e}],transformResponse:[function(e){let t=this.transitional||ee.transitional,r=t&&t.forcedJSONParsing,o=this.responseType==="json";if(e&&a.isString(e)&&(r&&!this.responseType||o)){let i=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(e)}catch(g){if(i)throw g.name==="SyntaxError"?f.from(g,f.ERR_BAD_RESPONSE,this,null,this.response):g}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};a.forEach(["delete","get","head","post","put","patch"],A=>{ee.headers[A]={}});var q=ee;var Mr=a.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ze=A=>{let e={},t,r,o;return A&&A.split(`
`).forEach(function(i){o=i.indexOf(":"),t=i.substring(0,o).trim().toLowerCase(),r=i.substring(o+1).trim(),!(!t||e[t]&&Mr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var Xe=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function mA(A){return A===!1||A==null?A:a.isArray(A)?A.map(mA):String(A)}function Hr(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var Yr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function te(A,e,t,r,o){if(a.isFunction(r))return r.call(this,e,t);if(o&&(e=t),!!a.isString(e)){if(a.isString(r))return e.indexOf(r)!==-1;if(a.isRegExp(r))return r.test(e)}}function qr(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function Kr(A,e){let t=a.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(o,n,i){return this[r].call(this,e,o,n,i)},configurable:!0})})}var K=class{constructor(e){e&&this.set(e)}set(e,t,r){let o=this;function n(g,l,B){let I=eA(l);if(!I)throw new Error("header name must be a non-empty string");let s=a.findKey(o,I);(!s||o[s]===void 0||B===!0||B===void 0&&o[s]!==!1)&&(o[s||l]=mA(g))}let i=(g,l)=>a.forEach(g,(B,I)=>n(B,I,l));return a.isPlainObject(e)||e instanceof this.constructor?i(e,t):a.isString(e)&&(e=e.trim())&&!Yr(e)?i(Ze(e),t):e!=null&&n(t,e,r),this}get(e,t){if(e=eA(e),e){let r=a.findKey(this,e);if(r){let o=this[r];if(!t)return o;if(t===!0)return Hr(o);if(a.isFunction(t))return t.call(this,o,r);if(a.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=eA(e),e){let r=a.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||te(this,this[r],r,t)))}return!1}delete(e,t){let r=this,o=!1;function n(i){if(i=eA(i),i){let g=a.findKey(r,i);g&&(!t||te(r,r[g],g,t))&&(delete r[g],o=!0)}}return a.isArray(e)?e.forEach(n):n(e),o}clear(e){let t=Object.keys(this),r=t.length,o=!1;for(;r--;){let n=t[r];(!e||te(this,this[n],n,e,!0))&&(delete this[n],o=!0)}return o}normalize(e){let t=this,r={};return a.forEach(this,(o,n)=>{let i=a.findKey(r,n);if(i){t[i]=mA(o),delete t[n];return}let g=e?qr(n):String(n).trim();g!==n&&delete t[n],t[g]=mA(o),r[g]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return a.forEach(this,(r,o)=>{r!=null&&r!==!1&&(t[o]=e&&a.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(o=>r.set(o)),r}static accessor(e){let r=(this[Xe]=this[Xe]={accessors:{}}).accessors,o=this.prototype;function n(i){let g=eA(i);r[g]||(Kr(o,i),r[g]=!0)}return a.isArray(e)?e.forEach(n):n(e),this}};K.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);a.reduceDescriptors(K.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});a.freezeMethods(K);var S=K;function tA(A,e){let t=this||q,r=e||t,o=S.from(r.headers),n=r.data;return a.forEach(A,function(g){n=g.call(t,n,o.normalize(),e?e.status:void 0)}),o.normalize(),n}function rA(A){return!!(A&&A.__CANCEL__)}function $e(A,e,t){f.call(this,A??"canceled",f.ERR_CANCELED,e,t),this.name="CanceledError"}a.inherits($e,f,{__CANCEL__:!0});var L=$e;function re(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new f("Request failed with status code "+t.status,[f.ERR_BAD_REQUEST,f.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var At=D.hasStandardBrowserEnv?{write(A,e,t,r,o,n){let i=[A+"="+encodeURIComponent(e)];a.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),a.isString(r)&&i.push("path="+r),a.isString(o)&&i.push("domain="+o),n===!0&&i.push("secure"),document.cookie=i.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function oe(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function ne(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function oA(A,e){return A&&!oe(e)?ne(A,e):e}var et=D.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function o(n){let i=n;return e&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=o(window.location.href),function(i){let g=a.isString(i)?o(i):i;return g.protocol===r.protocol&&g.host===r.host}}():function(){return function(){return!0}}();function ie(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Wr(A,e){A=A||10;let t=new Array(A),r=new Array(A),o=0,n=0,i;return e=e!==void 0?e:1e3,function(l){let B=Date.now(),I=r[n];i||(i=B),t[o]=l,r[o]=B;let s=n,Q=0;for(;s!==o;)Q+=t[s++],s=s%A;if(o=(o+1)%A,o===n&&(n=(n+1)%A),B-i<e)return;let C=I&&B-I;return C?Math.round(Q*1e3/C):void 0}}var tt=Wr;function rt(A,e){let t=0,r=tt(50,250);return o=>{let n=o.loaded,i=o.lengthComputable?o.total:void 0,g=n-t,l=r(g),B=n<=i;t=n;let I={loaded:n,total:i,progress:i?n/i:void 0,bytes:g,rate:l||void 0,estimated:l&&i&&B?(i-n)/l:void 0,event:o};I[e?"download":"upload"]=!0,A(I)}}var vr=typeof XMLHttpRequest<"u",ot=vr&&function(A){return new Promise(function(t,r){let o=A.data,n=S.from(A.headers).normalize(),{responseType:i,withXSRFToken:g}=A,l;function B(){A.cancelToken&&A.cancelToken.unsubscribe(l),A.signal&&A.signal.removeEventListener("abort",l)}let I;if(a.isFormData(o)){if(D.hasStandardBrowserEnv||D.hasStandardBrowserWebWorkerEnv)n.setContentType(!1);else if((I=n.getContentType())!==!1){let[E,...u]=I?I.split(";").map(d=>d.trim()).filter(Boolean):[];n.setContentType([E||"multipart/form-data",...u].join("; "))}}let s=new XMLHttpRequest;if(A.auth){let E=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";n.set("Authorization","Basic "+btoa(E+":"+u))}let Q=oA(A.baseURL,A.url);s.open(A.method.toUpperCase(),AA(Q,A.params,A.paramsSerializer),!0),s.timeout=A.timeout;function C(){if(!s)return;let E=S.from("getAllResponseHeaders"in s&&s.getAllResponseHeaders()),d={data:!i||i==="text"||i==="json"?s.responseText:s.response,status:s.status,statusText:s.statusText,headers:E,config:A,request:s};re(function(U){t(U),B()},function(U){r(U),B()},d),s=null}if("onloadend"in s?s.onloadend=C:s.onreadystatechange=function(){!s||s.readyState!==4||s.status===0&&!(s.responseURL&&s.responseURL.indexOf("file:")===0)||setTimeout(C)},s.onabort=function(){s&&(r(new f("Request aborted",f.ECONNABORTED,A,s)),s=null)},s.onerror=function(){r(new f("Network Error",f.ERR_NETWORK,A,s)),s=null},s.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",d=A.transitional||pA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),r(new f(u,d.clarifyTimeoutError?f.ETIMEDOUT:f.ECONNABORTED,A,s)),s=null},D.hasStandardBrowserEnv&&(g&&a.isFunction(g)&&(g=g(A)),g||g!==!1&&et(Q))){let E=A.xsrfHeaderName&&A.xsrfCookieName&&At.read(A.xsrfCookieName);E&&n.set(A.xsrfHeaderName,E)}o===void 0&&n.setContentType(null),"setRequestHeader"in s&&a.forEach(n.toJSON(),function(u,d){s.setRequestHeader(d,u)}),a.isUndefined(A.withCredentials)||(s.withCredentials=!!A.withCredentials),i&&i!=="json"&&(s.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&s.addEventListener("progress",rt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&s.upload&&s.upload.addEventListener("progress",rt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(l=E=>{s&&(r(!E||E.type?new L(null,A,s):E),s.abort(),s=null)},A.cancelToken&&A.cancelToken.subscribe(l),A.signal&&(A.signal.aborted?l():A.signal.addEventListener("abort",l)));let c=ie(Q);if(c&&D.protocols.indexOf(c)===-1){r(new f("Unsupported protocol "+c+":",f.ERR_BAD_REQUEST,A));return}s.send(o||null)})};var se={http:uA,xhr:ot};a.forEach(se,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var nt=A=>`- ${A}`,jr=A=>a.isFunction(A)||A===null||A===!1,yA={getAdapter:A=>{A=a.isArray(A)?A:[A];let{length:e}=A,t,r,o={};for(let n=0;n<e;n++){t=A[n];let i;if(r=t,!jr(t)&&(r=se[(i=String(t)).toLowerCase()],r===void 0))throw new f(`Unknown adapter '${i}'`);if(r)break;o[i||"#"+n]=r}if(!r){let n=Object.entries(o).map(([g,l])=>`adapter ${g} `+(l===!1?"is not supported by the environment":"is not available in the build")),i=e?n.length>1?`since :
`+n.map(nt).join(`
`):" "+nt(n[0]):"as no adapter specified";throw new f("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return r},adapters:se};function ae(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new L(null,A)}function hA(A){return ae(A),A.headers=S.from(A.headers),A.data=tA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),yA.getAdapter(A.adapter||q.adapter)(A).then(function(r){return ae(A),r.data=tA.call(A,A.transformResponse,r),r.headers=S.from(r.headers),r},function(r){return rA(r)||(ae(A),r&&r.response&&(r.response.data=tA.call(A,A.transformResponse,r.response),r.response.headers=S.from(r.response.headers))),Promise.reject(r)})}var it=A=>A instanceof S?{...A}:A;function T(A,e){e=e||{};let t={};function r(B,I,s){return a.isPlainObject(B)&&a.isPlainObject(I)?a.merge.call({caseless:s},B,I):a.isPlainObject(I)?a.merge({},I):a.isArray(I)?I.slice():I}function o(B,I,s){if(a.isUndefined(I)){if(!a.isUndefined(B))return r(void 0,B,s)}else return r(B,I,s)}function n(B,I){if(!a.isUndefined(I))return r(void 0,I)}function i(B,I){if(a.isUndefined(I)){if(!a.isUndefined(B))return r(void 0,B)}else return r(void 0,I)}function g(B,I,s){if(s in e)return r(B,I);if(s in A)return r(void 0,B)}let l={url:n,method:n,data:n,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:g,headers:(B,I)=>o(it(B),it(I),!0)};return a.forEach(Object.keys(Object.assign({},A,e)),function(I){let s=l[I]||o,Q=s(A[I],e[I],I);a.isUndefined(Q)&&s!==g||(t[I]=Q)}),t}var wA="1.6.8";var Ie={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{Ie[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var st={};Ie.transitional=function(e,t,r){function o(n,i){return"[Axios v"+wA+"] Transitional option '"+n+"'"+i+(r?". "+r:"")}return(n,i,g)=>{if(e===!1)throw new f(o(i," has been removed"+(t?" in "+t:"")),f.ERR_DEPRECATED);return t&&!st[i]&&(st[i]=!0,console.warn(o(i," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(n,i,g):!0}};function _r(A,e,t){if(typeof A!="object")throw new f("options must be an object",f.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),o=r.length;for(;o-- >0;){let n=r[o],i=e[n];if(i){let g=A[n],l=g===void 0||i(g,n,A);if(l!==!0)throw new f("option "+n+" must be "+l,f.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new f("Unknown option "+n,f.ERR_BAD_OPTION)}}var DA={assertOptions:_r,validators:Ie};var x=DA.validators,W=class{constructor(e){this.defaults=e,this.interceptors={request:new XA,response:new XA}}async request(e,t){try{return await this._request(e,t)}catch(r){if(r instanceof Error){let o;Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error;let n=o.stack?o.stack.replace(/^.+\n/,""):"";r.stack?n&&!String(r.stack).endsWith(n.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+n):r.stack=n}throw r}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=T(this.defaults,t);let{transitional:r,paramsSerializer:o,headers:n}=t;r!==void 0&&DA.assertOptions(r,{silentJSONParsing:x.transitional(x.boolean),forcedJSONParsing:x.transitional(x.boolean),clarifyTimeoutError:x.transitional(x.boolean)},!1),o!=null&&(a.isFunction(o)?t.paramsSerializer={serialize:o}:DA.assertOptions(o,{encode:x.function,serialize:x.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=n&&a.merge(n.common,n[t.method]);n&&a.forEach(["delete","get","head","post","put","patch","common"],c=>{delete n[c]}),t.headers=S.concat(i,n);let g=[],l=!0;this.interceptors.request.forEach(function(E){typeof E.runWhen=="function"&&E.runWhen(t)===!1||(l=l&&E.synchronous,g.unshift(E.fulfilled,E.rejected))});let B=[];this.interceptors.response.forEach(function(E){B.push(E.fulfilled,E.rejected)});let I,s=0,Q;if(!l){let c=[hA.bind(this),void 0];for(c.unshift.apply(c,g),c.push.apply(c,B),Q=c.length,I=Promise.resolve(t);s<Q;)I=I.then(c[s++],c[s++]);return I}Q=g.length;let C=t;for(s=0;s<Q;){let c=g[s++],E=g[s++];try{C=c(C)}catch(u){E.call(this,u);break}}try{I=hA.call(this,C)}catch(c){return Promise.reject(c)}for(s=0,Q=B.length;s<Q;)I=I.then(B[s++],B[s++]);return I}getUri(e){e=T(this.defaults,e);let t=oA(e.baseURL,e.url);return AA(t,e.params,e.paramsSerializer)}};a.forEach(["delete","get","head","options"],function(e){W.prototype[e]=function(t,r){return this.request(T(r||{},{method:e,url:t,data:(r||{}).data}))}});a.forEach(["post","put","patch"],function(e){function t(r){return function(n,i,g){return this.request(T(g||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:n,data:i}))}}W.prototype[e]=t(),W.prototype[e+"Form"]=t(!0)});var nA=W;var ge=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(n){t=n});let r=this;this.promise.then(o=>{if(!r._listeners)return;let n=r._listeners.length;for(;n-- >0;)r._listeners[n](o);r._listeners=null}),this.promise.then=o=>{let n,i=new Promise(g=>{r.subscribe(g),n=g}).then(o);return i.cancel=function(){r.unsubscribe(n)},i},e(function(n,i,g){r.reason||(r.reason=new L(n,i,g),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(o){e=o}),cancel:e}}},at=ge;function Ce(A){return function(t){return A.apply(null,t)}}function Be(A){return a.isObject(A)&&A.isAxiosError===!0}var le={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(le).forEach(([A,e])=>{le[e]=A});var It=le;function gt(A){let e=new nA(A),t=Z(nA.prototype.request,e);return a.extend(t,nA.prototype,e,{allOwnKeys:!0}),a.extend(t,e,null,{allOwnKeys:!0}),t.create=function(o){return gt(T(A,o))},t}var m=gt(q);m.Axios=nA;m.CanceledError=L;m.CancelToken=at;m.isCancel=rA;m.VERSION=wA;m.toFormData=P;m.AxiosError=f;m.Cancel=m.CanceledError;m.all=function(e){return Promise.all(e)};m.spread=Ce;m.isAxiosError=Be;m.mergeConfig=T;m.AxiosHeaders=S;m.formToJSON=A=>dA(a.isHTMLForm(A)?new FormData(A):A);m.getAdapter=yA.getAdapter;m.HttpStatusCode=It;m.default=m;var v=m;var{Axios:Ms,AxiosError:Hs,CanceledError:Ys,isCancel:qs,CancelToken:Ks,VERSION:Ws,all:vs,Cancel:js,isAxiosError:_s,spread:zs,toFormData:Vs,AxiosHeaders:Zs,HttpStatusCode:Xs,formToJSON:$s,getAdapter:Aa,mergeConfig:ea}=v;async function zr(A,e){let t=A,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let o=await v.get(t,{responseType:"blob",params:e}),n=URL.createObjectURL(o.data);r=new Worker(n,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var iA=zr;function Ct(A){let e=WA(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[KA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function Vr(A,e,t){let r;if(A!=null){let n=A;return n.workerProxy!==void 0?(r=n.workerProxy,{workerProxy:r,worker:n}):Ct(A)}let o=await iA(e,t);return Ct(o)}var Bt=Vr;async function Zr(A,e,t){let r="unknown";typeof A!="string"?r=A.href:A.startsWith("http")?r=A:r=typeof e<"u"?`${e}/${A}`:A,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let o=`${r}.wasm`,i=(await v.get(o,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:i})}var lt=Zr;var ct=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var ut=typeof globalThis.SharedArrayBuffer=="function",Et=new TextEncoder,Qt=new TextDecoder("utf-8");function Xr(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),n=A.fs_stat(e).size,i=null;ut?i=new SharedArrayBuffer(n):i=new ArrayBuffer(n);let g=new Uint8Array(i);return A.fs_read(r,g,0,n,0),A.fs_close(r),g}function ft(A,e,t){let r=null;ut?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let o=new Uint8Array(r),n=new Uint8Array(A.HEAPU8.buffer,e,t);return o.set(n),o}function h(A,e,t,r){let o=0;return e!==null&&(o=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),o)),o}function J(A,e,t){let r=JSON.stringify(e),o=A.lengthBytesUTF8(r)+1,n=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,o]);A.stringToUTF8(r,n,o)}function b(A,e,t,r){let o=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),n=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),i=ft(A,o,n);return w(r,i.buffer)}function SA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.UTF8ToString(t);return JSON.parse(r)}function $r(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(B,I){switch(B.type){case p.TextStream:{let s=Et.encode(B.data.data),Q=h(A,s,I,0),C={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};J(A,C,I);break}case p.JsonCompatible:{let s=Et.encode(JSON.stringify(B.data)),Q=h(A,s,I,0),C={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};J(A,C,I);break}case p.BinaryStream:{let s=B.data.data,Q=h(A,s,I,0),C={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};J(A,C,I);break}case p.TextFile:{A.fs_writeFile(B.data.path,B.data.data);break}case p.BinaryFile:{A.fs_writeFile(B.data.path,B.data.data);break}case p.Image:{let s=B.data,Q=h(A,s.data,I,0),C=h(A,s.direction,I,1),c=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],E={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${C}`,size:s.size,data:`data:application/vnd.itk.address,0:${Q}`,metadata:c};J(A,E,I);break}case p.Mesh:{let s=B.data,Q=h(A,s.points,I,0),C=h(A,s.cells,I,1),c=h(A,s.pointData,I,2),E=h(A,s.cellData,I,3),u={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${C}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${c}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${E}`};J(A,u,I);break}case p.PointSet:{let s=B.data,Q=h(A,s.points,I,0),C=h(A,s.pointData,I,1),c={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${C}`};J(A,c,I);break}case p.PolyData:{let s=B.data,Q=h(A,s.points,I,0),C=h(A,s.vertices,I,1),c=h(A,s.lines,I,2),E=h(A,s.polygons,I,3),u=h(A,s.triangleStrips,I,4),d=h(A,s.pointData,I,5),F=h(A,s.pointData,I,6),U={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${C}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${c}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${E}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${F}`};J(A,U,I);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let o=A.stackSave(),n=0;try{n=A.callMain(e.slice())}catch(B){throw typeof B=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(B)):console.error("Build module in Debug mode for exception message information.")),B}finally{A.stackRestore(o)}let i=A.getModuleStdout(),g=A.getModuleStderr(),l=[];return t!=null&&t.length>0&&n===0&&t.forEach(function(B,I){let s=null;switch(B.type){case p.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]),E=new Uint8Array(A.HEAPU8.buffer,C,c);s={data:Qt.decode(E)};break}case p.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]),E=new Uint8Array(A.HEAPU8.buffer,C,c);s=JSON.parse(Qt.decode(E));break}case p.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,I,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,I,0]);s={data:ft(A,C,c)};break}case p.TextFile:{s={path:B.data.path,data:A.fs_readFile(B.data.path,{encoding:"utf8"})};break}case p.BinaryFile:{s={path:B.data.path,data:Xr(A,B.data.path)};break}case p.Image:{let C=SA(A,I);C.data=b(A,I,0,C.imageType.componentType),C.direction=b(A,I,1,k.Float64),C.metadata=new Map(C.metadata),s=C;break}case p.Mesh:{let C=SA(A,I);C.numberOfPoints>0?C.points=b(A,I,0,C.meshType.pointComponentType):C.points=w(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=b(A,I,1,C.meshType.cellComponentType):C.cells=w(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=b(A,I,2,C.meshType.pointPixelComponentType):C.pointData=w(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=b(A,I,3,C.meshType.cellPixelComponentType):C.cellData=w(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=C;break}case p.PointSet:{let C=SA(A,I);C.numberOfPoints>0?C.points=b(A,I,0,C.pointSetType.pointComponentType):C.points=w(C.pointSetType.pointComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=b(A,I,1,C.pointSetType.pointPixelComponentType):C.pointData=w(C.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=C;break}case p.PolyData:{let C=SA(A,I);C.numberOfPoints>0?C.points=b(A,I,0,k.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=b(A,I,1,y.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=b(A,I,2,y.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=b(A,I,3,y.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=b(A,I,4,y.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=b(A,I,5,C.polyDataType.pointPixelComponentType):C.pointData=w(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=b(A,I,6,C.polyDataType.cellPixelComponentType):C.cellData=w(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=C;break}default:throw Error("Unsupported output InterfaceType")}let Q={type:B.type,data:s};l.push(Q)}),{returnValue:n,stdout:i,stderr:g,outputs:l}}var pt=$r;var Ao=typeof globalThis.SharedArrayBuffer<"u";function eo(A,e){if(A==null)return[];let t=[];for(let r=0;r<A.length;r++){let o=to(A[r],e);o!==null&&t.push(o)}return t}function to(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),Ao&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var dt=eo;function ro(A){return[A.data,A.direction]}var mt=ro;function oo(A){return[A.points,A.pointData,A.cells,A.cellData]}var yt=oo;function no(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var ht=no;var io;function bA(){return io}var so;function wt(){return so}var ao;function kA(){return ao}var ce=new Map;function Io(){let A=kA();return typeof A>"u"&&(A=null),A}function Dt(){let A=bA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function RA(){let A=wt();return typeof A>"u"&&(A={}),A}async function go(A,e,t){let r=A,o=A;if(typeof A!="string"&&(r=new URL(A.href),o=r.href),ce.has(o))return ce.get(o);{let n=await lt(A,e?.toString()??Dt(),t??RA());return ce.set(o,n),n}}async function Co(A,e,t,r,o){if(!await ct()){let u="WebAssembly SIMD support is required -- please update your browser.";throw alert(u),new Error(u)}let n=o?.webWorker??null;if(n===!1){let u=await go(A.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??RA());return pt(u,e,t,r)}let i=n,g=o?.pipelineWorkerUrl??Io(),l=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:B,worker:I}=await Bt(i,l,o?.pipelineQueryParams??RA());i=I;let s=[];r!=null&&r.length>0&&r.forEach(function(u){if(u.type===p.BinaryStream){let d=u.data.data;s.push(d)}else if(u.type===p.BinaryFile){let d=u.data.data;s.push(d)}else if(u.type===p.Image){let d=u.data;d.data!==null&&s.push(...mt(d))}else if(u.type===p.Mesh){let d=u.data;s.push(...yt(d))}else if(u.type===p.PolyData){let d=u.data;s.push(...ht(d))}});let Q=o?.pipelineBaseUrl??Dt(),C=typeof Q!="string"&&typeof Q?.href<"u"?Q.href:Q,c=r!=null?vA(r,dt(s,o?.noCopy)):null,E=await B.runPipeline(A.toString(),C,e,t,c,o?.pipelineQueryParams??RA());return{returnValue:E.returnValue,stdout:E.stdout,stderr:E.stderr,outputs:E.outputs,webWorker:i}}var sA=Co;var Bo=null;function St(){return Bo}var Ee,lo=`https://cdn.jsdelivr.net/npm/@itk-wasm/compress-stringify@${NA}/dist/pipelines`;function Wa(A){Ee=A}function FA(){if(typeof Ee<"u")return Ee;let A=bA();return typeof A<"u"?A:lo}var Qe,co=null;function bt(A){Qe=A}function j(){if(typeof Qe<"u")return Qe;let A=kA();return typeof A<"u"?A:co}var _=null;async function kt(){let A=j(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;_=await iA(e)}function Xa(A){_=A}async function UA(){if(_!==null)return _.terminated&&await kt(),_;let A=St();return A!==null?A:(await kt(),_)}async function Eo(A,e={}){let t=[{type:p.BinaryStream}],r=[{type:p.BinaryStream,data:{data:A}}],o=[];o.push("0"),o.push("0"),o.push("--memory-io"),e.stringify&&e.stringify&&o.push("--stringify"),e.compressionLevel&&o.push("--compression-level",e.compressionLevel.toString()),e.dataUrlPrefix&&o.push("--data-url-prefix",e.dataUrlPrefix.toString());let g="compress-stringify",l=e?.webWorker;l===void 0&&(l=await UA());let{webWorker:B,returnValue:I,stderr:s,outputs:Q}=await sA(g,o,t,r,{pipelineBaseUrl:FA(),pipelineWorkerUrl:j(),webWorker:l,noCopy:e?.noCopy});if(I!==0&&s!=="")throw new Error(s);return{webWorker:B,output:(Q[0]?.data).data}}var z=Eo;async function Qo(A,e={}){let t=[{type:p.BinaryStream}],r=[{type:p.BinaryStream,data:{data:A}}],o=[];o.push("0"),o.push("0"),o.push("--memory-io"),e.parseString&&e.parseString&&o.push("--parse-string");let g="parse-string-decompress",l=e?.webWorker;l===void 0&&(l=await UA());let{webWorker:B,returnValue:I,stderr:s,outputs:Q}=await sA(g,o,t,r,{pipelineBaseUrl:FA(),pipelineWorkerUrl:j(),webWorker:l,noCopy:e?.noCopy});if(I!==0&&s!=="")throw new Error(s);return{webWorker:B,output:(Q[0]?.data).data}}var V=Qo;async function uo(A,e={}){let r=new PA(A.imageType);r.origin=A.origin,r.spacing=A.spacing,r.size=A.size,r.metadata=A.metadata;let o=new TextDecoder("utf-8"),n=new Uint8Array(A.direction.buffer),i=await z(n,{compressionLevel:5,stringify:!0,webWorker:e.webWorker,noCopy:e.noCopy}),g=i.webWorker;if(r.direction=o.decode(i.output.buffer),A.data===null)r.data=null;else{let l=new Uint8Array(A.data.buffer),B=await z(l,{compressionLevel:5,stringify:!0,webWorker:g,noCopy:e.noCopy});r.data=o.decode(B.output.buffer)}return{encoded:r,webWorker:g}}async function fo(A,e={}){let t=A,r=new TextEncoder,o=new Uint8Array(r.encode(A.direction)),n=await V(o,{parseString:!0,webWorker:e.webWorker,noCopy:!0}),i=n.webWorker;if(t.direction=new Float64Array(n.output.buffer),!t.data)t.data=null;else{let g=new Uint8Array(r.encode(A.data)),l=await V(g,{parseString:!0,webWorker:i,noCopy:!0});t.data=w(t.imageType.componentType,l.output.buffer)}return{decoded:t,webWorker:i}}async function po(A,e={}){let r=new OA(A.meshType);r.name=A.name,r.numberOfPoints=A.numberOfPoints,r.numberOfCells=A.numberOfCells,r.numberOfPointPixels=A.numberOfPointPixels,r.numberOfCellPixels=A.numberOfCellPixels,r.cellBufferSize=A.cellBufferSize;let o=e.webWorker,n=new TextDecoder("utf-8");for(let i of["points","pointData","cells","cellData"])if(A[i]===null)r[i]=null;else{let g=new Uint8Array(A[i].buffer),l=await z(g,{compressionLevel:5,stringify:!0,webWorker:o,noCopy:e.noCopy});o=l.webWorker,r[i]=n.decode(l.output.buffer)}return{encoded:r,webWorker:o}}async function mo(A,e={}){let t=A,r=new Map([["points","pointComponentType"],["pointData","pointPixelComponentType"],["cells","cellComponentType"],["cellData","cellPixelComponentType"]]),o=new TextEncoder,n=e.webWorker;for(let i of["points","pointData","cells","cellData"])if(t[i]===null)t[i]=null;else{let g=new Uint8Array(o.encode(t[i])),l=await V(g,{parseString:!0,webWorker:n,noCopy:!0});n=l.webWorker,t[i]=w(t.meshType[r.get(i)],l.output.buffer)}return{decoded:t,webWorker:n}}async function yo(A,e={}){let r=new HA(A.polyDataType);r.name=A.name,r.numberOfPoints=A.numberOfPoints,r.verticesBufferSize=A.verticesBufferSize,r.linesBufferSize=A.linesBufferSize,r.polygonsBufferSize=A.polygonsBufferSize,r.triangleStripsBufferSize=A.triangleStripsBufferSize,r.numberOfPointPixels=A.numberOfPointPixels,r.numberOfCellPixels=A.numberOfCellPixels;let o=e.webWorker,n=new TextDecoder("utf-8");for(let i of["points","vertices","lines","polygons","triangleStrips","pointData","cellData"])if(A[i]===null)r[i]=null;else{let g=new Uint8Array(A[i].buffer),l=await z(g,{compressionLevel:5,stringify:!0,webWorker:o,noCopy:e.noCopy});o=l.webWorker,r[i]=n.decode(l.output.buffer)}return{encoded:r,webWorker:o}}async function ho(A,e={}){let t=A,r=new Map([["points","float32"],["vertices","uint32"],["lines","uint32"],["polygons","uint32"],["triangleStrips","uint32"],["pointData",t.polyDataType.pointPixelComponentType],["cellData",t.polyDataType.cellPixelComponentType]]),o=new TextEncoder,n=e.webWorker;for(let i of["points","vertices","lines","polygons","triangleStrips","pointData","cellData"])if(t[i]===null)t[i]=null;else{let g=new Uint8Array(o.encode(t[i])),l=await V(g,{parseString:!0,webWorker:n,noCopy:!0});n=l.webWorker,t[i]=w(r.get(i),l.output.buffer)}return{decoded:t,webWorker:n}}var Rt='data:text/javascript;charset=utf-8,var II=Object.defineProperty;var eI=(A,t)=>{for(var I in t)II(A,I,{get:t[I],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gI=Symbol("Comlink.endpoint"),rI=Symbol("Comlink.releaseProxy"),pA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:t,port2:I}=new MessageChannel;return iA(A,t),[I,[I]]},deserialize(A){return A.start(),nI(A)}},iI={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},At=new Map([["proxy",oI],["throw",iI]]);function CI(A,t){for(let I of A)if(t===I||I==="*"||I instanceof RegExp&&I.test(t))return!0;return!1}function iA(A,t=globalThis,I=["*"]){t.addEventListener("message",function e(g){if(!g||!g.data)return;if(!CI(I,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:o,path:n}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),Q;try{let B=n.slice(0,-1).reduce((f,s)=>f[s],A),i=n.reduce((f,s)=>f[s],A);switch(o){case"GET":Q=i;break;case"SET":B[n.slice(-1)[0]]=b(g.data.value),Q=!0;break;case"APPLY":Q=i.apply(B,a);break;case"CONSTRUCT":{let f=new i(...a);Q=aI(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;iA(A,s),Q=FA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(B){Q={value:B,[eA]:0}}Promise.resolve(Q).catch(B=>({value:B,[eA]:0})).then(B=>{let[i,f]=oA(B);t.postMessage(Object.assign(Object.assign({},i),{id:r}),f),o==="RELEASE"&&(t.removeEventListener("message",e),tt(t),pA in A&&typeof A[pA]=="function"&&A[pA]())}).catch(B=>{let[i,f]=oA({value:new TypeError("Unserializable return value"),[eA]:0});t.postMessage(Object.assign(Object.assign({},i),{id:r}),f)})}),t.start&&t.start()}function BI(A){return A.constructor.name==="MessagePort"}function tt(A){BI(A)&&A.close()}function nI(A,t){return SA(A,[],t)}function IA(A){if(A)throw new Error("Proxy has been released and is not useable")}function It(A){return q(A,{type:"RELEASE"}).then(()=>{tt(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(gA.get(A)||0)-1;gA.set(A,t),t===0&&It(A)});function sI(A,t){let I=(gA.get(t)||0)+1;gA.set(t,I),rA&&rA.register(A,t,A)}function QI(A){rA&&rA.unregister(A)}function SA(A,t=[],I=function(){}){let e=!1,g=new Proxy(I,{get(r,o){if(IA(e),o===rI)return()=>{QI(g),It(A),e=!0};if(o==="then"){if(t.length===0)return{then:()=>g};let n=q(A,{type:"GET",path:t.map(a=>a.toString())}).then(b);return n.then.bind(n)}return SA(A,[...t,o])},set(r,o,n){IA(e);let[a,Q]=oA(n);return q(A,{type:"SET",path:[...t,o].map(B=>B.toString()),value:a},Q).then(b)},apply(r,o,n){IA(e);let a=t[t.length-1];if(a===gI)return q(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return SA(A,t.slice(0,-1));let[Q,B]=_A(n);return q(A,{type:"APPLY",path:t.map(i=>i.toString()),argumentList:Q},B).then(b)},construct(r,o){IA(e);let[n,a]=_A(o);return q(A,{type:"CONSTRUCT",path:t.map(Q=>Q.toString()),argumentList:n},a).then(b)}});return sI(g,A),g}function EI(A){return Array.prototype.concat.apply([],A)}function _A(A){let t=A.map(oA);return[t.map(I=>I[0]),EI(t.map(I=>I[1]))]}var et=new WeakMap;function FA(A,t){return et.set(A,t),A}function aI(A){return Object.assign(A,{[vA]:!0})}function oA(A){for(let[t,I]of At)if(I.canHandle(A)){let[e,g]=I.serialize(A);return[{type:"HANDLER",name:t,value:e},g]}return[{type:"RAW",value:A},et.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return At.get(A.name).deserialize(A.value);case"RAW":return A.value}}function q(A,t,I){return new Promise(e=>{let g=cI();A.addEventListener("message",function r(o){!o.data||!o.data.id||o.data.id!==g||(A.removeEventListener("message",r),e(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},t),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,t){return function(){return A.apply(t,arguments)}}var{toString:fI}=Object.prototype,{getPrototypeOf:UA}=Object,BA=(A=>t=>{let I=fI.call(t);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),t=>BA(t)===A),nA=A=>t=>typeof t===A,{isArray:K}=Array,Z=nA("undefined");function lI(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var it=U("ArrayBuffer");function DI(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&it(A.buffer),t}var uI=nA("string"),F=nA("function"),Ct=nA("number"),sA=A=>A!==null&&typeof A=="object",hI=A=>A===!0||A===!1,CA=A=>{if(BA(A)!=="object")return!1;let t=UA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dI=U("Date"),yI=U("File"),wI=U("Blob"),mI=U("FileList"),pI=A=>sA(A)&&F(A.pipe),SI=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((t=BA(A))==="formdata"||t==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},FI=U("URLSearchParams"),RI=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,t,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),K(A))for(e=0,g=A.length;e<g;e++)t.call(null,A[e],e,A);else{let r=I?Object.getOwnPropertyNames(A):Object.keys(A),o=r.length,n;for(e=0;e<o;e++)n=r[e],t.call(null,A[n],n,A)}}function Bt(A,t){t=t.toLowerCase();let I=Object.keys(A),e=I.length,g;for(;e-- >0;)if(g=I[e],t===g.toLowerCase())return g;return null}var nt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,st=A=>!Z(A)&&A!==nt;function NA(){let{caseless:A}=st(this)&&this||{},t={},I=(e,g)=>{let r=A&&Bt(t,g)||g;CA(t[r])&&CA(e)?t[r]=NA(t[r],e):CA(e)?t[r]=NA({},e):K(e)?t[r]=e.slice():t[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],I);return t}var NI=(A,t,I,{allOwnKeys:e}={})=>(V(t,(g,r)=>{I&&F(g)?A[r]=W(g,I):A[r]=g},{allOwnKeys:e}),A),UI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),GI=(A,t,I,e)=>{A.prototype=Object.create(t.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),I&&Object.assign(A.prototype,I)},kI=(A,t,I,e)=>{let g,r,o,n={};if(t=t||{},A==null)return t;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)o=g[r],(!e||e(o,A,t))&&!n[o]&&(t[o]=A[o],n[o]=!0);A=I!==!1&&UA(A)}while(A&&(!I||I(A,t))&&A!==Object.prototype);return t},LI=(A,t,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=t.length;let e=A.indexOf(t,I);return e!==-1&&e===I},JI=A=>{if(!A)return null;if(K(A))return A;let t=A.length;if(!Ct(t))return null;let I=new Array(t);for(;t-- >0;)I[t]=A[t];return I},HI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&UA(Uint8Array)),YI=(A,t)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;t.call(A,r[0],r[1])}},bI=(A,t)=>{let I,e=[];for(;(I=A.exec(t))!==null;)e.push(I);return e},MI=U("HTMLFormElement"),qI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(I,e,g){return e.toUpperCase()+g}),rt=(({hasOwnProperty:A})=>(t,I)=>A.call(t,I))(Object.prototype),KI=U("RegExp"),Qt=(A,t)=>{let I=Object.getOwnPropertyDescriptors(A),e={};V(I,(g,r)=>{let o;(o=t(g,r,A))!==!1&&(e[r]=o||g)}),Object.defineProperties(A,e)},OI=A=>{Qt(A,(t,I)=>{if(F(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let e=A[I];if(F(e)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+I+"\'")})}})},TI=(A,t)=>{let I={},e=g=>{g.forEach(r=>{I[r]=!0})};return K(A)?e(A):e(String(A).split(t)),I},PI=()=>{},xI=(A,t)=>(A=+A,Number.isFinite(A)?A:t),RA="abcdefghijklmnopqrstuvwxyz",ot="0123456789",Et={DIGIT:ot,ALPHA:RA,ALPHA_DIGIT:RA+RA.toUpperCase()+ot},jI=(A=16,t=Et.ALPHA_DIGIT)=>{let I="",{length:e}=t;for(;A--;)I+=t[Math.random()*e|0];return I};function WI(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var ZI=A=>{let t=new Array(10),I=(e,g)=>{if(sA(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[g]=e;let r=K(e)?[]:{};return V(e,(o,n)=>{let a=I(o,g+1);!Z(a)&&(r[n]=a)}),t[g]=void 0,r}}return e};return I(A,0)},VI=U("AsyncFunction"),XI=A=>A&&(sA(A)||F(A))&&F(A.then)&&F(A.catch),C={isArray:K,isArrayBuffer:it,isBuffer:lI,isFormData:SI,isArrayBufferView:DI,isString:uI,isNumber:Ct,isBoolean:hI,isObject:sA,isPlainObject:CA,isUndefined:Z,isDate:dI,isFile:yI,isBlob:wI,isRegExp:KI,isFunction:F,isStream:pI,isURLSearchParams:FI,isTypedArray:HI,isFileList:mI,forEach:V,merge:NA,extend:NI,trim:RI,stripBOM:UI,inherits:GI,toFlatObject:kI,kindOf:BA,kindOfTest:U,endsWith:LI,toArray:JI,forEachEntry:YI,matchAll:bI,isHTMLForm:MI,hasOwnProperty:rt,hasOwnProp:rt,reduceDescriptors:Qt,freezeMethods:OI,toObjectSet:TI,toCamelCase:qI,noop:PI,toFiniteNumber:xI,findKey:Bt,global:nt,isContextDefined:st,ALPHABET:Et,generateString:jI,isSpecCompliantForm:WI,toJSONObject:ZI,isAsyncFn:VI,isThenable:XI};function O(A,t,I,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),I&&(this.config=I),e&&(this.request=e),g&&(this.response=g)}C.inherits(O,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var at=O.prototype,ct={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ct[A]={value:A}});Object.defineProperties(O,ct);Object.defineProperty(at,"isAxiosError",{value:!0});O.from=(A,t,I,e,g,r)=>{let o=Object.create(at);return C.toFlatObject(A,o,function(a){return a!==Error.prototype},n=>n!=="isAxiosError"),O.call(o,A.message,t,I,e,g),o.cause=A,o.name=A.name,r&&Object.assign(o,r),o};var l=O;var QA=null;function GA(A){return C.isPlainObject(A)||C.isArray(A)}function lt(A){return C.endsWith(A,"[]")?A.slice(0,-2):A}function ft(A,t,I){return A?A.concat(t).map(function(g,r){return g=lt(g),!I&&r?"["+g+"]":g}).join(I?".":""):t}function zI(A){return C.isArray(A)&&!A.some(GA)}var _I=C.toFlatObject(C,{},null,function(t){return/^is[A-Z]/.test(t)});function vI(A,t,I){if(!C.isObject(A))throw new TypeError("target must be an object");t=t||new(QA||FormData),I=C.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!C.isUndefined(u[c])});let e=I.metaTokens,g=I.visitor||B,r=I.dots,o=I.indexes,a=(I.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(t);if(!C.isFunction(g))throw new TypeError("visitor must be a function");function Q(E){if(E===null)return"";if(C.isDate(E))return E.toISOString();if(!a&&C.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(E)||C.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function B(E,c,u){let y=E;if(E&&!u&&typeof E=="object"){if(C.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(C.isArray(E)&&zI(E)||(C.isFileList(E)||C.endsWith(c,"[]"))&&(y=C.toArray(E)))return c=lt(c),y.forEach(function(N,tI){!(C.isUndefined(N)||N===null)&&t.append(o===!0?ft([c],tI,r):o===null?c:c+"[]",Q(N))}),!1}return GA(E)?!0:(t.append(ft(u,c,r),Q(E)),!1)}let i=[],f=Object.assign(_I,{defaultVisitor:B,convertValue:Q,isVisitable:GA});function s(E,c){if(!C.isUndefined(E)){if(i.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));i.push(E),C.forEach(E,function(y,R){(!(C.isUndefined(y)||y===null)&&g.call(t,y,C.isString(R)?R.trim():R,c,f))===!0&&s(y,c?c.concat(R):[R])}),i.pop()}}if(!C.isObject(A))throw new TypeError("data must be an object");return s(A),t}var J=vI;function Dt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return t[e]})}function ut(A,t){this._pairs=[],A&&J(A,this,t)}var ht=ut.prototype;ht.append=function(t,I){this._pairs.push([t,I])};ht.toString=function(t){let I=t?function(e){return t.call(this,e,Dt)}:Dt;return this._pairs.map(function(g){return I(g[0])+"="+I(g[1])},"").join("&")};var EA=ut;function $I(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,t,I){if(!t)return A;let e=I&&I.encode||$I,g=I&&I.serialize,r;if(g?r=g(t,I):r=C.isURLSearchParams(t)?t.toString():new EA(t,I).toString(e),r){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var kA=class{constructor(){this.handlers=[]}use(t,I,e){return this.handlers.push({fulfilled:t,rejected:I,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){C.forEach(this.handlers,function(e){e!==null&&t(e)})}},LA=kA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dt=typeof URLSearchParams<"u"?URLSearchParams:EA;var yt=typeof FormData<"u"?FormData:null;var wt=typeof Blob<"u"?Blob:null;var mt={isBrowser:!0,classes:{URLSearchParams:dt,FormData:yt,Blob:wt},protocols:["http","https","file","blob","url","data"]};var JA={};eI(JA,{hasBrowserEnv:()=>pt,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>te});var pt=typeof window<"u"&&typeof document<"u",Ae=(A=>pt&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),te=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...JA,...mt};function HA(A,t){return J(A,new w.classes.URLSearchParams,Object.assign({visitor:function(I,e,g,r){return w.isNode&&C.isBuffer(I)?(this.append(e,I.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Ie(A){return C.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ee(A){let t={},I=Object.keys(A),e,g=I.length,r;for(e=0;e<g;e++)r=I[e],t[r]=A[r];return t}function ge(A){function t(I,e,g,r){let o=I[r++];if(o==="__proto__")return!0;let n=Number.isFinite(+o),a=r>=I.length;return o=!o&&C.isArray(g)?g.length:o,a?(C.hasOwnProp(g,o)?g[o]=[g[o],e]:g[o]=e,!n):((!g[o]||!C.isObject(g[o]))&&(g[o]=[]),t(I,e,g[o],r)&&C.isArray(g[o])&&(g[o]=ee(g[o])),!n)}if(C.isFormData(A)&&C.isFunction(A.entries)){let I={};return C.forEachEntry(A,(e,g)=>{t(Ie(e),g,I,0)}),I}return null}var cA=ge;function re(A,t,I){if(C.isString(A))try{return(t||JSON.parse)(A),C.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(I||JSON.stringify)(A)}var YA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(t,I){let e=I.getContentType()||"",g=e.indexOf("application/json")>-1,r=C.isObject(t);if(r&&C.isHTMLForm(t)&&(t=new FormData(t)),C.isFormData(t))return g?JSON.stringify(cA(t)):t;if(C.isArrayBuffer(t)||C.isBuffer(t)||C.isStream(t)||C.isFile(t)||C.isBlob(t))return t;if(C.isArrayBufferView(t))return t.buffer;if(C.isURLSearchParams(t))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return HA(t,this.formSerializer).toString();if((n=C.isFileList(t))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return J(n?{"files[]":t}:t,a&&new a,this.formSerializer)}}return r||g?(I.setContentType("application/json",!1),re(t)):t}],transformResponse:[function(t){let I=this.transitional||YA.transitional,e=I&&I.forcedJSONParsing,g=this.responseType==="json";if(t&&C.isString(t)&&(e&&!this.responseType||g)){let o=!(I&&I.silentJSONParsing)&&g;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],A=>{YA.headers[A]={}});var T=YA;var oe=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),St=A=>{let t={},I,e,g;return A&&A.split(`%0A`).forEach(function(o){g=o.indexOf(":"),I=o.substring(0,g).trim().toLowerCase(),e=o.substring(g+1).trim(),!(!I||t[I]&&oe[I])&&(I==="set-cookie"?t[I]?t[I].push(e):t[I]=[e]:t[I]=t[I]?t[I]+", "+e:e)}),t};var Ft=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:C.isArray(A)?A.map(fA):String(A)}function ie(A){let t=Object.create(null),I=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=I.exec(A);)t[e[1]]=e[2];return t}var Ce=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function bA(A,t,I,e,g){if(C.isFunction(e))return e.call(this,t,I);if(g&&(t=I),!!C.isString(t)){if(C.isString(e))return t.indexOf(e)!==-1;if(C.isRegExp(e))return e.test(t)}}function Be(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,I,e)=>I.toUpperCase()+e)}function ne(A,t){let I=C.toCamelCase(" "+t);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+I,{value:function(g,r,o){return this[e].call(this,t,g,r,o)},configurable:!0})})}var P=class{constructor(t){t&&this.set(t)}set(t,I,e){let g=this;function r(n,a,Q){let B=z(a);if(!B)throw new Error("header name must be a non-empty string");let i=C.findKey(g,B);(!i||g[i]===void 0||Q===!0||Q===void 0&&g[i]!==!1)&&(g[i||a]=fA(n))}let o=(n,a)=>C.forEach(n,(Q,B)=>r(Q,B,a));return C.isPlainObject(t)||t instanceof this.constructor?o(t,I):C.isString(t)&&(t=t.trim())&&!Ce(t)?o(St(t),I):t!=null&&r(I,t,e),this}get(t,I){if(t=z(t),t){let e=C.findKey(this,t);if(e){let g=this[e];if(!I)return g;if(I===!0)return ie(g);if(C.isFunction(I))return I.call(this,g,e);if(C.isRegExp(I))return I.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,I){if(t=z(t),t){let e=C.findKey(this,t);return!!(e&&this[e]!==void 0&&(!I||bA(this,this[e],e,I)))}return!1}delete(t,I){let e=this,g=!1;function r(o){if(o=z(o),o){let n=C.findKey(e,o);n&&(!I||bA(e,e[n],n,I))&&(delete e[n],g=!0)}}return C.isArray(t)?t.forEach(r):r(t),g}clear(t){let I=Object.keys(this),e=I.length,g=!1;for(;e--;){let r=I[e];(!t||bA(this,this[r],r,t,!0))&&(delete this[r],g=!0)}return g}normalize(t){let I=this,e={};return C.forEach(this,(g,r)=>{let o=C.findKey(e,r);if(o){I[o]=fA(g),delete I[r];return}let n=t?Be(r):String(r).trim();n!==r&&delete I[r],I[n]=fA(g),e[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let I=Object.create(null);return C.forEach(this,(e,g)=>{e!=null&&e!==!1&&(I[g]=t&&C.isArray(e)?e.join(", "):e)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,I])=>t+": "+I).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...I){let e=new this(t);return I.forEach(g=>e.set(g)),e}static accessor(t){let e=(this[Ft]=this[Ft]={accessors:{}}).accessors,g=this.prototype;function r(o){let n=z(o);e[n]||(ne(g,o),e[n]=!0)}return C.isArray(t)?t.forEach(r):r(t),this}};P.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(P.prototype,({value:A},t)=>{let I=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(e){this[I]=e}}});C.freezeMethods(P);var m=P;function _(A,t){let I=this||T,e=t||I,g=m.from(e.headers),r=e.data;return C.forEach(A,function(n){r=n.call(I,r,g.normalize(),t?t.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function Rt(A,t,I){l.call(this,A??"canceled",l.ERR_CANCELED,t,I),this.name="CanceledError"}C.inherits(Rt,l,{__CANCEL__:!0});var H=Rt;function MA(A,t,I){let e=I.config.validateStatus;!I.status||!e||e(I.status)?A(I):t(new l("Request failed with status code "+I.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}var Nt=w.hasStandardBrowserEnv?{write(A,t,I,e,g,r){let o=[A+"="+encodeURIComponent(t)];C.isNumber(I)&&o.push("expires="+new Date(I).toGMTString()),C.isString(e)&&o.push("path="+e),C.isString(g)&&o.push("domain="+g),r===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function qA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function KA(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function $(A,t){return A&&!qA(t)?KA(A,t):t}var Ut=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a"),e;function g(r){let o=r;return t&&(I.setAttribute("href",o),o=I.href),I.setAttribute("href",o),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^%23/,""):"",hostname:I.hostname,port:I.port,pathname:I.pathname.charAt(0)==="/"?I.pathname:"/"+I.pathname}}return e=g(window.location.href),function(o){let n=C.isString(o)?g(o):o;return n.protocol===e.protocol&&n.host===e.host}}():function(){return function(){return!0}}();function OA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function se(A,t){A=A||10;let I=new Array(A),e=new Array(A),g=0,r=0,o;return t=t!==void 0?t:1e3,function(a){let Q=Date.now(),B=e[r];o||(o=Q),I[g]=a,e[g]=Q;let i=r,f=0;for(;i!==g;)f+=I[i++],i=i%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-o<t)return;let s=B&&Q-B;return s?Math.round(f*1e3/s):void 0}}var Gt=se;function kt(A,t){let I=0,e=Gt(50,250);return g=>{let r=g.loaded,o=g.lengthComputable?g.total:void 0,n=r-I,a=e(n),Q=r<=o;I=r;let B={loaded:r,total:o,progress:o?r/o:void 0,bytes:n,rate:a||void 0,estimated:a&&o&&Q?(o-r)/a:void 0,event:g};B[t?"download":"upload"]=!0,A(B)}}var Qe=typeof XMLHttpRequest<"u",Lt=Qe&&function(A){return new Promise(function(I,e){let g=A.data,r=m.from(A.headers).normalize(),{responseType:o,withXSRFToken:n}=A,a;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let B;if(C.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((B=r.getContentType())!==!1){let[c,...u]=B?B.split(";").map(y=>y.trim()).filter(Boolean):[];r.setContentType([c||"multipart/form-data",...u].join("; "))}}let i=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);i.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),i.timeout=A.timeout;function s(){if(!i)return;let c=m.from("getAllResponseHeaders"in i&&i.getAllResponseHeaders()),y={data:!o||o==="text"||o==="json"?i.responseText:i.response,status:i.status,statusText:i.statusText,headers:c,config:A,request:i};MA(function(N){I(N),Q()},function(N){e(N),Q()},y),i=null}if("onloadend"in i?i.onloadend=s:i.onreadystatechange=function(){!i||i.readyState!==4||i.status===0&&!(i.responseURL&&i.responseURL.indexOf("file:")===0)||setTimeout(s)},i.onabort=function(){i&&(e(new l("Request aborted",l.ECONNABORTED,A,i)),i=null)},i.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,i)),i=null},i.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",y=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,i)),i=null},w.hasStandardBrowserEnv&&(n&&C.isFunction(n)&&(n=n(A)),n||n!==!1&&Ut(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&Nt.read(A.xsrfCookieName);c&&r.set(A.xsrfHeaderName,c)}g===void 0&&r.setContentType(null),"setRequestHeader"in i&&C.forEach(r.toJSON(),function(u,y){i.setRequestHeader(y,u)}),C.isUndefined(A.withCredentials)||(i.withCredentials=!!A.withCredentials),o&&o!=="json"&&(i.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&i.addEventListener("progress",kt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&i.upload&&i.upload.addEventListener("progress",kt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{i&&(e(!c||c.type?new H(null,A,i):c),i.abort(),i=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=OA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}i.send(g||null)})};var TA={http:QA,xhr:Lt};C.forEach(TA,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Jt=A=>`- ${A}`,Ee=A=>C.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=C.isArray(A)?A:[A];let{length:t}=A,I,e,g={};for(let r=0;r<t;r++){I=A[r];let o;if(e=I,!Ee(I)&&(e=TA[(o=String(I)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${o}\'`);if(e)break;g[o||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([n,a])=>`adapter ${n} `+(a===!1?"is not supported by the environment":"is not available in the build")),o=t?r.length>1?`since :%0A`+r.map(Jt).join(`%0A`):" "+Jt(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return e},adapters:TA};function PA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new H(null,A)}function DA(A){return PA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||T.adapter)(A).then(function(e){return PA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(PA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var Ht=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let I={};function e(Q,B,i){return C.isPlainObject(Q)&&C.isPlainObject(B)?C.merge.call({caseless:i},Q,B):C.isPlainObject(B)?C.merge({},B):C.isArray(B)?B.slice():B}function g(Q,B,i){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q,i)}else return e(Q,B,i)}function r(Q,B){if(!C.isUndefined(B))return e(void 0,B)}function o(Q,B){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q)}else return e(void 0,B)}function n(Q,B,i){if(i in t)return e(Q,B);if(i in A)return e(void 0,Q)}let a={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(Q,B)=>g(Ht(Q),Ht(B),!0)};return C.forEach(Object.keys(Object.assign({},A,t)),function(B){let i=a[B]||g,f=i(A[B],t[B],B);C.isUndefined(f)&&i!==n||(I[B]=f)}),I}var uA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{xA[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}});var Yt={};xA.transitional=function(t,I,e){function g(r,o){return"[Axios v"+uA+"] Transitional option \'"+r+"\'"+o+(e?". "+e:"")}return(r,o,n)=>{if(t===!1)throw new l(g(o," has been removed"+(I?" in "+I:"")),l.ERR_DEPRECATED);return I&&!Yt[o]&&(Yt[o]=!0,console.warn(g(o," has been deprecated since v"+I+" and will be removed in the near future"))),t?t(r,o,n):!0}};function ae(A,t,I){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],o=t[r];if(o){let n=A[r],a=n===void 0||o(n,r,A);if(a!==!0)throw new l("option "+r+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var Y=hA.validators,x=class{constructor(t){this.defaults=t,this.interceptors={request:new LA,response:new LA}}async request(t,I){try{return await this._request(t,I)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(t,I){typeof t=="string"?(I=I||{},I.url=t):I=t||{},I=k(this.defaults,I);let{transitional:e,paramsSerializer:g,headers:r}=I;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),g!=null&&(C.isFunction(g)?I.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:Y.function,serialize:Y.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let o=r&&C.merge(r.common,r[I.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],E=>{delete r[E]}),I.headers=m.concat(o,r);let n=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(I)===!1||(a=a&&c.synchronous,n.unshift(c.fulfilled,c.rejected))});let Q=[];this.interceptors.response.forEach(function(c){Q.push(c.fulfilled,c.rejected)});let B,i=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,n),E.push.apply(E,Q),f=E.length,B=Promise.resolve(I);i<f;)B=B.then(E[i++],E[i++]);return B}f=n.length;let s=I;for(i=0;i<f;){let E=n[i++],c=n[i++];try{s=E(s)}catch(u){c.call(this,u);break}}try{B=DA.call(this,s)}catch(E){return Promise.reject(E)}for(i=0,f=Q.length;i<f;)B=B.then(Q[i++],Q[i++]);return B}getUri(t){t=k(this.defaults,t);let I=$(t.baseURL,t.url);return X(I,t.params,t.paramsSerializer)}};C.forEach(["delete","get","head","options"],function(t){x.prototype[t]=function(I,e){return this.request(k(e||{},{method:t,url:I,data:(e||{}).data}))}});C.forEach(["post","put","patch"],function(t){function I(e){return function(r,o,n){return this.request(k(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:o}))}}x.prototype[t]=I(),x.prototype[t+"Form"]=I(!0)});var AA=x;var jA=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(r){I=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,o=new Promise(n=>{e.subscribe(n),r=n}).then(g);return o.cancel=function(){e.unsubscribe(r)},o},t(function(r,o,n){e.reason||(e.reason=new H(r,o,n),I(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let I=this._listeners.indexOf(t);I!==-1&&this._listeners.splice(I,1)}static source(){let t;return{token:new A(function(g){t=g}),cancel:t}}},bt=jA;function WA(A){return function(I){return A.apply(null,I)}}function ZA(A){return C.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,t])=>{VA[t]=A});var Mt=VA;function qt(A){let t=new AA(A),I=W(AA.prototype.request,t);return C.extend(I,AA.prototype,t,{allOwnKeys:!0}),C.extend(I,t,null,{allOwnKeys:!0}),I.create=function(g){return qt(k(A,g))},I}var h=qt(T);h.Axios=AA;h.CanceledError=H;h.CancelToken=bt;h.isCancel=v;h.VERSION=uA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(t){return Promise.all(t)};h.spread=WA;h.isAxiosError=ZA;h.mergeConfig=k;h.AxiosHeaders=m;h.formToJSON=A=>cA(C.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=Mt;h.default=h;var dA=h;var{Axios:io,AxiosError:Co,CanceledError:Bo,isCancel:no,CancelToken:so,VERSION:Qo,all:Eo,Cancel:ao,isAxiosError:co,spread:fo,toFormData:lo,AxiosHeaders:Do,HttpStatusCode:uo,formToJSON:ho,getAdapter:yo,mergeConfig:wo}=dA;var tA,L,zA,XA={env:{emscripten_notify_memory_growth:function(A){zA=new Uint8Array(L.exports.memory.buffer)}}},yA=class{init(){return tA||(typeof fetch<"u"?tA=fetch("data:application/wasm;base64,"+Kt).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,XA)).then(this._init):tA=WebAssembly.instantiate(Buffer.from(Kt,"base64"),XA).then(this._init),tA)}_init(t){L=t.instance,XA.env.emscripten_notify_memory_growth(0)}decode(t,I=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=t.byteLength,g=L.exports.malloc(e);zA.set(t,g),I=I||Number(L.exports.ZSTD_findDecompressedSize(g,e));let r=L.exports.malloc(I),o=L.exports.ZSTD_decompress(r,I,g,e),n=zA.slice(r,r+o);return L.exports.free(g),L.exports.free(r),n}},Kt="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9BAWsiDw0AC0EAIQIgA0ECSQ0BA0AgAkEDRwRAIAUgAkECdCIDakGs0AFqIAMgBGooApwBNgIAIAJBAWohAgwBCwsgBCgC3AEhAwtBun8hCSAQIANrIgIgDCAGa0sNACAGBH8gBiADIAIQAiACagVBAAsgDmshCQsgCUGIf0sNBgsCQCAFKALs6gFFDQAgBSAFKQOI6gEgCa18NwOI6gECQCAFKALQ6gEiAiAJaiIIQR9NBEAgDkUNASACICJqIA4gCRACGiAFKALQ6gEgCWohCAwBCyAOIQMgAgRAIAIgImogA0EgIAJrEAIaIAUoAtDqASECIAVBADYC0OoBIAUgBSkDkOoBIAUpALDqAULP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fjcDkOoBIAUgBSkDmOoBIAUpALjqAULP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fjcDmOoBIAUgBSkDoOoBIAUpAMDqAULP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fjcDoOoBIAUgBSkDqOoBIAUpAMjqAULP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fjcDqOoBIAMgAmtBIGohAwsgCSAOaiICIANBIGpPBEAgAkEgayEGIAUpA6jqASE/IAUpA6DqASFAIAUpA5jqASFBIAUpA5DqASFCA0AgAykAGELP1tO+0ser2UJ+ID98Qh+JQoeVr6+Ytt6bnn9+IT8gAykAEELP1tO+0ser2UJ+IEB8Qh+JQoeVr6+Ytt6bnn9+IUAgAykACELP1tO+0ser2UJ+IEF8Qh+JQoeVr6+Ytt6bnn9+IUEgAykAAELP1tO+0ser2UJ+IEJ8Qh+JQoeVr6+Ytt6bnn9+IUIgA0EgaiIDIAZNDQALIAUgPzcDqOoBIAUgQDcDoOoBIAUgQTcDmOoBIAUgQjcDkOoBCyACIANNDQEgIiADIAIgA2siCBACGgsgBSAINgLQ6gELIDUgFWshAyAVIBtqIQIgCSAOaiEOIAQoAjBFDQALICkpAwAiP0J/USA/IA4gHWusUXJFBEBBbCEJDAYLIAUoAuDpAQRAQWohCSADQQRJDQYgBSgC6OoBRQRAICIgBSgC0OoBaiEKAn4gBSkDiOoBIj9CIFoEQCAFKQOY6gEiQEIHiSAFKQOQ6gEiQUIBiXwgBSkDoOoBIkJCDIl8IAUpA6jqASJDQhKJfCBBQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IEBCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0gQkLP1tO+0ser2UJ+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSBDQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9DAELIAUpA6DqAULFz9my8eW66id8CyA/fCE/ICIhBgNAIAogBkEIaiIHTwRAIAYpAABCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/fiA/hUIbiUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSE/IAchBgwBCwsCQCAKIAZBBGoiCEkEQCAGIQgMAQsgBjUAAEKHla+vmLbem55/fiA/hUIXiULP1tO+0ser2UJ+Qvnz3fGZ9pmrFnwhPwsDQCAIIApJBEAgCDEAAELFz9my8eW66id+ID+FQguJQoeVr6+Ytt6bnn9+IT8gCEEBaiEIDAELCyACKAAAID9CIYggP4VCz9bTvtLHq9lCfiI/Qh2IID+FQvnz3fGZ9pmrFn4iP0IgiCA/hadHDQcLIANBBGshAyACQQRqIQILIA4gHWsiCUGJf08NBCABIAlrIQEgCSAdaiEdQQEhPgwBCwtBuH8hByADDQQgHSAAayEHDAQLQWwhCQwBC0G4fyEJC0G4fyEHIAlBdkYgPnENAQsgCSEHCygCAA0AIAVB/OoBaigCACEBIAVB+OoBaigCACEAIAUQGCAFKAKw6wEgACABEBMgBUEANgKw6wEgBSgCpOsBIgIEQAJAAkACQAJAIAIoAgAiAwRAIABFDQIgASADIAARAgAMAQsgAEUNAgsgASACIAARAgAMAgsgAxAGCyACEAYLIAVBADYCpOsBCyAABEAgASAFIAARAgAMAQsgBRAGCyAEQeABaiQAIAcLC6gVCQBBiAgLDQEAAAABAAAAAgAAAAIAQaAIC7MGAQAAAAEAAAACAAAAAgAAACYAAACCAAAAIQUAAEoAAABnCAAAJgAAAMABAACAAAAASQUAAEoAAAC+CAAAKQAAACwCAACAAAAASQUAAEoAAAC+CAAALwAAAMoCAACAAAAAigUAAEoAAACECQAANQAAAHMDAACAAAAAnQUAAEoAAACgCQAAPQAAAIEDAACAAAAA6wUAAEsAAAA+CgAARAAAAJ4DAACAAAAATQYAAEsAAACqCgAASwAAALMDAACAAAAAwQYAAE0AAAAfDQAATQAAAFMEAACAAAAAIwgAAFEAAACmDwAAVAAAAJkEAACAAAAASwkAAFcAAACxEgAAWAAAANoEAACAAAAAbwkAAF0AAAAjFAAAVAAAAEUFAACAAAAAVAoAAGoAAACMFAAAagAAAK8FAACAAAAAdgkAAHwAAABOEAAAfAAAANICAACAAAAAYwcAAJEAAACQBwAAkgAAAAAAAAABAAAAAQAAAAUAAAANAAAAHQAAAD0AAAB9AAAA/QAAAP0BAAD9AwAA/QcAAP0PAAD9HwAA/T8AAP1/AAD9/wAA/f8BAP3/AwD9/wcA/f8PAP3/HwD9/z8A/f9/AP3//wD9//8B/f//A/3//wf9//8P/f//H/3//z/9//9/AAAAAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAGwAAABwAAAAdAAAAHgAAAB8AAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAAFgAAABcAAAAYAAAAGQAAABoAAAAbAAAAHAAAAB0AAAAeAAAAHwAAACAAAAAhAAAAIgAAACMAAAAlAAAAJwAAACkAAAArAAAALwAAADMAAAA7AAAAQwAAAFMAAABjAAAAgwAAAAMBAAADAgAAAwQAAAMIAAADEAAAAyAAAANAAAADgAAAAwABAEHgDwtRAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAwAAAAMAAAAEAAAABAAAAAUAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAEHEEAuLAQEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAASAAAAFAAAABYAAAAYAAAAHAAAACAAAAAoAAAAMAAAAEAAAACAAAAAAAEAAAACAAAABAAAAAgAAAAQAAAAIAAAAEAAAACAAAAAAAEAQZASC+YEAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAwAAAAMAAAAEAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAABAAAABAAAAAgAAAAAAAAAAQABAQYAAAAAAAAEAAAAABAAAAQAAAAAIAAABQEAAAAAAAAFAwAAAAAAAAUEAAAAAAAABQYAAAAAAAAFBwAAAAAAAAUJAAAAAAAABQoAAAAAAAAFDAAAAAAAAAYOAAAAAAABBRAAAAAAAAEFFAAAAAAAAQUWAAAAAAACBRwAAAAAAAMFIAAAAAAABAUwAAAAIAAGBUAAAAAAAAcFgAAAAAAACAYAAQAAAAAKBgAEAAAAAAwGABAAACAAAAQAAAAAAAAABAEAAAAAAAAFAgAAACAAAAUEAAAAAAAABQUAAAAgAAAFBwAAAAAAAAUIAAAAIAAABQoAAAAAAAAFCwAAAAAAAAYNAAAAIAABBRAAAAAAAAEFEgAAACAAAQUWAAAAAAACBRgAAAAgAAMFIAAAAAAAAwUoAAAAAAAGBEAAAAAQAAYEQAAAACAABwWAAAAAAAAJBgACAAAAAAsGAAgAADAAAAQAAAAAEAAABAEAAAAgAAAFAgAAACAAAAUDAAAAIAAABQUAAAAgAAAFBgAAACAAAAUIAAAAIAAABQkAAAAgAAAFCwAAACAAAAUMAAAAAAAABg8AAAAgAAEFEgAAACAAAQUUAAAAIAACBRgAAAAgAAIFHAAAACAAAwUoAAAAIAAEBTAAAAAAABAGAAABAAAADwYAgAAAAAAOBgBAAAAAAA0GACAAQYAXC4cCAQABAQUAAAAAAAAFAAAAAAAABgQ9AAAAAAAJBf0BAAAAAA8F/X8AAAAAFQX9/x8AAAADBQUAAAAAAAcEfQAAAAAADAX9DwAAAAASBf3/AwAAABcF/f9/AAAABQUdAAAAAAAIBP0AAAAAAA4F/T8AAAAAFAX9/w8AAAACBQEAAAAQAAcEfQAAAAAACwX9BwAAAAARBf3/AQAAABYF/f8/AAAABAUNAAAAEAAIBP0AAAAAAA0F/R8AAAAAEwX9/wcAAAABBQEAAAAQAAYEPQAAAAAACgX9AwAAAAAQBf3/AAAAABwF/f//DwAAGwX9//8HAAAaBf3//wMAABkF/f//AQAAGAX9//8AQZAZC4YEAQABAQYAAAAAAAAGAwAAAAAAAAQEAAAAIAAABQUAAAAAAAAFBgAAAAAAAAUIAAAAAAAABQkAAAAAAAAFCwAAAAAAAAYNAAAAAAAABhAAAAAAAAAGEwAAAAAAAAYWAAAAAAAABhkAAAAAAAAGHAAAAAAAAAYfAAAAAAAABiIAAAAAAAEGJQAAAAAAAQYpAAAAAAACBi8AAAAAAAMGOwAAAAAABAZTAAAAAAAHBoMAAAAAAAkGAwIAABAAAAQEAAAAAAAABAUAAAAgAAAFBgAAAAAAAAUHAAAAIAAABQkAAAAAAAAFCgAAAAAAAAYMAAAAAAAABg8AAAAAAAAGEgAAAAAAAAYVAAAAAAAABhgAAAAAAAAGGwAAAAAAAAYeAAAAAAAABiEAAAAAAAEGIwAAAAAAAQYnAAAAAAACBisAAAAAAAMGMwAAAAAABAZDAAAAAAAFBmMAAAAAAAgGAwEAACAAAAQEAAAAMAAABAQAAAAQAAAEBQAAACAAAAUHAAAAIAAABQgAAAAgAAAFCgAAACAAAAULAAAAAAAABg4AAAAAAAAGEQAAAAAAAAYUAAAAAAAABhcAAAAAAAAGGgAAAAAAAAYdAAAAAAAABiAAAAAAABAGAwABAAAADwYDgAAAAAAOBgNAAAAAAA0GAyAAAAAADAYDEAAAAAALBgMIAAAAAAoGAwQAQaQdC9kBAQAAAAMAAAAHAAAADwAAAB8AAAA/AAAAfwAAAP8AAAD/AQAA/wMAAP8HAAD/DwAA/x8AAP8/AAD/fwAA//8AAP//AQD//wMA//8HAP//DwD//x8A//8/AP//fwD///8A////Af///wP///8H////D////x////8/////fwAAAAABAAAAAgAAAAQAAAAAAAAAAgAAAAQAAAAIAAAAAAAAAAEAAAACAAAAAQAAAAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAgAAAAHAAAACAAAAAkAAAAKAAAACwBBgB8LA4ARAQ==";var Ot=new yA,Tt=!1;async function ce(A,t,I){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${t}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await dA.get(`${g}.zst`,{responseType:"arraybuffer",params:I});Tt||(await Ot.init(),Tt=!0);let n=Ot.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:n})}var Pt=ce;var wA=new Map;async function fe(A,t,I){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),wA.has(g)?r=await wA.get(g):(wA.set(g,Pt(e,t,I)),r=await wA.get(g)),r}var xt=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},S=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=ue;function he(A,t){let I=null;switch(A){case S.UInt8:{I=new Uint8Array(t);break}case S.Int8:{I=new Int8Array(t);break}case S.UInt16:{I=new Uint16Array(t);break}case S.Int16:{I=new Int16Array(t);break}case S.UInt32:{I=new Uint32Array(t);break}case S.Int32:{I=new Int32Array(t);break}case S.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(t):I=new Uint8Array(t);break}case S.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(t):I=new Uint8Array(t);break}case j.Float32:{I=new Float32Array(t);break}case j.Float64:{I=new Float64Array(t);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var G=he;var Zt=typeof globalThis.SharedArrayBuffer=="function",jt=new TextEncoder,Wt=new TextDecoder("utf-8");function de(A,t){let I={flags:"r",encoding:"binary"},e=A.fs_open(t,I.flags),r=A.fs_stat(t).size,o=null;Zt?o=new SharedArrayBuffer(r):o=new ArrayBuffer(r);let n=new Uint8Array(o);return A.fs_read(e,n,0,r,0),A.fs_close(e),n}function Vt(A,t,I){let e=null;Zt?e=new SharedArrayBuffer(I):e=new ArrayBuffer(I);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,t,I);return g.set(r),g}function d(A,t,I,e){let g=0;return t!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,e,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),g)),g}function M(A,t,I){let e=JSON.stringify(t),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,g]);A.stringToUTF8(e,r,g)}function p(A,t,I,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,I]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,I]),o=Vt(A,g,r);return G(e,o.buffer)}function mA(A,t){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),e=A.UTF8ToString(I);return JSON.parse(e)}function ye(A,t,I,e){e!=null&&e.length>0&&e.forEach(function(Q,B){switch(Q.type){case D.TextStream:{let i=jt.encode(Q.data.data),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.JsonCompatible:{let i=jt.encode(JSON.stringify(Q.data)),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.BinaryStream:{let i=Q.data.data,f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let i=Q.data,f=d(A,i.data,B,0),s=d(A,i.direction,B,1),E=typeof i.metadata?.entries<"u"?Array.from(i.metadata.entries()):[],c={imageType:i.imageType,name:i.name,origin:i.origin,spacing:i.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:i.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};M(A,c,B);break}case D.Mesh:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.cells,B,1),E=d(A,i.pointData,B,2),c=d(A,i.cellData,B,3),u={meshType:i.meshType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:i.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:i.cellBufferSize,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};M(A,u,B);break}case D.PointSet:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.pointData,B,1),E={pointSetType:i.pointSetType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};M(A,E,B);break}case D.PolyData:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.vertices,B,1),E=d(A,i.lines,B,2),c=d(A,i.polygons,B,3),u=d(A,i.triangleStrips,B,4),y=d(A,i.pointData,B,5),R=d(A,i.pointData,B,6),N={polyDataType:i.polyDataType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:i.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:i.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:i.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:i.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${y}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};M(A,N,B);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(t.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let o=A.getModuleStdout(),n=A.getModuleStderr(),a=[];return I!=null&&I.length>0&&r===0&&I.forEach(function(Q,B){let i=null;switch(Q.type){case D.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i={data:Wt.decode(c)};break}case D.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i=JSON.parse(Wt.decode(c));break}case D.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);i={data:Vt(A,s,E)};break}case D.TextFile:{i={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{i={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let s=mA(A,B);s.data=p(A,B,0,s.imageType.componentType),s.direction=p(A,B,1,j.Float64),s.metadata=new Map(s.metadata),i=s;break}case D.Mesh:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.meshType.pointComponentType):s.points=G(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=p(A,B,1,s.meshType.cellComponentType):s.cells=G(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,2,s.meshType.pointPixelComponentType):s.pointData=G(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,3,s.meshType.cellPixelComponentType):s.cellData=G(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PointSet:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.pointSetType.pointComponentType):s.points=G(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,1,s.pointSetType.pointPixelComponentType):s.pointData=G(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PolyData:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,j.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=p(A,B,1,S.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=p(A,B,2,S.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=p(A,B,3,S.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=p(A,B,4,S.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=p(A,B,5,s.polyDataType.pointPixelComponentType):s.pointData=G(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,6,s.polyDataType.cellPixelComponentType):s.cellData=G(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:i};a.push(f)}),{returnValue:r,stdout:o,stderr:n,outputs:a}}var Xt=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,t){if(A==null)return[];let I=[];for(let e=0;e<A.length;e++){let g=pe(A[e],t);g!==null&&I.push(g)}return I}function pe(A,t){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:t?I:I.slice(0)}var zt=me;function Se(A){return[A.data,A.direction]}var _t=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vt=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $t=Re;async function Ne(A,t,I,e){let g=Xt(A,t,I,e),r=[];return g.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let n=o.data;r.push(n)}else if(o.type===D.Image){let n=o.data;r.push(..._t(n))}else if(o.type===D.Mesh){let n=o.data;r.push(...vt(n))}else if(o.type===D.PolyData){let n=o.data;r.push(...$t(n))}}),FA(g,zt(r,!0))}var AI=Ne;var Ue={runPipeline:async function(A,t,I,e,g,r){let o=await xt(A,t,r);return await AI(o,I,e,g)}};iA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';bt(Rt);export{z as compressStringify,UA as getDefaultWebWorker,j as getPipelineWorkerUrl,FA as getPipelinesBaseUrl,uo as imageToJson,fo as jsonToImage,mo as jsonToMesh,ho as jsonToPolyData,po as meshToJson,V as parseStringDecompress,yo as polyDataToJson,Xa as setDefaultWebWorker,bt as setPipelineWorkerUrl,Wa as setPipelinesBaseUrl,NA as version};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
