Metadata-Version: 2.3
Name: pymodaq_plugins_mock
Version: 5.0.10
Summary: Set of base PyMoDAQ plugins including Mock ones for development
Project-URL: Homepage, https://pymodaq.cnrs.fr
Project-URL: Documentation , https://pymodaq.cnrs.fr
Project-URL: Repository , https://github.com/PyMoDAQ/pymodaq_plugins_mock
Author-email: Sébastien Weber <sebastien.weber@cemes.fr>
Maintainer-email: Sébastien Weber <sebastien.weber@cemes.fr>
License: The MIT License (MIT)
        
        Copyright (c) 2021 Sebastien Weber <sebastien.weber@cemes.fr>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Human Machine Interfaces
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: User Interfaces
Requires-Python: >=3.8
Requires-Dist: pymodaq>=5.0.0
Description-Content-Type: text/x-rst

PyMoDAQ Plugins Mock
####################

.. image:: https://img.shields.io/pypi/v/pymodaq_plugins_mock.svg
   :target: https://pypi.org/project/pymodaq_plugins_mock/
   :alt: Latest Version

.. image:: https://readthedocs.org/projects/pymodaq/badge/?version=latest
   :target: https://pymodaq.readthedocs.io/en/stable/?badge=latest
   :alt: Documentation Status

.. image:: https://github.com/PyMoDAQ/pymodaq_plugins_mock/workflows/Upload%20Python%20Package/badge.svg
    :target: https://github.com/PyMoDAQ/pymodaq_plugins_mock

.. image:: https://github.com/PyMoDAQ/pymodaq_plugins_mock/actions/workflows/Test.yml/badge.svg
    :target: https://github.com/PyMoDAQ/pymodaq_plugins_mock/actions/workflows/Test.yml


Plugins initially developed with PyMoDAQ. Includes Mock plugins that are plugins of virtual instruments dedicated
to code testing for new functionalities or development. From version 4.0.0 onwards, these plugins will only work with
pymodaq > 4.0.0


Authors
=======

* Sebastien J. Weber

Instruments
===========
Below is the list of instruments included in this plugin

Actuators
+++++++++

* **Mock** actuator to test PyMoDAQ functionalities
* **MockTau** mock actuator with characteristic time to reach set value
* **TCP server** to communicate with other DAQ_Move or third party applications
* **LECO director** to communicate with other DAQ_Move or third party applications

Viewer0D
++++++++

* **Mock 0D** detector to test PyMoDAQ functionalities
* **Mock Adaptive** detector to test PyMoDAQ adaptive scan mode
* **TCP server** to communicate with other DAQ_Viewer or third party applications
* **LECO director** to communicate with other DAQ_Viewer or third party applications

Viewer1D
++++++++

* **Mock 1D** detector to test PyMoDAQ functionalities
* **Mock Spectro** detector to test pymodaq_spectro functionalities
* **TCP server** to communicate with other DAQ_Viewer or third party applications
* **LECO director** to communicate with other DAQ_Viewer or third party applications

Viewer2D
++++++++

* **Mock 2D** detector to test PyMoDAQ functionalities
* **TCP server** to communicate with other DAQ_Viewer or third party applications
* **LECO director** to communicate with other DAQ_Viewer or third party applications

ViewerND
++++++++

* **Mock ND** detector to test PyMoDAQ functionalities
* **LECO director** to communicate with other DAQ_Viewer or third party applications
