# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var hr=Object.defineProperty;var wr=(e,A)=>{for(var t in A)hr(e,t,{get:A[t],enumerable:!0})};var Rr=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),Y=Rr;var kr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},h=kr;var br={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},D=br;function Dr(e,A){let t=null;switch(e){case h.UInt8:{t=new Uint8Array(A);break}case h.Int8:{t=new Int8Array(A);break}case h.UInt16:{t=new Uint16Array(A);break}case h.Int16:{t=new Int16Array(A);break}case h.UInt32:{t=new Uint32Array(A);break}case h.Int32:{t=new Int32Array(A);break}case h.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(A):t=new Uint8Array(A);break}case h.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(A):t=new Uint8Array(A);break}case D.Float32:{t=new Float32Array(A);break}case D.Float64:{t=new Float64Array(A);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var N=Dr;var Wr={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},me=Wr;var xe=class{dimension;componentType;pixelType;components;constructor(A=2,t=h.UInt8,r=me.Scalar,o=1){this.dimension=A,this.componentType=t,this.pixelType=r,this.components=o}},gt=xe;function Fr(e,A,t,r,o){e[r+t*A]=o}var It=Fr;var Te=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(A=new gt){this.imageType=A;let t=A.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)It(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},j=Te;function Ur(e){let A=new j(e.imageType);if(A.name=e.name,A.origin=Array.from(e.origin),A.spacing=Array.from(e.spacing),A.direction=e.direction.slice(),A.size=Array.from(e.size),e.data!==null){let t=e.data.constructor;A.data=new t(e.data.length),A.data!=null&&A.data.set(e.data,0)}return A}var Ge=Ur;function Nr(e){if(e.length<1)throw Error("At least one images is required.");let A=e[0];if(A.data===null)throw Error("Image data is null.");let t=new j(A.imageType);t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing);let r=t.imageType.dimension;t.direction=A.direction.slice();let o=r-1;t.size=Array.from(A.size);let i=e.reduce((a,n)=>a+n.size[o],0);t.size[o]=i;let s=t.size.reduce((a,n)=>a*n,1)*t.imageType.components,m=A.data.constructor;t.data=new m(s);let f=t.imageType.components;for(let a=0;a<t.size.length-1;a++)f*=t.size[a];let p=0;if(t.data!=null)for(let a=0;a<e.length;a++)t.data.set(e[a].data,f*p),p+=e[a].size[o];else throw Error("Could not create result image data.");return t}var Je=Nr;function Sr(e){let A=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(A.toLowerCase()==="gz"){let t=e.slice(0,-3).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="cbor"){let t=e.slice(0,-5).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zst"){let t=e.slice(0,-10).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zip"){let t=e.slice(0,-4).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}return A}var te=Sr;function Or(e,A){let t={...e.imageType};if(typeof A<"u"&&typeof A.pixelType<"u"&&(t.pixelType=A.pixelType,A.pixelType===me.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType&&(t.componentType=A.componentType);let r=new j(t);if(r.name=e.name,r.origin=Array.from(e.origin),r.spacing=Array.from(e.spacing),r.direction=e.direction.slice(),r.size=Array.from(e.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(e.metadata)))),e.data!==null)if(typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType)switch(e.imageType.componentType){case h.UInt8:case h.Int8:case h.UInt16:case h.Int16:case h.UInt32:case h.Int32:case D.Float32:case D.Float64:switch(r.imageType.componentType){case h.UInt8:r.data=new Uint8Array(e.data);break;case h.Int8:r.data=new Int8Array(e.data);break;case h.UInt16:r.data=new Uint16Array(e.data);break;case h.Int16:r.data=new Int16Array(e.data);break;case h.UInt32:r.data=new Uint32Array(e.data);break;case h.Int32:r.data=new Int32Array(e.data);break;case D.Float32:r.data=new Float32Array(e.data);break;case D.Float64:r.data=new Float64Array(e.data);break;case h.UInt64:r.data=new BigUint64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asIntN(64,BigInt(e.data[o]));break;case h.Int64:r.data=new BigInt64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asUintN(64,BigInt(e.data[o]));break}break;case h.UInt64:case h.Int64:switch(r.imageType.componentType){case h.UInt8:r.data=new Uint8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int8:r.data=new Int8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt16:r.data=new Uint16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int16:r.data=new Int16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt32:r.data=new Uint32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.Int32:r.data=new Int32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case D.Float32:r.data=new Float32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case D.Float64:r.data=new Float64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case h.UInt64:r.data=new BigUint64Array(e.data);break;case h.Int64:r.data=new BigInt64Array(e.data);break}break}else{let o=e.data.constructor;r.data=new o(e.data.length),r.data!=null&&r.data.set(e.data,0)}return r}var J=Or;var Le=class{fcn;workerQueue;runInfo;constructor(A,t){this.fcn=t,this.workerQueue=new Array(A),this.workerQueue.fill(null),this.runInfo=[]}runTasks(A,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((o,i)=>{r.resolve=o,r.reject=i,r.results=new Array(A.length),r.completedTasks=0,r.addingTasks=!0,A.forEach((s,m)=>{this.addTask(r.index,m,s)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let A=0;A<this.workerQueue.length;A++){let t=this.workerQueue[A];t?.terminate(),this.workerQueue[A]=null}}cancel(A){let t=this.runInfo[A];t!=null&&(t.canceled=!0)}addTask(A,t,r){let o=this.runInfo[A];if(o?.canceled===!0){o.reject("Remaining tasks canceled"),this.clearTask(o.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();o.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:s,...m})=>{if(this.workerQueue.push(s),this.runInfo[A]!==null){if(o.runningWorkers--,o.results[t]=m,o.completedTasks++,o.progressCallback!=null&&o.progressCallback(o.completedTasks,o.results.length),o.taskQueue.length>0){let f=o.taskQueue.shift();this.addTask(A,f[0],f[1])}else if(!o.addingTasks&&o.runningWorkers===0){let f=o.results;o.resolve(f),this.clearTask(o.index)}}}).catch(s=>{o.reject(s),this.clearTask(o.index)})}else o.runningWorkers!==0||o.postponed?o.taskQueue.push([t,r]):(o.postponed=!0,setTimeout(()=>{o.postponed=!1,this.addTask(o.index,t,r)},50))}clearTask(A){this.runInfo[A].results=[],this.runInfo[A].taskQueue=[],this.runInfo[A].progressCallback=null,this.runInfo[A].canceled=null,this.runInfo[A].reject=()=>{},this.runInfo[A].resolve=()=>{}}},Me=Le;var Pr={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},I=Pr;var pt=Symbol("Comlink.proxy"),xr=Symbol("Comlink.endpoint"),qe=Symbol("Comlink.releaseProxy"),He=Symbol("Comlink.finalizer"),fe=Symbol("Comlink.thrown"),mt=e=>typeof e=="object"&&e!==null||typeof e=="function",Tr={canHandle:e=>mt(e)&&e[pt],serialize(e){let{port1:A,port2:t}=new MessageChannel;return ft(e,A),[t,[t]]},deserialize(e){return e.start(),Ke(e)}},Gr={canHandle:e=>mt(e)&&fe in e,serialize({value:e}){let A;return e instanceof Error?A={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:A={isError:!1,value:e},[A,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},ut=new Map([["proxy",Tr],["throw",Gr]]);function Jr(e,A){for(let t of e)if(A===t||t==="*"||t instanceof RegExp&&t.test(A))return!0;return!1}function ft(e,A=globalThis,t=["*"]){A.addEventListener("message",function r(o){if(!o||!o.data)return;if(!Jr(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:i,type:s,path:m}=Object.assign({path:[]},o.data),f=(o.data.argumentList||[]).map(q),p;try{let a=m.slice(0,-1).reduce((u,g)=>u[g],e),n=m.reduce((u,g)=>u[g],e);switch(s){case"GET":p=n;break;case"SET":a[m.slice(-1)[0]]=q(o.data.value),p=!0;break;case"APPLY":p=n.apply(a,f);break;case"CONSTRUCT":{let u=new n(...f);p=qr(u)}break;case"ENDPOINT":{let{port1:u,port2:g}=new MessageChannel;ft(e,g),p=je(u,[u])}break;case"RELEASE":p=void 0;break;default:return}}catch(a){p={value:a,[fe]:0}}Promise.resolve(p).catch(a=>({value:a,[fe]:0})).then(a=>{let[n,u]=de(a);A.postMessage(Object.assign(Object.assign({},n),{id:i}),u),s==="RELEASE"&&(A.removeEventListener("message",r),ct(A),He in e&&typeof e[He]=="function"&&e[He]())}).catch(a=>{let[n,u]=de({value:new TypeError("Unserializable return value"),[fe]:0});A.postMessage(Object.assign(Object.assign({},n),{id:i}),u)})}),A.start&&A.start()}function Lr(e){return e.constructor.name==="MessagePort"}function ct(e){Lr(e)&&e.close()}function Ke(e,A){return Ye(e,[],A)}function ue(e){if(e)throw new Error("Proxy has been released and is not useable")}function Bt(e){return v(e,{type:"RELEASE"}).then(()=>{ct(e)})}var ce=new WeakMap,Be="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let A=(ce.get(e)||0)-1;ce.set(e,A),A===0&&Bt(e)});function Mr(e,A){let t=(ce.get(A)||0)+1;ce.set(A,t),Be&&Be.register(e,A,e)}function Hr(e){Be&&Be.unregister(e)}function Ye(e,A=[],t=function(){}){let r=!1,o=new Proxy(t,{get(i,s){if(ue(r),s===qe)return()=>{Hr(o),Bt(e),r=!0};if(s==="then"){if(A.length===0)return{then:()=>o};let m=v(e,{type:"GET",path:A.map(f=>f.toString())}).then(q);return m.then.bind(m)}return Ye(e,[...A,s])},set(i,s,m){ue(r);let[f,p]=de(m);return v(e,{type:"SET",path:[...A,s].map(a=>a.toString()),value:f},p).then(q)},apply(i,s,m){ue(r);let f=A[A.length-1];if(f===xr)return v(e,{type:"ENDPOINT"}).then(q);if(f==="bind")return Ye(e,A.slice(0,-1));let[p,a]=lt(m);return v(e,{type:"APPLY",path:A.map(n=>n.toString()),argumentList:p},a).then(q)},construct(i,s){ue(r);let[m,f]=lt(s);return v(e,{type:"CONSTRUCT",path:A.map(p=>p.toString()),argumentList:m},f).then(q)}});return Mr(o,e),o}function Yr(e){return Array.prototype.concat.apply([],e)}function lt(e){let A=e.map(de);return[A.map(t=>t[0]),Yr(A.map(t=>t[1]))]}var dt=new WeakMap;function je(e,A){return dt.set(e,A),e}function qr(e){return Object.assign(e,{[pt]:!0})}function de(e){for(let[A,t]of ut)if(t.canHandle(e)){let[r,o]=t.serialize(e);return[{type:"HANDLER",name:A,value:r},o]}return[{type:"RAW",value:e},dt.get(e)||[]]}function q(e){switch(e.type){case"HANDLER":return ut.get(e.name).deserialize(e.value);case"RAW":return e.value}}function v(e,A,t){return new Promise(r=>{let o=Kr();e.addEventListener("message",function i(s){!s.data||!s.data.id||s.data.id!==o||(e.removeEventListener("message",i),r(s.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:o},A),t)})}function Kr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function re(e,A){return function(){return e.apply(A,arguments)}}var{toString:jr}=Object.prototype,{getPrototypeOf:_e}=Object,Ee=(e=>A=>{let t=jr.call(A);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),x=e=>(e=e.toLowerCase(),A=>Ee(A)===e),ye=e=>A=>typeof A===e,{isArray:z}=Array,ie=ye("undefined");function vr(e){return e!==null&&!ie(e)&&e.constructor!==null&&!ie(e.constructor)&&S(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var Qt=x("ArrayBuffer");function zr(e){let A;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?A=ArrayBuffer.isView(e):A=e&&e.buffer&&Qt(e.buffer),A}var _r=ye("string"),S=ye("function"),ht=ye("number"),Qe=e=>e!==null&&typeof e=="object",Vr=e=>e===!0||e===!1,Ce=e=>{if(Ee(e)!=="object")return!1;let A=_e(e);return(A===null||A===Object.prototype||Object.getPrototypeOf(A)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Zr=x("Date"),Xr=x("File"),$r=x("Blob"),ei=x("FileList"),Ai=e=>Qe(e)&&S(e.pipe),ti=e=>{let A;return e&&(typeof FormData=="function"&&e instanceof FormData||S(e.append)&&((A=Ee(e))==="formdata"||A==="object"&&S(e.toString)&&e.toString()==="[object FormData]"))},ri=x("URLSearchParams"),ii=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function oe(e,A,{allOwnKeys:t=!1}={}){if(e===null||typeof e>"u")return;let r,o;if(typeof e!="object"&&(e=[e]),z(e))for(r=0,o=e.length;r<o;r++)A.call(null,e[r],r,e);else{let i=t?Object.getOwnPropertyNames(e):Object.keys(e),s=i.length,m;for(r=0;r<s;r++)m=i[r],A.call(null,e[m],m,e)}}function wt(e,A){A=A.toLowerCase();let t=Object.keys(e),r=t.length,o;for(;r-- >0;)if(o=t[r],A===o.toLowerCase())return o;return null}var Rt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,kt=e=>!ie(e)&&e!==Rt;function ze(){let{caseless:e}=kt(this)&&this||{},A={},t=(r,o)=>{let i=e&&wt(A,o)||o;Ce(A[i])&&Ce(r)?A[i]=ze(A[i],r):Ce(r)?A[i]=ze({},r):z(r)?A[i]=r.slice():A[i]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&oe(arguments[r],t);return A}var oi=(e,A,t,{allOwnKeys:r}={})=>(oe(A,(o,i)=>{t&&S(o)?e[i]=re(o,t):e[i]=o},{allOwnKeys:r}),e),ai=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),ni=(e,A,t,r)=>{e.prototype=Object.create(A.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:A.prototype}),t&&Object.assign(e.prototype,t)},si=(e,A,t,r)=>{let o,i,s,m={};if(A=A||{},e==null)return A;do{for(o=Object.getOwnPropertyNames(e),i=o.length;i-- >0;)s=o[i],(!r||r(s,e,A))&&!m[s]&&(A[s]=e[s],m[s]=!0);e=t!==!1&&_e(e)}while(e&&(!t||t(e,A))&&e!==Object.prototype);return A},gi=(e,A,t)=>{e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=A.length;let r=e.indexOf(A,t);return r!==-1&&r===t},Ii=e=>{if(!e)return null;if(z(e))return e;let A=e.length;if(!ht(A))return null;let t=new Array(A);for(;A-- >0;)t[A]=e[A];return t},li=(e=>A=>e&&A instanceof e)(typeof Uint8Array<"u"&&_e(Uint8Array)),pi=(e,A)=>{let r=(e&&e[Symbol.iterator]).call(e),o;for(;(o=r.next())&&!o.done;){let i=o.value;A.call(e,i[0],i[1])}},mi=(e,A)=>{let t,r=[];for(;(t=e.exec(A))!==null;)r.push(t);return r},ui=x("HTMLFormElement"),fi=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,o){return r.toUpperCase()+o}),Et=(({hasOwnProperty:e})=>(A,t)=>e.call(A,t))(Object.prototype),ci=x("RegExp"),bt=(e,A)=>{let t=Object.getOwnPropertyDescriptors(e),r={};oe(t,(o,i)=>{let s;(s=A(o,i,e))!==!1&&(r[i]=s||o)}),Object.defineProperties(e,r)},Bi=e=>{bt(e,(A,t)=>{if(S(e)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=e[t];if(S(r)){if(A.enumerable=!1,"writable"in A){A.writable=!1;return}A.set||(A.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},di=(e,A)=>{let t={},r=o=>{o.forEach(i=>{t[i]=!0})};return z(e)?r(e):r(String(e).split(A)),t},Ci=()=>{},Ei=(e,A)=>(e=+e,Number.isFinite(e)?e:A),ve="abcdefghijklmnopqrstuvwxyz",yt="0123456789",Dt={DIGIT:yt,ALPHA:ve,ALPHA_DIGIT:ve+ve.toUpperCase()+yt},yi=(e=16,A=Dt.ALPHA_DIGIT)=>{let t="",{length:r}=A;for(;e--;)t+=A[Math.random()*r|0];return t};function Qi(e){return!!(e&&S(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var hi=e=>{let A=new Array(10),t=(r,o)=>{if(Qe(r)){if(A.indexOf(r)>=0)return;if(!("toJSON"in r)){A[o]=r;let i=z(r)?[]:{};return oe(r,(s,m)=>{let f=t(s,o+1);!ie(f)&&(i[m]=f)}),A[o]=void 0,i}}return r};return t(e,0)},wi=x("AsyncFunction"),Ri=e=>e&&(Qe(e)||S(e))&&S(e.then)&&S(e.catch),c={isArray:z,isArrayBuffer:Qt,isBuffer:vr,isFormData:ti,isArrayBufferView:zr,isString:_r,isNumber:ht,isBoolean:Vr,isObject:Qe,isPlainObject:Ce,isUndefined:ie,isDate:Zr,isFile:Xr,isBlob:$r,isRegExp:ci,isFunction:S,isStream:Ai,isURLSearchParams:ri,isTypedArray:li,isFileList:ei,forEach:oe,merge:ze,extend:oi,trim:ii,stripBOM:ai,inherits:ni,toFlatObject:si,kindOf:Ee,kindOfTest:x,endsWith:gi,toArray:Ii,forEachEntry:pi,matchAll:mi,isHTMLForm:ui,hasOwnProperty:Et,hasOwnProp:Et,reduceDescriptors:bt,freezeMethods:Bi,toObjectSet:di,toCamelCase:fi,noop:Ci,toFiniteNumber:Ei,findKey:wt,global:Rt,isContextDefined:kt,ALPHABET:Dt,generateString:yi,isSpecCompliantForm:Qi,toJSONObject:hi,isAsyncFn:wi,isThenable:Ri};function _(e,A,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",A&&(this.code=A),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o)}c.inherits(_,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Wt=_.prototype,Ft={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Ft[e]={value:e}});Object.defineProperties(_,Ft);Object.defineProperty(Wt,"isAxiosError",{value:!0});_.from=(e,A,t,r,o,i)=>{let s=Object.create(Wt);return c.toFlatObject(e,s,function(f){return f!==Error.prototype},m=>m!=="isAxiosError"),_.call(s,e.message,A,t,r,o),s.cause=e,s.name=e.name,i&&Object.assign(s,i),s};var w=_;var he=null;function Ve(e){return c.isPlainObject(e)||c.isArray(e)}function Nt(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function Ut(e,A,t){return e?e.concat(A).map(function(o,i){return o=Nt(o),!t&&i?"["+o+"]":o}).join(t?".":""):A}function ki(e){return c.isArray(e)&&!e.some(Ve)}var bi=c.toFlatObject(c,{},null,function(A){return/^is[A-Z]/.test(A)});function Di(e,A,t){if(!c.isObject(e))throw new TypeError("target must be an object");A=A||new(he||FormData),t=c.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(B,Q){return!c.isUndefined(Q[B])});let r=t.metaTokens,o=t.visitor||a,i=t.dots,s=t.indexes,f=(t.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(A);if(!c.isFunction(o))throw new TypeError("visitor must be a function");function p(l){if(l===null)return"";if(c.isDate(l))return l.toISOString();if(!f&&c.isBlob(l))throw new w("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(l)||c.isTypedArray(l)?f&&typeof Blob=="function"?new Blob([l]):Buffer.from(l):l}function a(l,B,Q){let R=l;if(l&&!Q&&typeof l=="object"){if(c.endsWith(B,"{}"))B=r?B:B.slice(0,-2),l=JSON.stringify(l);else if(c.isArray(l)&&ki(l)||(c.isFileList(l)||c.endsWith(B,"[]"))&&(R=c.toArray(l)))return B=Nt(B),R.forEach(function(P,Qr){!(c.isUndefined(P)||P===null)&&A.append(s===!0?Ut([B],Qr,i):s===null?B:B+"[]",p(P))}),!1}return Ve(l)?!0:(A.append(Ut(Q,B,i),p(l)),!1)}let n=[],u=Object.assign(bi,{defaultVisitor:a,convertValue:p,isVisitable:Ve});function g(l,B){if(!c.isUndefined(l)){if(n.indexOf(l)!==-1)throw Error("Circular reference detected in "+B.join("."));n.push(l),c.forEach(l,function(R,O){(!(c.isUndefined(R)||R===null)&&o.call(A,R,c.isString(O)?O.trim():O,B,u))===!0&&g(R,B?B.concat(O):[O])}),n.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return g(e),A}var L=Di;function St(e){let A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return A[r]})}function Ot(e,A){this._pairs=[],e&&L(e,this,A)}var Pt=Ot.prototype;Pt.append=function(A,t){this._pairs.push([A,t])};Pt.toString=function(A){let t=A?function(r){return A.call(this,r,St)}:St;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var we=Ot;function Wi(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ae(e,A,t){if(!A)return e;let r=t&&t.encode||Wi,o=t&&t.serialize,i;if(o?i=o(A,t):i=c.isURLSearchParams(A)?A.toString():new we(A,t).toString(r),i){let s=e.indexOf("#");s!==-1&&(e=e.slice(0,s)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}var Ze=class{constructor(){this.handlers=[]}use(A,t,r){return this.handlers.push({fulfilled:A,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){c.forEach(this.handlers,function(r){r!==null&&A(r)})}},Xe=Ze;var Re={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var xt=typeof URLSearchParams<"u"?URLSearchParams:we;var Tt=typeof FormData<"u"?FormData:null;var Gt=typeof Blob<"u"?Blob:null;var Jt={isBrowser:!0,classes:{URLSearchParams:xt,FormData:Tt,Blob:Gt},protocols:["http","https","file","blob","url","data"]};var $e={};wr($e,{hasBrowserEnv:()=>Lt,hasStandardBrowserEnv:()=>Fi,hasStandardBrowserWebWorkerEnv:()=>Ui});var Lt=typeof window<"u"&&typeof document<"u",Fi=(e=>Lt&&["ReactNative","NativeScript","NS"].indexOf(e)<0)(typeof navigator<"u"&&navigator.product),Ui=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var W={...$e,...Jt};function eA(e,A){return L(e,new W.classes.URLSearchParams,Object.assign({visitor:function(t,r,o,i){return W.isNode&&c.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},A))}function Ni(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(A=>A[0]==="[]"?"":A[1]||A[0])}function Si(e){let A={},t=Object.keys(e),r,o=t.length,i;for(r=0;r<o;r++)i=t[r],A[i]=e[i];return A}function Oi(e){function A(t,r,o,i){let s=t[i++];if(s==="__proto__")return!0;let m=Number.isFinite(+s),f=i>=t.length;return s=!s&&c.isArray(o)?o.length:s,f?(c.hasOwnProp(o,s)?o[s]=[o[s],r]:o[s]=r,!m):((!o[s]||!c.isObject(o[s]))&&(o[s]=[]),A(t,r,o[s],i)&&c.isArray(o[s])&&(o[s]=Si(o[s])),!m)}if(c.isFormData(e)&&c.isFunction(e.entries)){let t={};return c.forEachEntry(e,(r,o)=>{A(Ni(r),o,t,0)}),t}return null}var ke=Oi;function Pi(e,A,t){if(c.isString(e))try{return(A||JSON.parse)(e),c.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(e)}var AA={transitional:Re,adapter:["xhr","http"],transformRequest:[function(A,t){let r=t.getContentType()||"",o=r.indexOf("application/json")>-1,i=c.isObject(A);if(i&&c.isHTMLForm(A)&&(A=new FormData(A)),c.isFormData(A))return o?JSON.stringify(ke(A)):A;if(c.isArrayBuffer(A)||c.isBuffer(A)||c.isStream(A)||c.isFile(A)||c.isBlob(A))return A;if(c.isArrayBufferView(A))return A.buffer;if(c.isURLSearchParams(A))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let m;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return eA(A,this.formSerializer).toString();if((m=c.isFileList(A))||r.indexOf("multipart/form-data")>-1){let f=this.env&&this.env.FormData;return L(m?{"files[]":A}:A,f&&new f,this.formSerializer)}}return i||o?(t.setContentType("application/json",!1),Pi(A)):A}],transformResponse:[function(A){let t=this.transitional||AA.transitional,r=t&&t.forcedJSONParsing,o=this.responseType==="json";if(A&&c.isString(A)&&(r&&!this.responseType||o)){let s=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(A)}catch(m){if(s)throw m.name==="SyntaxError"?w.from(m,w.ERR_BAD_RESPONSE,this,null,this.response):m}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:W.classes.FormData,Blob:W.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{AA.headers[e]={}});var V=AA;var xi=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Mt=e=>{let A={},t,r,o;return e&&e.split(`
`).forEach(function(s){o=s.indexOf(":"),t=s.substring(0,o).trim().toLowerCase(),r=s.substring(o+1).trim(),!(!t||A[t]&&xi[t])&&(t==="set-cookie"?A[t]?A[t].push(r):A[t]=[r]:A[t]=A[t]?A[t]+", "+r:r)}),A};var Ht=Symbol("internals");function ne(e){return e&&String(e).trim().toLowerCase()}function be(e){return e===!1||e==null?e:c.isArray(e)?e.map(be):String(e)}function Ti(e){let A=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(e);)A[r[1]]=r[2];return A}var Gi=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function tA(e,A,t,r,o){if(c.isFunction(r))return r.call(this,A,t);if(o&&(A=t),!!c.isString(A)){if(c.isString(r))return A.indexOf(r)!==-1;if(c.isRegExp(r))return r.test(A)}}function Ji(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(A,t,r)=>t.toUpperCase()+r)}function Li(e,A){let t=c.toCamelCase(" "+A);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+t,{value:function(o,i,s){return this[r].call(this,A,o,i,s)},configurable:!0})})}var Z=class{constructor(A){A&&this.set(A)}set(A,t,r){let o=this;function i(m,f,p){let a=ne(f);if(!a)throw new Error("header name must be a non-empty string");let n=c.findKey(o,a);(!n||o[n]===void 0||p===!0||p===void 0&&o[n]!==!1)&&(o[n||f]=be(m))}let s=(m,f)=>c.forEach(m,(p,a)=>i(p,a,f));return c.isPlainObject(A)||A instanceof this.constructor?s(A,t):c.isString(A)&&(A=A.trim())&&!Gi(A)?s(Mt(A),t):A!=null&&i(t,A,r),this}get(A,t){if(A=ne(A),A){let r=c.findKey(this,A);if(r){let o=this[r];if(!t)return o;if(t===!0)return Ti(o);if(c.isFunction(t))return t.call(this,o,r);if(c.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,t){if(A=ne(A),A){let r=c.findKey(this,A);return!!(r&&this[r]!==void 0&&(!t||tA(this,this[r],r,t)))}return!1}delete(A,t){let r=this,o=!1;function i(s){if(s=ne(s),s){let m=c.findKey(r,s);m&&(!t||tA(r,r[m],m,t))&&(delete r[m],o=!0)}}return c.isArray(A)?A.forEach(i):i(A),o}clear(A){let t=Object.keys(this),r=t.length,o=!1;for(;r--;){let i=t[r];(!A||tA(this,this[i],i,A,!0))&&(delete this[i],o=!0)}return o}normalize(A){let t=this,r={};return c.forEach(this,(o,i)=>{let s=c.findKey(r,i);if(s){t[s]=be(o),delete t[i];return}let m=A?Ji(i):String(i).trim();m!==i&&delete t[i],t[m]=be(o),r[m]=!0}),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){let t=Object.create(null);return c.forEach(this,(r,o)=>{r!=null&&r!==!1&&(t[o]=A&&c.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([A,t])=>A+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...t){let r=new this(A);return t.forEach(o=>r.set(o)),r}static accessor(A){let r=(this[Ht]=this[Ht]={accessors:{}}).accessors,o=this.prototype;function i(s){let m=ne(s);r[m]||(Li(o,s),r[m]=!0)}return c.isArray(A)?A.forEach(i):i(A),this}};Z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(Z.prototype,({value:e},A)=>{let t=A[0].toUpperCase()+A.slice(1);return{get:()=>e,set(r){this[t]=r}}});c.freezeMethods(Z);var F=Z;function se(e,A){let t=this||V,r=A||t,o=F.from(r.headers),i=r.data;return c.forEach(e,function(m){i=m.call(t,i,o.normalize(),A?A.status:void 0)}),o.normalize(),i}function ge(e){return!!(e&&e.__CANCEL__)}function Yt(e,A,t){w.call(this,e??"canceled",w.ERR_CANCELED,A,t),this.name="CanceledError"}c.inherits(Yt,w,{__CANCEL__:!0});var M=Yt;function rA(e,A,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?e(t):A(new w("Request failed with status code "+t.status,[w.ERR_BAD_REQUEST,w.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var qt=W.hasStandardBrowserEnv?{write(e,A,t,r,o,i){let s=[e+"="+encodeURIComponent(A)];c.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),c.isString(r)&&s.push("path="+r),c.isString(o)&&s.push("domain="+o),i===!0&&s.push("secure"),document.cookie=s.join("; ")},read(e){let A=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return A?decodeURIComponent(A[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function iA(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function oA(e,A){return A?e.replace(/\/?\/$/,"")+"/"+A.replace(/^\/+/,""):e}function Ie(e,A){return e&&!iA(A)?oA(e,A):A}var Kt=W.hasStandardBrowserEnv?function(){let A=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function o(i){let s=i;return A&&(t.setAttribute("href",s),s=t.href),t.setAttribute("href",s),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=o(window.location.href),function(s){let m=c.isString(s)?o(s):s;return m.protocol===r.protocol&&m.host===r.host}}():function(){return function(){return!0}}();function aA(e){let A=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return A&&A[1]||""}function Mi(e,A){e=e||10;let t=new Array(e),r=new Array(e),o=0,i=0,s;return A=A!==void 0?A:1e3,function(f){let p=Date.now(),a=r[i];s||(s=p),t[o]=f,r[o]=p;let n=i,u=0;for(;n!==o;)u+=t[n++],n=n%e;if(o=(o+1)%e,o===i&&(i=(i+1)%e),p-s<A)return;let g=a&&p-a;return g?Math.round(u*1e3/g):void 0}}var jt=Mi;function vt(e,A){let t=0,r=jt(50,250);return o=>{let i=o.loaded,s=o.lengthComputable?o.total:void 0,m=i-t,f=r(m),p=i<=s;t=i;let a={loaded:i,total:s,progress:s?i/s:void 0,bytes:m,rate:f||void 0,estimated:f&&s&&p?(s-i)/f:void 0,event:o};a[A?"download":"upload"]=!0,e(a)}}var Hi=typeof XMLHttpRequest<"u",zt=Hi&&function(e){return new Promise(function(t,r){let o=e.data,i=F.from(e.headers).normalize(),{responseType:s,withXSRFToken:m}=e,f;function p(){e.cancelToken&&e.cancelToken.unsubscribe(f),e.signal&&e.signal.removeEventListener("abort",f)}let a;if(c.isFormData(o)){if(W.hasStandardBrowserEnv||W.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((a=i.getContentType())!==!1){let[B,...Q]=a?a.split(";").map(R=>R.trim()).filter(Boolean):[];i.setContentType([B||"multipart/form-data",...Q].join("; "))}}let n=new XMLHttpRequest;if(e.auth){let B=e.auth.username||"",Q=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";i.set("Authorization","Basic "+btoa(B+":"+Q))}let u=Ie(e.baseURL,e.url);n.open(e.method.toUpperCase(),ae(u,e.params,e.paramsSerializer),!0),n.timeout=e.timeout;function g(){if(!n)return;let B=F.from("getAllResponseHeaders"in n&&n.getAllResponseHeaders()),R={data:!s||s==="text"||s==="json"?n.responseText:n.response,status:n.status,statusText:n.statusText,headers:B,config:e,request:n};rA(function(P){t(P),p()},function(P){r(P),p()},R),n=null}if("onloadend"in n?n.onloadend=g:n.onreadystatechange=function(){!n||n.readyState!==4||n.status===0&&!(n.responseURL&&n.responseURL.indexOf("file:")===0)||setTimeout(g)},n.onabort=function(){n&&(r(new w("Request aborted",w.ECONNABORTED,e,n)),n=null)},n.onerror=function(){r(new w("Network Error",w.ERR_NETWORK,e,n)),n=null},n.ontimeout=function(){let Q=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",R=e.transitional||Re;e.timeoutErrorMessage&&(Q=e.timeoutErrorMessage),r(new w(Q,R.clarifyTimeoutError?w.ETIMEDOUT:w.ECONNABORTED,e,n)),n=null},W.hasStandardBrowserEnv&&(m&&c.isFunction(m)&&(m=m(e)),m||m!==!1&&Kt(u))){let B=e.xsrfHeaderName&&e.xsrfCookieName&&qt.read(e.xsrfCookieName);B&&i.set(e.xsrfHeaderName,B)}o===void 0&&i.setContentType(null),"setRequestHeader"in n&&c.forEach(i.toJSON(),function(Q,R){n.setRequestHeader(R,Q)}),c.isUndefined(e.withCredentials)||(n.withCredentials=!!e.withCredentials),s&&s!=="json"&&(n.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&n.addEventListener("progress",vt(e.onDownloadProgress,!0)),typeof e.onUploadProgress=="function"&&n.upload&&n.upload.addEventListener("progress",vt(e.onUploadProgress)),(e.cancelToken||e.signal)&&(f=B=>{n&&(r(!B||B.type?new M(null,e,n):B),n.abort(),n=null)},e.cancelToken&&e.cancelToken.subscribe(f),e.signal&&(e.signal.aborted?f():e.signal.addEventListener("abort",f)));let l=aA(u);if(l&&W.protocols.indexOf(l)===-1){r(new w("Unsupported protocol "+l+":",w.ERR_BAD_REQUEST,e));return}n.send(o||null)})};var nA={http:he,xhr:zt};c.forEach(nA,(e,A)=>{if(e){try{Object.defineProperty(e,"name",{value:A})}catch{}Object.defineProperty(e,"adapterName",{value:A})}});var _t=e=>`- ${e}`,Yi=e=>c.isFunction(e)||e===null||e===!1,De={getAdapter:e=>{e=c.isArray(e)?e:[e];let{length:A}=e,t,r,o={};for(let i=0;i<A;i++){t=e[i];let s;if(r=t,!Yi(t)&&(r=nA[(s=String(t)).toLowerCase()],r===void 0))throw new w(`Unknown adapter '${s}'`);if(r)break;o[s||"#"+i]=r}if(!r){let i=Object.entries(o).map(([m,f])=>`adapter ${m} `+(f===!1?"is not supported by the environment":"is not available in the build")),s=A?i.length>1?`since :
`+i.map(_t).join(`
`):" "+_t(i[0]):"as no adapter specified";throw new w("There is no suitable adapter to dispatch the request "+s,"ERR_NOT_SUPPORT")}return r},adapters:nA};function sA(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new M(null,e)}function We(e){return sA(e),e.headers=F.from(e.headers),e.data=se.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),De.getAdapter(e.adapter||V.adapter)(e).then(function(r){return sA(e),r.data=se.call(e,e.transformResponse,r),r.headers=F.from(r.headers),r},function(r){return ge(r)||(sA(e),r&&r.response&&(r.response.data=se.call(e,e.transformResponse,r.response),r.response.headers=F.from(r.response.headers))),Promise.reject(r)})}var Vt=e=>e instanceof F?{...e}:e;function G(e,A){A=A||{};let t={};function r(p,a,n){return c.isPlainObject(p)&&c.isPlainObject(a)?c.merge.call({caseless:n},p,a):c.isPlainObject(a)?c.merge({},a):c.isArray(a)?a.slice():a}function o(p,a,n){if(c.isUndefined(a)){if(!c.isUndefined(p))return r(void 0,p,n)}else return r(p,a,n)}function i(p,a){if(!c.isUndefined(a))return r(void 0,a)}function s(p,a){if(c.isUndefined(a)){if(!c.isUndefined(p))return r(void 0,p)}else return r(void 0,a)}function m(p,a,n){if(n in A)return r(p,a);if(n in e)return r(void 0,p)}let f={url:i,method:i,data:i,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,withXSRFToken:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:m,headers:(p,a)=>o(Vt(p),Vt(a),!0)};return c.forEach(Object.keys(Object.assign({},e,A)),function(a){let n=f[a]||o,u=n(e[a],A[a],a);c.isUndefined(u)&&n!==m||(t[a]=u)}),t}var Fe="1.6.8";var gA={};["object","boolean","number","function","string","symbol"].forEach((e,A)=>{gA[e]=function(r){return typeof r===e||"a"+(A<1?"n ":" ")+e}});var Zt={};gA.transitional=function(A,t,r){function o(i,s){return"[Axios v"+Fe+"] Transitional option '"+i+"'"+s+(r?". "+r:"")}return(i,s,m)=>{if(A===!1)throw new w(o(s," has been removed"+(t?" in "+t:"")),w.ERR_DEPRECATED);return t&&!Zt[s]&&(Zt[s]=!0,console.warn(o(s," has been deprecated since v"+t+" and will be removed in the near future"))),A?A(i,s,m):!0}};function qi(e,A,t){if(typeof e!="object")throw new w("options must be an object",w.ERR_BAD_OPTION_VALUE);let r=Object.keys(e),o=r.length;for(;o-- >0;){let i=r[o],s=A[i];if(s){let m=e[i],f=m===void 0||s(m,i,e);if(f!==!0)throw new w("option "+i+" must be "+f,w.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new w("Unknown option "+i,w.ERR_BAD_OPTION)}}var Ue={assertOptions:qi,validators:gA};var H=Ue.validators,X=class{constructor(A){this.defaults=A,this.interceptors={request:new Xe,response:new Xe}}async request(A,t){try{return await this._request(A,t)}catch(r){if(r instanceof Error){let o;Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error;let i=o.stack?o.stack.replace(/^.+\n/,""):"";r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}throw r}}_request(A,t){typeof A=="string"?(t=t||{},t.url=A):t=A||{},t=G(this.defaults,t);let{transitional:r,paramsSerializer:o,headers:i}=t;r!==void 0&&Ue.assertOptions(r,{silentJSONParsing:H.transitional(H.boolean),forcedJSONParsing:H.transitional(H.boolean),clarifyTimeoutError:H.transitional(H.boolean)},!1),o!=null&&(c.isFunction(o)?t.paramsSerializer={serialize:o}:Ue.assertOptions(o,{encode:H.function,serialize:H.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let s=i&&c.merge(i.common,i[t.method]);i&&c.forEach(["delete","get","head","post","put","patch","common"],l=>{delete i[l]}),t.headers=F.concat(s,i);let m=[],f=!0;this.interceptors.request.forEach(function(B){typeof B.runWhen=="function"&&B.runWhen(t)===!1||(f=f&&B.synchronous,m.unshift(B.fulfilled,B.rejected))});let p=[];this.interceptors.response.forEach(function(B){p.push(B.fulfilled,B.rejected)});let a,n=0,u;if(!f){let l=[We.bind(this),void 0];for(l.unshift.apply(l,m),l.push.apply(l,p),u=l.length,a=Promise.resolve(t);n<u;)a=a.then(l[n++],l[n++]);return a}u=m.length;let g=t;for(n=0;n<u;){let l=m[n++],B=m[n++];try{g=l(g)}catch(Q){B.call(this,Q);break}}try{a=We.call(this,g)}catch(l){return Promise.reject(l)}for(n=0,u=p.length;n<u;)a=a.then(p[n++],p[n++]);return a}getUri(A){A=G(this.defaults,A);let t=Ie(A.baseURL,A.url);return ae(t,A.params,A.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(A){X.prototype[A]=function(t,r){return this.request(G(r||{},{method:A,url:t,data:(r||{}).data}))}});c.forEach(["post","put","patch"],function(A){function t(r){return function(i,s,m){return this.request(G(m||{},{method:A,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:s}))}}X.prototype[A]=t(),X.prototype[A+"Form"]=t(!0)});var le=X;var IA=class e{constructor(A){if(typeof A!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(o=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](o);r._listeners=null}),this.promise.then=o=>{let i,s=new Promise(m=>{r.subscribe(m),i=m}).then(o);return s.cancel=function(){r.unsubscribe(i)},s},A(function(i,s,m){r.reason||(r.reason=new M(i,s,m),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){if(this.reason){A(this.reason);return}this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;let t=this._listeners.indexOf(A);t!==-1&&this._listeners.splice(t,1)}static source(){let A;return{token:new e(function(o){A=o}),cancel:A}}},Xt=IA;function lA(e){return function(t){return e.apply(null,t)}}function pA(e){return c.isObject(e)&&e.isAxiosError===!0}var mA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(mA).forEach(([e,A])=>{mA[A]=e});var $t=mA;function er(e){let A=new le(e),t=re(le.prototype.request,A);return c.extend(t,le.prototype,A,{allOwnKeys:!0}),c.extend(t,A,null,{allOwnKeys:!0}),t.create=function(o){return er(G(e,o))},t}var k=er(V);k.Axios=le;k.CanceledError=M;k.CancelToken=Xt;k.isCancel=ge;k.VERSION=Fe;k.toFormData=L;k.AxiosError=w;k.Cancel=k.CanceledError;k.all=function(A){return Promise.all(A)};k.spread=lA;k.isAxiosError=pA;k.mergeConfig=G;k.AxiosHeaders=F;k.formToJSON=e=>ke(c.isHTMLForm(e)?new FormData(e):e);k.getAdapter=De.getAdapter;k.HttpStatusCode=$t;k.default=k;var T=k;var{Axios:xg,AxiosError:Tg,CanceledError:Gg,isCancel:Jg,CancelToken:Lg,VERSION:Mg,all:Hg,Cancel:Yg,isAxiosError:qg,spread:Kg,toFormData:jg,AxiosHeaders:vg,HttpStatusCode:zg,formToJSON:_g,getAdapter:Vg,mergeConfig:Zg}=T;async function Ki(e,A){let t=e,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let o=await T.get(t,{responseType:"blob",params:A}),i=URL.createObjectURL(o.data);r=new Worker(i,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var pe=Ki;function Ar(e){let A=Ke(e),t=e;return t.terminated=!1,t.workerProxy=A,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[qe](),t.originalTerminate()},{workerProxy:A,worker:t}}async function ji(e,A,t){let r;if(e!=null){let i=e;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):Ar(e)}let o=await pe(A,t);return Ar(o)}var tr=ji;async function vi(e,A,t){let r="unknown";typeof e!="string"?r=e.href:e.startsWith("http")?r=e:r=typeof A<"u"?`${A}/${e}`:e,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let o=`${r}.wasm`,s=(await T.get(o,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:s})}var rr=vi;var ir=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var nr=typeof globalThis.SharedArrayBuffer=="function",or=new TextEncoder,ar=new TextDecoder("utf-8");function zi(e,A){let t={flags:"r",encoding:"binary"},r=e.fs_open(A,t.flags),i=e.fs_stat(A).size,s=null;nr?s=new SharedArrayBuffer(i):s=new ArrayBuffer(i);let m=new Uint8Array(s);return e.fs_read(r,m,0,i,0),e.fs_close(r),m}function sr(e,A,t){let r=null;nr?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let o=new Uint8Array(r),i=new Uint8Array(e.HEAPU8.buffer,A,t);return o.set(i),o}function b(e,A,t,r){let o=0;return A!==null&&(o=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,A.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(A.buffer),o)),o}function K(e,A,t){let r=JSON.stringify(A),o=e.lengthBytesUTF8(r)+1,i=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,o]);e.stringToUTF8(r,i,o)}function U(e,A,t,r){let o=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,A,t]),i=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,A,t]),s=sr(e,o,i);return N(r,s.buffer)}function Ne(e,A){let t=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,A]),r=e.UTF8ToString(t);return JSON.parse(r)}function _i(e,A,t,r){r!=null&&r.length>0&&r.forEach(function(p,a){switch(p.type){case I.TextStream:{let n=or.encode(p.data.data),u=b(e,n,a,0),g={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};K(e,g,a);break}case I.JsonCompatible:{let n=or.encode(JSON.stringify(p.data)),u=b(e,n,a,0),g={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};K(e,g,a);break}case I.BinaryStream:{let n=p.data.data,u=b(e,n,a,0),g={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};K(e,g,a);break}case I.TextFile:{e.fs_writeFile(p.data.path,p.data.data);break}case I.BinaryFile:{e.fs_writeFile(p.data.path,p.data.data);break}case I.Image:{let n=p.data,u=b(e,n.data,a,0),g=b(e,n.direction,a,1),l=typeof n.metadata?.entries<"u"?Array.from(n.metadata.entries()):[],B={imageType:n.imageType,name:n.name,origin:n.origin,spacing:n.spacing,direction:`data:application/vnd.itk.address,0:${g}`,size:n.size,data:`data:application/vnd.itk.address,0:${u}`,metadata:l};K(e,B,a);break}case I.Mesh:{let n=p.data,u=b(e,n.points,a,0),g=b(e,n.cells,a,1),l=b(e,n.pointData,a,2),B=b(e,n.cellData,a,3),Q={meshType:n.meshType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,numberOfCells:n.numberOfCells,cells:`data:application/vnd.itk.address,0:${g}`,cellBufferSize:n.cellBufferSize,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${l}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${B}`};K(e,Q,a);break}case I.PointSet:{let n=p.data,u=b(e,n.points,a,0),g=b(e,n.pointData,a,1),l={pointSetType:n.pointSetType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${g}`};K(e,l,a);break}case I.PolyData:{let n=p.data,u=b(e,n.points,a,0),g=b(e,n.vertices,a,1),l=b(e,n.lines,a,2),B=b(e,n.polygons,a,3),Q=b(e,n.triangleStrips,a,4),R=b(e,n.pointData,a,5),O=b(e,n.pointData,a,6),P={polyDataType:n.polyDataType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,verticesBufferSize:n.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${g}`,linesBufferSize:n.linesBufferSize,lines:`data:application/vnd.itk.address,0:${l}`,polygonsBufferSize:n.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${B}`,triangleStripsBufferSize:n.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${Q}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${R}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${O}`};K(e,P,a);break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let o=e.stackSave(),i=0;try{i=e.callMain(A.slice())}catch(p){throw typeof p=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(p)):console.error("Build module in Debug mode for exception message information.")),p}finally{e.stackRestore(o)}let s=e.getModuleStdout(),m=e.getModuleStderr(),f=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(p,a){let n=null;switch(p.type){case I.TextStream:{let g=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,g,l);n={data:ar.decode(B)};break}case I.JsonCompatible:{let g=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,g,l);n=JSON.parse(ar.decode(B));break}case I.BinaryStream:{let g=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),l=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);n={data:sr(e,g,l)};break}case I.TextFile:{n={path:p.data.path,data:e.fs_readFile(p.data.path,{encoding:"utf8"})};break}case I.BinaryFile:{n={path:p.data.path,data:zi(e,p.data.path)};break}case I.Image:{let g=Ne(e,a);g.data=U(e,a,0,g.imageType.componentType),g.direction=U(e,a,1,D.Float64),g.metadata=new Map(g.metadata),n=g;break}case I.Mesh:{let g=Ne(e,a);g.numberOfPoints>0?g.points=U(e,a,0,g.meshType.pointComponentType):g.points=N(g.meshType.pointComponentType,new ArrayBuffer(0)),g.numberOfCells>0?g.cells=U(e,a,1,g.meshType.cellComponentType):g.cells=N(g.meshType.cellComponentType,new ArrayBuffer(0)),g.numberOfPointPixels>0?g.pointData=U(e,a,2,g.meshType.pointPixelComponentType):g.pointData=N(g.meshType.pointPixelComponentType,new ArrayBuffer(0)),g.numberOfCellPixels>0?g.cellData=U(e,a,3,g.meshType.cellPixelComponentType):g.cellData=N(g.meshType.cellPixelComponentType,new ArrayBuffer(0)),n=g;break}case I.PointSet:{let g=Ne(e,a);g.numberOfPoints>0?g.points=U(e,a,0,g.pointSetType.pointComponentType):g.points=N(g.pointSetType.pointComponentType,new ArrayBuffer(0)),g.numberOfPointPixels>0?g.pointData=U(e,a,1,g.pointSetType.pointPixelComponentType):g.pointData=N(g.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),n=g;break}case I.PolyData:{let g=Ne(e,a);g.numberOfPoints>0?g.points=U(e,a,0,D.Float32):g.points=new Float32Array,g.verticesBufferSize>0?g.vertices=U(e,a,1,h.UInt32):g.vertices=new Uint32Array,g.linesBufferSize>0?g.lines=U(e,a,2,h.UInt32):g.lines=new Uint32Array,g.polygonsBufferSize>0?g.polygons=U(e,a,3,h.UInt32):g.polygons=new Uint32Array,g.triangleStripsBufferSize>0?g.triangleStrips=U(e,a,4,h.UInt32):g.triangleStrips=new Uint32Array,g.numberOfPointPixels>0?g.pointData=U(e,a,5,g.polyDataType.pointPixelComponentType):g.pointData=N(g.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),g.numberOfCellPixels>0?g.cellData=U(e,a,6,g.polyDataType.cellPixelComponentType):g.cellData=N(g.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),n=g;break}default:throw Error("Unsupported output InterfaceType")}let u={type:p.type,data:n};f.push(u)}),{returnValue:i,stdout:s,stderr:m,outputs:f}}var gr=_i;var Vi=typeof globalThis.SharedArrayBuffer<"u";function Zi(e,A){if(e==null)return[];let t=[];for(let r=0;r<e.length;r++){let o=Xi(e[r],A);o!==null&&t.push(o)}return t}function Xi(e,A){if(e==null)return null;let t=null;return e.buffer!==void 0?t=e.buffer:e.byteLength!==void 0&&(t=e),Vi&&t instanceof SharedArrayBuffer?null:A?t:t.slice(0)}var Ir=Zi;function $i(e){return[e.data,e.direction]}var lr=$i;function eo(e){return[e.points,e.pointData,e.cells,e.cellData]}var pr=eo;function Ao(e){return[e.points,e.vertices,e.lines,e.polygons,e.triangleStrips,e.pointData,e.cellData]}var mr=Ao;var to;function Se(){return to}var ro;function ur(){return ro}var io;function Oe(){return io}var uA=new Map;function oo(){let e=Oe();return typeof e>"u"&&(e=null),e}function fr(){let e=Se();return typeof e>"u"&&(e=new URL("/pipelines",document.location.origin).href),e}function Pe(){let e=ur();return typeof e>"u"&&(e={}),e}async function ao(e,A,t){let r=e,o=e;if(typeof e!="string"&&(r=new URL(e.href),o=r.href),uA.has(o))return uA.get(o);{let i=await rr(e,A?.toString()??fr(),t??Pe());return uA.set(o,i),i}}async function no(e,A,t,r,o){if(!await ir()){let Q="WebAssembly SIMD support is required -- please update your browser.";throw alert(Q),new Error(Q)}let i=o?.webWorker??null;if(i===!1){let Q=await ao(e.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??Pe());return gr(Q,A,t,r)}let s=i,m=o?.pipelineWorkerUrl??oo(),f=typeof m!="string"&&typeof m?.href<"u"?m.href:m,{workerProxy:p,worker:a}=await tr(s,f,o?.pipelineQueryParams??Pe());s=a;let n=[];r!=null&&r.length>0&&r.forEach(function(Q){if(Q.type===I.BinaryStream){let R=Q.data.data;n.push(R)}else if(Q.type===I.BinaryFile){let R=Q.data.data;n.push(R)}else if(Q.type===I.Image){let R=Q.data;R.data!==null&&n.push(...lr(R))}else if(Q.type===I.Mesh){let R=Q.data;n.push(...pr(R))}else if(Q.type===I.PolyData){let R=Q.data;n.push(...mr(R))}});let u=o?.pipelineBaseUrl??fr(),g=typeof u!="string"&&typeof u?.href<"u"?u.href:u,l=r!=null?je(r,Ir(n,o?.noCopy)):null,B=await p.runPipeline(e.toString(),g,A,t,l,o?.pipelineQueryParams??Pe());return{returnValue:B.returnValue,stdout:B.stdout,stderr:B.stderr,outputs:B.outputs,webWorker:s}}var C=no;var so=null;function cr(){return so}var go="1.3.1",Br=go;var fA,Io=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${Br}/dist/pipelines`;function HI(e){fA=e}function E(){if(typeof fA<"u")return fA;let e=Se();return typeof e<"u"?e:Io}var cA,lo=null;function dr(e){cA=e}function d(){if(typeof cA<"u")return cA;let e=Oe();return typeof e<"u"?e:lo}var $=null;async function Cr(){let e=d(),A=typeof e!="string"&&typeof e?.href<"u"?e.href:e;$=await pe(A)}function _I(e){$=e}async function y(){if($!==null)return $.terminated&&await Cr(),$;let e=cr();return e!==null?e:(await Cr(),$)}async function po(e){let t=(await T.get(`${e}/index.json`,{responseType:"json"})).data,r=await T.get(`${e}/data/data.raw`,{responseType:"arraybuffer"});t.data=N(t.imageType.componentType,r.data);let o=await T.get(`${e}/data/direction.raw`,{responseType:"arraybuffer"});return t.direction=N(D.Float64,o.data),t}var mo=po;var uo=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),ee=uo;async function fo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="png-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var BA=fo;async function co(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="png-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var dA=co;async function Bo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="meta-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var CA=Bo;async function Co(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="meta-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var EA=Co;async function Eo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="tiff-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var yA=Eo;async function yo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="tiff-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var QA=yo;async function Qo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="nifti-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var hA=Qo;async function ho(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="nifti-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var wA=ho;async function wo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="jpeg-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var RA=wo;async function Ro(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="jpeg-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var kA=Ro;async function ko(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="nrrd-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var bA=ko;async function bo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="nrrd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var DA=bo;async function Do(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="vtk-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var WA=Do;async function Wo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="vtk-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var FA=Wo;async function Fo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="bmp-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var UA=Fo;async function Uo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="bmp-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var NA=Uo;async function No(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="hdf5-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var SA=No;async function So(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="hdf5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var OA=So;async function Oo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="minc-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var PA=Oo;async function Po(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="minc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var xA=Po;async function xo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="mrc-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var TA=xo;async function To(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="mrc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var GA=To;async function Go(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="lsm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var JA=Go;async function Jo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="lsm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var LA=Jo;async function Lo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="mgh-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var MA=Lo;async function Mo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="mgh-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var HA=Mo;async function Ho(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="bio-rad-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var YA=Ho;async function Yo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="bio-rad-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var qA=Yo;async function qo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="gipl-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var KA=qo;async function Ko(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="gipl-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var jA=Ko;async function jo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge-adw-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var vA=jo;async function vo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge-adw-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var zA=vo;async function zo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge4-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var _A=zo;async function _o(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge4-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var VA=_o;async function Vo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="ge5-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var ZA=Vo;async function Zo(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="ge5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var XA=Zo;async function Xo(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="gdcm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var $A=Xo;async function $o(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="gdcm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var et=$o;async function ea(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="scanco-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var At=ea;async function Aa(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="scanco-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var tt=Aa;async function ta(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="fdf-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var rt=ta;async function ra(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="wasm-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var it=ra;async function ia(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="wasm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var ot=ia;async function oa(e,A={}){let t=[{type:I.JsonCompatible},{type:I.Image}],r=e;if(e instanceof File){let Q=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(Q)}}let o=[{type:I.BinaryFile,data:r}],i=[],s=r.path;i.push(s),i.push("0"),i.push("1"),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only");let p="wasm-zstd-read-image",a=A?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,t,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldRead:l[0]?.data,image:l[1]?.data}}var at=oa;async function aa(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="wasm-zstd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var nt=aa;var na=new Map([["png",[BA,dA]],["meta",[CA,EA]],["tiff",[yA,QA]],["nifti",[hA,wA]],["jpeg",[RA,kA]],["nrrd",[bA,DA]],["vtk",[WA,FA]],["bmp",[UA,NA]],["hdf5",[SA,OA]],["mnc",[PA,xA]],["mrc",[TA,GA]],["lsm",[JA,LA]],["mgh",[MA,HA]],["bioRad",[YA,qA]],["gipl",[KA,jA]],["geAdw",[vA,zA]],["ge4",[_A,VA]],["ge5",[ZA,XA]],["gdcm",[$A,et]],["scanco",[At,tt]],["fdf",[rt,null]],["wasm",[it,ot]],["wasmZstd",[at,nt]]]),Ae=na;async function sa(e,A={}){let t=e.type??"",r=e.name??e.path??"fileName",o=te(r).toLowerCase(),i=A?.webWorker,s=e;if(e instanceof Blob){let g=await e.arrayBuffer();s={path:e.name,data:new Uint8Array(g)}}let m=null;if(t&&ee.has(t))m=ee.get(t);else if(Y.has(o))m=Y.get(o);else for(let g of Ae.values())if(g[0]!==null){let{webWorker:l,couldRead:B,image:Q}=await g[0]({path:s.path,data:s.data.slice()},{webWorker:i,informationOnly:A?.informationOnly,noCopy:A?.noCopy});if(i=l,B)return typeof A<"u"&&(Q=J(Q,A)),{webWorker:i,image:Q}}if(!m)throw Error("Could not find IO for: "+r);let p=Ae.get(m)[0],{webWorker:a,couldRead:n,image:u}=await p(s,{webWorker:i,informationOnly:A?.informationOnly,noCopy:A?.noCopy});if(i=a,!n)throw Error("Could not read: "+r);return typeof A<"u"&&(u=J(u,A)),{webWorker:i,image:u}}var st=sa;var ga=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,Er=new Me(ga,st);async function Ia(e,A={}){let t=1,r=0,o=!1;typeof A=="object"&&(typeof A.zSpacing<"u"&&(t=A.zSpacing),typeof A.zOrigin<"u"&&(r=A.zOrigin),typeof A.sortedSeries<"u"&&(o=A.sortedSeries));let i=Array.from(e,async function(n){if(n instanceof File){let u=await n.arrayBuffer();return{path:n.name,data:new Uint8Array(u)}}return n}),s=await Promise.all(i);o||s.sort((n,u)=>n.path<u.path?-1:n.path>u.path?1:0);let m=[];for(let n=0;n<s.length;n++)m.push([s[n],{}]);let p=(await Er.runTasks(m).promise).map(n=>{let u=n.image;return u.imageType.dimension=3,u.size.push(1),u.spacing.push(t),u.origin.push(r),u.direction=new Float64Array(9),u.direction.fill(0),u.direction[0]=1,u.direction[4]=1,u.direction[8]=1,u}),a=Je(p);return typeof A=="object"&&(typeof A.componentType<"u"||typeof A.pixelType<"u")&&(a=J(a,A)),{image:a,webWorkerPool:Er}}var la=Ia;async function pa(e,A,t={}){let r=e;(typeof t.componentType<"u"||typeof t.pixelType<"u")&&(r=J(e,t));let o=t.mimeType,i=te(A).toLowerCase(),s=t.webWorker,m=null;if(typeof o<"u"&&ee.has(o))m=ee.get(o);else if(Y.has(i))m=Y.get(i);else for(let l of Ae.values())if(l[1]!==null){let{webWorker:B,couldWrite:Q,serializedImage:R}=await l[1](Ge(r),A,t);if(s=B,Q)return{webWorker:s,serializedImage:R}}if(!m)throw Error("Could not find IO for: "+A);let p=Ae.get(m)[1],{webWorker:a,couldWrite:n,serializedImage:u}=await p(r,A,t);if(s=a,!n)throw Error("Could not write: "+A);return{webWorker:s,serializedImage:u}}var ma=pa;async function ua(e,A,t={}){let r=[{type:I.JsonCompatible},{type:I.BinaryFile,data:{path:A,data:new Uint8Array}}],o=[{type:I.Image,data:e}],i=[];i.push("0"),i.push("0");let f=A;i.push(f),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let p="fdf-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:n,returnValue:u,stderr:g,outputs:l}=await C(p,i,r,o,{pipelineBaseUrl:E(),pipelineWorkerUrl:d(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&g!=="")throw new Error(g);return{webWorker:n,couldWrite:l[0]?.data,serializedImage:l[1]?.data}}var fa=ua;var yr='data:text/javascript;charset=utf-8,var II=Object.defineProperty;var eI=(A,t)=>{for(var I in t)II(A,I,{get:t[I],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gI=Symbol("Comlink.endpoint"),rI=Symbol("Comlink.releaseProxy"),pA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:t,port2:I}=new MessageChannel;return iA(A,t),[I,[I]]},deserialize(A){return A.start(),nI(A)}},iI={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},At=new Map([["proxy",oI],["throw",iI]]);function CI(A,t){for(let I of A)if(t===I||I==="*"||I instanceof RegExp&&I.test(t))return!0;return!1}function iA(A,t=globalThis,I=["*"]){t.addEventListener("message",function e(g){if(!g||!g.data)return;if(!CI(I,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:o,path:n}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),Q;try{let B=n.slice(0,-1).reduce((f,s)=>f[s],A),i=n.reduce((f,s)=>f[s],A);switch(o){case"GET":Q=i;break;case"SET":B[n.slice(-1)[0]]=b(g.data.value),Q=!0;break;case"APPLY":Q=i.apply(B,a);break;case"CONSTRUCT":{let f=new i(...a);Q=aI(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;iA(A,s),Q=FA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(B){Q={value:B,[eA]:0}}Promise.resolve(Q).catch(B=>({value:B,[eA]:0})).then(B=>{let[i,f]=oA(B);t.postMessage(Object.assign(Object.assign({},i),{id:r}),f),o==="RELEASE"&&(t.removeEventListener("message",e),tt(t),pA in A&&typeof A[pA]=="function"&&A[pA]())}).catch(B=>{let[i,f]=oA({value:new TypeError("Unserializable return value"),[eA]:0});t.postMessage(Object.assign(Object.assign({},i),{id:r}),f)})}),t.start&&t.start()}function BI(A){return A.constructor.name==="MessagePort"}function tt(A){BI(A)&&A.close()}function nI(A,t){return SA(A,[],t)}function IA(A){if(A)throw new Error("Proxy has been released and is not useable")}function It(A){return q(A,{type:"RELEASE"}).then(()=>{tt(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(gA.get(A)||0)-1;gA.set(A,t),t===0&&It(A)});function sI(A,t){let I=(gA.get(t)||0)+1;gA.set(t,I),rA&&rA.register(A,t,A)}function QI(A){rA&&rA.unregister(A)}function SA(A,t=[],I=function(){}){let e=!1,g=new Proxy(I,{get(r,o){if(IA(e),o===rI)return()=>{QI(g),It(A),e=!0};if(o==="then"){if(t.length===0)return{then:()=>g};let n=q(A,{type:"GET",path:t.map(a=>a.toString())}).then(b);return n.then.bind(n)}return SA(A,[...t,o])},set(r,o,n){IA(e);let[a,Q]=oA(n);return q(A,{type:"SET",path:[...t,o].map(B=>B.toString()),value:a},Q).then(b)},apply(r,o,n){IA(e);let a=t[t.length-1];if(a===gI)return q(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return SA(A,t.slice(0,-1));let[Q,B]=_A(n);return q(A,{type:"APPLY",path:t.map(i=>i.toString()),argumentList:Q},B).then(b)},construct(r,o){IA(e);let[n,a]=_A(o);return q(A,{type:"CONSTRUCT",path:t.map(Q=>Q.toString()),argumentList:n},a).then(b)}});return sI(g,A),g}function EI(A){return Array.prototype.concat.apply([],A)}function _A(A){let t=A.map(oA);return[t.map(I=>I[0]),EI(t.map(I=>I[1]))]}var et=new WeakMap;function FA(A,t){return et.set(A,t),A}function aI(A){return Object.assign(A,{[vA]:!0})}function oA(A){for(let[t,I]of At)if(I.canHandle(A)){let[e,g]=I.serialize(A);return[{type:"HANDLER",name:t,value:e},g]}return[{type:"RAW",value:A},et.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return At.get(A.name).deserialize(A.value);case"RAW":return A.value}}function q(A,t,I){return new Promise(e=>{let g=cI();A.addEventListener("message",function r(o){!o.data||!o.data.id||o.data.id!==g||(A.removeEventListener("message",r),e(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},t),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,t){return function(){return A.apply(t,arguments)}}var{toString:fI}=Object.prototype,{getPrototypeOf:UA}=Object,BA=(A=>t=>{let I=fI.call(t);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),t=>BA(t)===A),nA=A=>t=>typeof t===A,{isArray:K}=Array,Z=nA("undefined");function lI(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var it=U("ArrayBuffer");function DI(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&it(A.buffer),t}var uI=nA("string"),F=nA("function"),Ct=nA("number"),sA=A=>A!==null&&typeof A=="object",hI=A=>A===!0||A===!1,CA=A=>{if(BA(A)!=="object")return!1;let t=UA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dI=U("Date"),yI=U("File"),wI=U("Blob"),mI=U("FileList"),pI=A=>sA(A)&&F(A.pipe),SI=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((t=BA(A))==="formdata"||t==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},FI=U("URLSearchParams"),RI=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,t,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),K(A))for(e=0,g=A.length;e<g;e++)t.call(null,A[e],e,A);else{let r=I?Object.getOwnPropertyNames(A):Object.keys(A),o=r.length,n;for(e=0;e<o;e++)n=r[e],t.call(null,A[n],n,A)}}function Bt(A,t){t=t.toLowerCase();let I=Object.keys(A),e=I.length,g;for(;e-- >0;)if(g=I[e],t===g.toLowerCase())return g;return null}var nt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,st=A=>!Z(A)&&A!==nt;function NA(){let{caseless:A}=st(this)&&this||{},t={},I=(e,g)=>{let r=A&&Bt(t,g)||g;CA(t[r])&&CA(e)?t[r]=NA(t[r],e):CA(e)?t[r]=NA({},e):K(e)?t[r]=e.slice():t[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],I);return t}var NI=(A,t,I,{allOwnKeys:e}={})=>(V(t,(g,r)=>{I&&F(g)?A[r]=W(g,I):A[r]=g},{allOwnKeys:e}),A),UI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),GI=(A,t,I,e)=>{A.prototype=Object.create(t.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),I&&Object.assign(A.prototype,I)},kI=(A,t,I,e)=>{let g,r,o,n={};if(t=t||{},A==null)return t;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)o=g[r],(!e||e(o,A,t))&&!n[o]&&(t[o]=A[o],n[o]=!0);A=I!==!1&&UA(A)}while(A&&(!I||I(A,t))&&A!==Object.prototype);return t},LI=(A,t,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=t.length;let e=A.indexOf(t,I);return e!==-1&&e===I},JI=A=>{if(!A)return null;if(K(A))return A;let t=A.length;if(!Ct(t))return null;let I=new Array(t);for(;t-- >0;)I[t]=A[t];return I},HI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&UA(Uint8Array)),YI=(A,t)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;t.call(A,r[0],r[1])}},bI=(A,t)=>{let I,e=[];for(;(I=A.exec(t))!==null;)e.push(I);return e},MI=U("HTMLFormElement"),qI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(I,e,g){return e.toUpperCase()+g}),rt=(({hasOwnProperty:A})=>(t,I)=>A.call(t,I))(Object.prototype),KI=U("RegExp"),Qt=(A,t)=>{let I=Object.getOwnPropertyDescriptors(A),e={};V(I,(g,r)=>{let o;(o=t(g,r,A))!==!1&&(e[r]=o||g)}),Object.defineProperties(A,e)},OI=A=>{Qt(A,(t,I)=>{if(F(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let e=A[I];if(F(e)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+I+"\'")})}})},TI=(A,t)=>{let I={},e=g=>{g.forEach(r=>{I[r]=!0})};return K(A)?e(A):e(String(A).split(t)),I},PI=()=>{},xI=(A,t)=>(A=+A,Number.isFinite(A)?A:t),RA="abcdefghijklmnopqrstuvwxyz",ot="0123456789",Et={DIGIT:ot,ALPHA:RA,ALPHA_DIGIT:RA+RA.toUpperCase()+ot},jI=(A=16,t=Et.ALPHA_DIGIT)=>{let I="",{length:e}=t;for(;A--;)I+=t[Math.random()*e|0];return I};function WI(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var ZI=A=>{let t=new Array(10),I=(e,g)=>{if(sA(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[g]=e;let r=K(e)?[]:{};return V(e,(o,n)=>{let a=I(o,g+1);!Z(a)&&(r[n]=a)}),t[g]=void 0,r}}return e};return I(A,0)},VI=U("AsyncFunction"),XI=A=>A&&(sA(A)||F(A))&&F(A.then)&&F(A.catch),C={isArray:K,isArrayBuffer:it,isBuffer:lI,isFormData:SI,isArrayBufferView:DI,isString:uI,isNumber:Ct,isBoolean:hI,isObject:sA,isPlainObject:CA,isUndefined:Z,isDate:dI,isFile:yI,isBlob:wI,isRegExp:KI,isFunction:F,isStream:pI,isURLSearchParams:FI,isTypedArray:HI,isFileList:mI,forEach:V,merge:NA,extend:NI,trim:RI,stripBOM:UI,inherits:GI,toFlatObject:kI,kindOf:BA,kindOfTest:U,endsWith:LI,toArray:JI,forEachEntry:YI,matchAll:bI,isHTMLForm:MI,hasOwnProperty:rt,hasOwnProp:rt,reduceDescriptors:Qt,freezeMethods:OI,toObjectSet:TI,toCamelCase:qI,noop:PI,toFiniteNumber:xI,findKey:Bt,global:nt,isContextDefined:st,ALPHABET:Et,generateString:jI,isSpecCompliantForm:WI,toJSONObject:ZI,isAsyncFn:VI,isThenable:XI};function O(A,t,I,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),I&&(this.config=I),e&&(this.request=e),g&&(this.response=g)}C.inherits(O,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var at=O.prototype,ct={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ct[A]={value:A}});Object.defineProperties(O,ct);Object.defineProperty(at,"isAxiosError",{value:!0});O.from=(A,t,I,e,g,r)=>{let o=Object.create(at);return C.toFlatObject(A,o,function(a){return a!==Error.prototype},n=>n!=="isAxiosError"),O.call(o,A.message,t,I,e,g),o.cause=A,o.name=A.name,r&&Object.assign(o,r),o};var l=O;var QA=null;function GA(A){return C.isPlainObject(A)||C.isArray(A)}function lt(A){return C.endsWith(A,"[]")?A.slice(0,-2):A}function ft(A,t,I){return A?A.concat(t).map(function(g,r){return g=lt(g),!I&&r?"["+g+"]":g}).join(I?".":""):t}function zI(A){return C.isArray(A)&&!A.some(GA)}var _I=C.toFlatObject(C,{},null,function(t){return/^is[A-Z]/.test(t)});function vI(A,t,I){if(!C.isObject(A))throw new TypeError("target must be an object");t=t||new(QA||FormData),I=C.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!C.isUndefined(u[c])});let e=I.metaTokens,g=I.visitor||B,r=I.dots,o=I.indexes,a=(I.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(t);if(!C.isFunction(g))throw new TypeError("visitor must be a function");function Q(E){if(E===null)return"";if(C.isDate(E))return E.toISOString();if(!a&&C.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(E)||C.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function B(E,c,u){let y=E;if(E&&!u&&typeof E=="object"){if(C.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(C.isArray(E)&&zI(E)||(C.isFileList(E)||C.endsWith(c,"[]"))&&(y=C.toArray(E)))return c=lt(c),y.forEach(function(N,tI){!(C.isUndefined(N)||N===null)&&t.append(o===!0?ft([c],tI,r):o===null?c:c+"[]",Q(N))}),!1}return GA(E)?!0:(t.append(ft(u,c,r),Q(E)),!1)}let i=[],f=Object.assign(_I,{defaultVisitor:B,convertValue:Q,isVisitable:GA});function s(E,c){if(!C.isUndefined(E)){if(i.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));i.push(E),C.forEach(E,function(y,R){(!(C.isUndefined(y)||y===null)&&g.call(t,y,C.isString(R)?R.trim():R,c,f))===!0&&s(y,c?c.concat(R):[R])}),i.pop()}}if(!C.isObject(A))throw new TypeError("data must be an object");return s(A),t}var J=vI;function Dt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return t[e]})}function ut(A,t){this._pairs=[],A&&J(A,this,t)}var ht=ut.prototype;ht.append=function(t,I){this._pairs.push([t,I])};ht.toString=function(t){let I=t?function(e){return t.call(this,e,Dt)}:Dt;return this._pairs.map(function(g){return I(g[0])+"="+I(g[1])},"").join("&")};var EA=ut;function $I(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,t,I){if(!t)return A;let e=I&&I.encode||$I,g=I&&I.serialize,r;if(g?r=g(t,I):r=C.isURLSearchParams(t)?t.toString():new EA(t,I).toString(e),r){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var kA=class{constructor(){this.handlers=[]}use(t,I,e){return this.handlers.push({fulfilled:t,rejected:I,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){C.forEach(this.handlers,function(e){e!==null&&t(e)})}},LA=kA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dt=typeof URLSearchParams<"u"?URLSearchParams:EA;var yt=typeof FormData<"u"?FormData:null;var wt=typeof Blob<"u"?Blob:null;var mt={isBrowser:!0,classes:{URLSearchParams:dt,FormData:yt,Blob:wt},protocols:["http","https","file","blob","url","data"]};var JA={};eI(JA,{hasBrowserEnv:()=>pt,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>te});var pt=typeof window<"u"&&typeof document<"u",Ae=(A=>pt&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),te=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...JA,...mt};function HA(A,t){return J(A,new w.classes.URLSearchParams,Object.assign({visitor:function(I,e,g,r){return w.isNode&&C.isBuffer(I)?(this.append(e,I.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Ie(A){return C.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ee(A){let t={},I=Object.keys(A),e,g=I.length,r;for(e=0;e<g;e++)r=I[e],t[r]=A[r];return t}function ge(A){function t(I,e,g,r){let o=I[r++];if(o==="__proto__")return!0;let n=Number.isFinite(+o),a=r>=I.length;return o=!o&&C.isArray(g)?g.length:o,a?(C.hasOwnProp(g,o)?g[o]=[g[o],e]:g[o]=e,!n):((!g[o]||!C.isObject(g[o]))&&(g[o]=[]),t(I,e,g[o],r)&&C.isArray(g[o])&&(g[o]=ee(g[o])),!n)}if(C.isFormData(A)&&C.isFunction(A.entries)){let I={};return C.forEachEntry(A,(e,g)=>{t(Ie(e),g,I,0)}),I}return null}var cA=ge;function re(A,t,I){if(C.isString(A))try{return(t||JSON.parse)(A),C.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(I||JSON.stringify)(A)}var YA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(t,I){let e=I.getContentType()||"",g=e.indexOf("application/json")>-1,r=C.isObject(t);if(r&&C.isHTMLForm(t)&&(t=new FormData(t)),C.isFormData(t))return g?JSON.stringify(cA(t)):t;if(C.isArrayBuffer(t)||C.isBuffer(t)||C.isStream(t)||C.isFile(t)||C.isBlob(t))return t;if(C.isArrayBufferView(t))return t.buffer;if(C.isURLSearchParams(t))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return HA(t,this.formSerializer).toString();if((n=C.isFileList(t))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return J(n?{"files[]":t}:t,a&&new a,this.formSerializer)}}return r||g?(I.setContentType("application/json",!1),re(t)):t}],transformResponse:[function(t){let I=this.transitional||YA.transitional,e=I&&I.forcedJSONParsing,g=this.responseType==="json";if(t&&C.isString(t)&&(e&&!this.responseType||g)){let o=!(I&&I.silentJSONParsing)&&g;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],A=>{YA.headers[A]={}});var T=YA;var oe=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),St=A=>{let t={},I,e,g;return A&&A.split(`%0A`).forEach(function(o){g=o.indexOf(":"),I=o.substring(0,g).trim().toLowerCase(),e=o.substring(g+1).trim(),!(!I||t[I]&&oe[I])&&(I==="set-cookie"?t[I]?t[I].push(e):t[I]=[e]:t[I]=t[I]?t[I]+", "+e:e)}),t};var Ft=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:C.isArray(A)?A.map(fA):String(A)}function ie(A){let t=Object.create(null),I=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=I.exec(A);)t[e[1]]=e[2];return t}var Ce=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function bA(A,t,I,e,g){if(C.isFunction(e))return e.call(this,t,I);if(g&&(t=I),!!C.isString(t)){if(C.isString(e))return t.indexOf(e)!==-1;if(C.isRegExp(e))return e.test(t)}}function Be(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,I,e)=>I.toUpperCase()+e)}function ne(A,t){let I=C.toCamelCase(" "+t);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+I,{value:function(g,r,o){return this[e].call(this,t,g,r,o)},configurable:!0})})}var P=class{constructor(t){t&&this.set(t)}set(t,I,e){let g=this;function r(n,a,Q){let B=z(a);if(!B)throw new Error("header name must be a non-empty string");let i=C.findKey(g,B);(!i||g[i]===void 0||Q===!0||Q===void 0&&g[i]!==!1)&&(g[i||a]=fA(n))}let o=(n,a)=>C.forEach(n,(Q,B)=>r(Q,B,a));return C.isPlainObject(t)||t instanceof this.constructor?o(t,I):C.isString(t)&&(t=t.trim())&&!Ce(t)?o(St(t),I):t!=null&&r(I,t,e),this}get(t,I){if(t=z(t),t){let e=C.findKey(this,t);if(e){let g=this[e];if(!I)return g;if(I===!0)return ie(g);if(C.isFunction(I))return I.call(this,g,e);if(C.isRegExp(I))return I.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,I){if(t=z(t),t){let e=C.findKey(this,t);return!!(e&&this[e]!==void 0&&(!I||bA(this,this[e],e,I)))}return!1}delete(t,I){let e=this,g=!1;function r(o){if(o=z(o),o){let n=C.findKey(e,o);n&&(!I||bA(e,e[n],n,I))&&(delete e[n],g=!0)}}return C.isArray(t)?t.forEach(r):r(t),g}clear(t){let I=Object.keys(this),e=I.length,g=!1;for(;e--;){let r=I[e];(!t||bA(this,this[r],r,t,!0))&&(delete this[r],g=!0)}return g}normalize(t){let I=this,e={};return C.forEach(this,(g,r)=>{let o=C.findKey(e,r);if(o){I[o]=fA(g),delete I[r];return}let n=t?Be(r):String(r).trim();n!==r&&delete I[r],I[n]=fA(g),e[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let I=Object.create(null);return C.forEach(this,(e,g)=>{e!=null&&e!==!1&&(I[g]=t&&C.isArray(e)?e.join(", "):e)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,I])=>t+": "+I).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...I){let e=new this(t);return I.forEach(g=>e.set(g)),e}static accessor(t){let e=(this[Ft]=this[Ft]={accessors:{}}).accessors,g=this.prototype;function r(o){let n=z(o);e[n]||(ne(g,o),e[n]=!0)}return C.isArray(t)?t.forEach(r):r(t),this}};P.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(P.prototype,({value:A},t)=>{let I=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(e){this[I]=e}}});C.freezeMethods(P);var m=P;function _(A,t){let I=this||T,e=t||I,g=m.from(e.headers),r=e.data;return C.forEach(A,function(n){r=n.call(I,r,g.normalize(),t?t.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function Rt(A,t,I){l.call(this,A??"canceled",l.ERR_CANCELED,t,I),this.name="CanceledError"}C.inherits(Rt,l,{__CANCEL__:!0});var H=Rt;function MA(A,t,I){let e=I.config.validateStatus;!I.status||!e||e(I.status)?A(I):t(new l("Request failed with status code "+I.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}var Nt=w.hasStandardBrowserEnv?{write(A,t,I,e,g,r){let o=[A+"="+encodeURIComponent(t)];C.isNumber(I)&&o.push("expires="+new Date(I).toGMTString()),C.isString(e)&&o.push("path="+e),C.isString(g)&&o.push("domain="+g),r===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function qA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function KA(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function $(A,t){return A&&!qA(t)?KA(A,t):t}var Ut=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a"),e;function g(r){let o=r;return t&&(I.setAttribute("href",o),o=I.href),I.setAttribute("href",o),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^%23/,""):"",hostname:I.hostname,port:I.port,pathname:I.pathname.charAt(0)==="/"?I.pathname:"/"+I.pathname}}return e=g(window.location.href),function(o){let n=C.isString(o)?g(o):o;return n.protocol===e.protocol&&n.host===e.host}}():function(){return function(){return!0}}();function OA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function se(A,t){A=A||10;let I=new Array(A),e=new Array(A),g=0,r=0,o;return t=t!==void 0?t:1e3,function(a){let Q=Date.now(),B=e[r];o||(o=Q),I[g]=a,e[g]=Q;let i=r,f=0;for(;i!==g;)f+=I[i++],i=i%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-o<t)return;let s=B&&Q-B;return s?Math.round(f*1e3/s):void 0}}var Gt=se;function kt(A,t){let I=0,e=Gt(50,250);return g=>{let r=g.loaded,o=g.lengthComputable?g.total:void 0,n=r-I,a=e(n),Q=r<=o;I=r;let B={loaded:r,total:o,progress:o?r/o:void 0,bytes:n,rate:a||void 0,estimated:a&&o&&Q?(o-r)/a:void 0,event:g};B[t?"download":"upload"]=!0,A(B)}}var Qe=typeof XMLHttpRequest<"u",Lt=Qe&&function(A){return new Promise(function(I,e){let g=A.data,r=m.from(A.headers).normalize(),{responseType:o,withXSRFToken:n}=A,a;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let B;if(C.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((B=r.getContentType())!==!1){let[c,...u]=B?B.split(";").map(y=>y.trim()).filter(Boolean):[];r.setContentType([c||"multipart/form-data",...u].join("; "))}}let i=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);i.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),i.timeout=A.timeout;function s(){if(!i)return;let c=m.from("getAllResponseHeaders"in i&&i.getAllResponseHeaders()),y={data:!o||o==="text"||o==="json"?i.responseText:i.response,status:i.status,statusText:i.statusText,headers:c,config:A,request:i};MA(function(N){I(N),Q()},function(N){e(N),Q()},y),i=null}if("onloadend"in i?i.onloadend=s:i.onreadystatechange=function(){!i||i.readyState!==4||i.status===0&&!(i.responseURL&&i.responseURL.indexOf("file:")===0)||setTimeout(s)},i.onabort=function(){i&&(e(new l("Request aborted",l.ECONNABORTED,A,i)),i=null)},i.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,i)),i=null},i.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",y=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,i)),i=null},w.hasStandardBrowserEnv&&(n&&C.isFunction(n)&&(n=n(A)),n||n!==!1&&Ut(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&Nt.read(A.xsrfCookieName);c&&r.set(A.xsrfHeaderName,c)}g===void 0&&r.setContentType(null),"setRequestHeader"in i&&C.forEach(r.toJSON(),function(u,y){i.setRequestHeader(y,u)}),C.isUndefined(A.withCredentials)||(i.withCredentials=!!A.withCredentials),o&&o!=="json"&&(i.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&i.addEventListener("progress",kt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&i.upload&&i.upload.addEventListener("progress",kt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{i&&(e(!c||c.type?new H(null,A,i):c),i.abort(),i=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=OA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}i.send(g||null)})};var TA={http:QA,xhr:Lt};C.forEach(TA,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Jt=A=>`- ${A}`,Ee=A=>C.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=C.isArray(A)?A:[A];let{length:t}=A,I,e,g={};for(let r=0;r<t;r++){I=A[r];let o;if(e=I,!Ee(I)&&(e=TA[(o=String(I)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${o}\'`);if(e)break;g[o||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([n,a])=>`adapter ${n} `+(a===!1?"is not supported by the environment":"is not available in the build")),o=t?r.length>1?`since :%0A`+r.map(Jt).join(`%0A`):" "+Jt(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return e},adapters:TA};function PA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new H(null,A)}function DA(A){return PA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||T.adapter)(A).then(function(e){return PA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(PA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var Ht=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let I={};function e(Q,B,i){return C.isPlainObject(Q)&&C.isPlainObject(B)?C.merge.call({caseless:i},Q,B):C.isPlainObject(B)?C.merge({},B):C.isArray(B)?B.slice():B}function g(Q,B,i){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q,i)}else return e(Q,B,i)}function r(Q,B){if(!C.isUndefined(B))return e(void 0,B)}function o(Q,B){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q)}else return e(void 0,B)}function n(Q,B,i){if(i in t)return e(Q,B);if(i in A)return e(void 0,Q)}let a={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(Q,B)=>g(Ht(Q),Ht(B),!0)};return C.forEach(Object.keys(Object.assign({},A,t)),function(B){let i=a[B]||g,f=i(A[B],t[B],B);C.isUndefined(f)&&i!==n||(I[B]=f)}),I}var uA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{xA[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}});var Yt={};xA.transitional=function(t,I,e){function g(r,o){return"[Axios v"+uA+"] Transitional option \'"+r+"\'"+o+(e?". "+e:"")}return(r,o,n)=>{if(t===!1)throw new l(g(o," has been removed"+(I?" in "+I:"")),l.ERR_DEPRECATED);return I&&!Yt[o]&&(Yt[o]=!0,console.warn(g(o," has been deprecated since v"+I+" and will be removed in the near future"))),t?t(r,o,n):!0}};function ae(A,t,I){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],o=t[r];if(o){let n=A[r],a=n===void 0||o(n,r,A);if(a!==!0)throw new l("option "+r+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var Y=hA.validators,x=class{constructor(t){this.defaults=t,this.interceptors={request:new LA,response:new LA}}async request(t,I){try{return await this._request(t,I)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(t,I){typeof t=="string"?(I=I||{},I.url=t):I=t||{},I=k(this.defaults,I);let{transitional:e,paramsSerializer:g,headers:r}=I;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),g!=null&&(C.isFunction(g)?I.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:Y.function,serialize:Y.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let o=r&&C.merge(r.common,r[I.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],E=>{delete r[E]}),I.headers=m.concat(o,r);let n=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(I)===!1||(a=a&&c.synchronous,n.unshift(c.fulfilled,c.rejected))});let Q=[];this.interceptors.response.forEach(function(c){Q.push(c.fulfilled,c.rejected)});let B,i=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,n),E.push.apply(E,Q),f=E.length,B=Promise.resolve(I);i<f;)B=B.then(E[i++],E[i++]);return B}f=n.length;let s=I;for(i=0;i<f;){let E=n[i++],c=n[i++];try{s=E(s)}catch(u){c.call(this,u);break}}try{B=DA.call(this,s)}catch(E){return Promise.reject(E)}for(i=0,f=Q.length;i<f;)B=B.then(Q[i++],Q[i++]);return B}getUri(t){t=k(this.defaults,t);let I=$(t.baseURL,t.url);return X(I,t.params,t.paramsSerializer)}};C.forEach(["delete","get","head","options"],function(t){x.prototype[t]=function(I,e){return this.request(k(e||{},{method:t,url:I,data:(e||{}).data}))}});C.forEach(["post","put","patch"],function(t){function I(e){return function(r,o,n){return this.request(k(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:o}))}}x.prototype[t]=I(),x.prototype[t+"Form"]=I(!0)});var AA=x;var jA=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(r){I=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,o=new Promise(n=>{e.subscribe(n),r=n}).then(g);return o.cancel=function(){e.unsubscribe(r)},o},t(function(r,o,n){e.reason||(e.reason=new H(r,o,n),I(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let I=this._listeners.indexOf(t);I!==-1&&this._listeners.splice(I,1)}static source(){let t;return{token:new A(function(g){t=g}),cancel:t}}},bt=jA;function WA(A){return function(I){return A.apply(null,I)}}function ZA(A){return C.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,t])=>{VA[t]=A});var Mt=VA;function qt(A){let t=new AA(A),I=W(AA.prototype.request,t);return C.extend(I,AA.prototype,t,{allOwnKeys:!0}),C.extend(I,t,null,{allOwnKeys:!0}),I.create=function(g){return qt(k(A,g))},I}var h=qt(T);h.Axios=AA;h.CanceledError=H;h.CancelToken=bt;h.isCancel=v;h.VERSION=uA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(t){return Promise.all(t)};h.spread=WA;h.isAxiosError=ZA;h.mergeConfig=k;h.AxiosHeaders=m;h.formToJSON=A=>cA(C.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=Mt;h.default=h;var dA=h;var{Axios:io,AxiosError:Co,CanceledError:Bo,isCancel:no,CancelToken:so,VERSION:Qo,all:Eo,Cancel:ao,isAxiosError:co,spread:fo,toFormData:lo,AxiosHeaders:Do,HttpStatusCode:uo,formToJSON:ho,getAdapter:yo,mergeConfig:wo}=dA;var tA,L,zA,XA={env:{emscripten_notify_memory_growth:function(A){zA=new Uint8Array(L.exports.memory.buffer)}}},yA=class{init(){return tA||(typeof fetch<"u"?tA=fetch("data:application/wasm;base64,"+Kt).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,XA)).then(this._init):tA=WebAssembly.instantiate(Buffer.from(Kt,"base64"),XA).then(this._init),tA)}_init(t){L=t.instance,XA.env.emscripten_notify_memory_growth(0)}decode(t,I=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=t.byteLength,g=L.exports.malloc(e);zA.set(t,g),I=I||Number(L.exports.ZSTD_findDecompressedSize(g,e));let r=L.exports.malloc(I),o=L.exports.ZSTD_decompress(r,I,g,e),n=zA.slice(r,r+o);return L.exports.free(g),L.exports.free(r),n}},Kt="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var Ot=new yA,Tt=!1;async function ce(A,t,I){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${t}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await dA.get(`${g}.zst`,{responseType:"arraybuffer",params:I});Tt||(await Ot.init(),Tt=!0);let n=Ot.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:n})}var Pt=ce;var wA=new Map;async function fe(A,t,I){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),wA.has(g)?r=await wA.get(g):(wA.set(g,Pt(e,t,I)),r=await wA.get(g)),r}var xt=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},S=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=ue;function he(A,t){let I=null;switch(A){case S.UInt8:{I=new Uint8Array(t);break}case S.Int8:{I=new Int8Array(t);break}case S.UInt16:{I=new Uint16Array(t);break}case S.Int16:{I=new Int16Array(t);break}case S.UInt32:{I=new Uint32Array(t);break}case S.Int32:{I=new Int32Array(t);break}case S.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(t):I=new Uint8Array(t);break}case S.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(t):I=new Uint8Array(t);break}case j.Float32:{I=new Float32Array(t);break}case j.Float64:{I=new Float64Array(t);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var G=he;var Zt=typeof globalThis.SharedArrayBuffer=="function",jt=new TextEncoder,Wt=new TextDecoder("utf-8");function de(A,t){let I={flags:"r",encoding:"binary"},e=A.fs_open(t,I.flags),r=A.fs_stat(t).size,o=null;Zt?o=new SharedArrayBuffer(r):o=new ArrayBuffer(r);let n=new Uint8Array(o);return A.fs_read(e,n,0,r,0),A.fs_close(e),n}function Vt(A,t,I){let e=null;Zt?e=new SharedArrayBuffer(I):e=new ArrayBuffer(I);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,t,I);return g.set(r),g}function d(A,t,I,e){let g=0;return t!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,e,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),g)),g}function M(A,t,I){let e=JSON.stringify(t),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,g]);A.stringToUTF8(e,r,g)}function p(A,t,I,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,I]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,I]),o=Vt(A,g,r);return G(e,o.buffer)}function mA(A,t){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),e=A.UTF8ToString(I);return JSON.parse(e)}function ye(A,t,I,e){e!=null&&e.length>0&&e.forEach(function(Q,B){switch(Q.type){case D.TextStream:{let i=jt.encode(Q.data.data),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.JsonCompatible:{let i=jt.encode(JSON.stringify(Q.data)),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.BinaryStream:{let i=Q.data.data,f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let i=Q.data,f=d(A,i.data,B,0),s=d(A,i.direction,B,1),E=typeof i.metadata?.entries<"u"?Array.from(i.metadata.entries()):[],c={imageType:i.imageType,name:i.name,origin:i.origin,spacing:i.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:i.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};M(A,c,B);break}case D.Mesh:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.cells,B,1),E=d(A,i.pointData,B,2),c=d(A,i.cellData,B,3),u={meshType:i.meshType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:i.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:i.cellBufferSize,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};M(A,u,B);break}case D.PointSet:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.pointData,B,1),E={pointSetType:i.pointSetType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};M(A,E,B);break}case D.PolyData:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.vertices,B,1),E=d(A,i.lines,B,2),c=d(A,i.polygons,B,3),u=d(A,i.triangleStrips,B,4),y=d(A,i.pointData,B,5),R=d(A,i.pointData,B,6),N={polyDataType:i.polyDataType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:i.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:i.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:i.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:i.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${y}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};M(A,N,B);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(t.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let o=A.getModuleStdout(),n=A.getModuleStderr(),a=[];return I!=null&&I.length>0&&r===0&&I.forEach(function(Q,B){let i=null;switch(Q.type){case D.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i={data:Wt.decode(c)};break}case D.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i=JSON.parse(Wt.decode(c));break}case D.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);i={data:Vt(A,s,E)};break}case D.TextFile:{i={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{i={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let s=mA(A,B);s.data=p(A,B,0,s.imageType.componentType),s.direction=p(A,B,1,j.Float64),s.metadata=new Map(s.metadata),i=s;break}case D.Mesh:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.meshType.pointComponentType):s.points=G(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=p(A,B,1,s.meshType.cellComponentType):s.cells=G(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,2,s.meshType.pointPixelComponentType):s.pointData=G(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,3,s.meshType.cellPixelComponentType):s.cellData=G(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PointSet:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.pointSetType.pointComponentType):s.points=G(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,1,s.pointSetType.pointPixelComponentType):s.pointData=G(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PolyData:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,j.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=p(A,B,1,S.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=p(A,B,2,S.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=p(A,B,3,S.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=p(A,B,4,S.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=p(A,B,5,s.polyDataType.pointPixelComponentType):s.pointData=G(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,6,s.polyDataType.cellPixelComponentType):s.cellData=G(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:i};a.push(f)}),{returnValue:r,stdout:o,stderr:n,outputs:a}}var Xt=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,t){if(A==null)return[];let I=[];for(let e=0;e<A.length;e++){let g=pe(A[e],t);g!==null&&I.push(g)}return I}function pe(A,t){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:t?I:I.slice(0)}var zt=me;function Se(A){return[A.data,A.direction]}var _t=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vt=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $t=Re;async function Ne(A,t,I,e){let g=Xt(A,t,I,e),r=[];return g.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let n=o.data;r.push(n)}else if(o.type===D.Image){let n=o.data;r.push(..._t(n))}else if(o.type===D.Mesh){let n=o.data;r.push(...vt(n))}else if(o.type===D.PolyData){let n=o.data;r.push(...$t(n))}}),FA(g,zt(r,!0))}var AI=Ne;var Ue={runPipeline:async function(A,t,I,e,g,r){let o=await xt(A,t,r);return await AI(o,I,e,g)}};iA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';dr(yr);export{YA as bioRadReadImage,qA as bioRadWriteImage,UA as bmpReadImage,NA as bmpWriteImage,Y as extensionToImageIo,rt as fdfReadImage,fa as fdfWriteImage,$A as gdcmReadImage,et as gdcmWriteImage,_A as ge4ReadImage,VA as ge4WriteImage,ZA as ge5ReadImage,XA as ge5WriteImage,vA as geAdwReadImage,zA as geAdwWriteImage,y as getDefaultWebWorker,d as getPipelineWorkerUrl,E as getPipelinesBaseUrl,KA as giplReadImage,jA as giplWriteImage,SA as hdf5ReadImage,OA as hdf5WriteImage,RA as jpegReadImage,kA as jpegWriteImage,JA as lsmReadImage,LA as lsmWriteImage,CA as metaReadImage,EA as metaWriteImage,MA as mghReadImage,HA as mghWriteImage,PA as mincReadImage,xA as mincWriteImage,TA as mrcReadImage,GA as mrcWriteImage,hA as niftiReadImage,wA as niftiWriteImage,bA as nrrdReadImage,DA as nrrdWriteImage,BA as pngReadImage,dA as pngWriteImage,st as readImage,la as readImageFileSeries,mo as readImageHttp,At as scancoReadImage,tt as scancoWriteImage,_I as setDefaultWebWorker,dr as setPipelineWorkerUrl,HI as setPipelinesBaseUrl,yA as tiffReadImage,QA as tiffWriteImage,WA as vtkReadImage,FA as vtkWriteImage,it as wasmReadImage,ot as wasmWriteImage,at as wasmZstdReadImage,nt as wasmZstdWriteImage,ma as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
