[build-system]
requires = [ "setuptools",]
build-backend = "setuptools.build_meta"

[project]
name = "lambda-kit"
version = "1.0.14"
description = "A tool to package Python code for AWS Lambda."
readme = "README.md"
requires-python = ">=3.9"
keywords = [ "aws", "lambda", "packaging", "deployment",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.12",]
dependencies = [ "click", "requests", "Jinja2", "pydantic", "aws-lambda-typing", "toml",]
[[project.authors]]
name = "Omar Crosby"
email = "omar.crosby@gmail.com"

[project.license]
file = "LICENSE"

[project.urls]
homepage = "https://github.com/ocrosby/lambda-kit"

[project.optional-dependencies]
dev = [ "black", "flake8", "mypy", "isort", "pylint", "pytest", "pytest-cov", "pytest-mock", "pytest-xdist", "invoke", "radon", "tox", "coverage", "coveralls",]

[project.scripts]
kit = "lambda_kit.__main__:main"

[tool.black]
line-length = 88
target-version = [ "py36", "py37", "py38", "py39", "py310",]
include = "\\.pyi?$"

[tool.pylint]
output-format = "text"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[tool.isort]
profile = "black"
line_length = 88
known_first_party = [ "lambda_kit",]
known_third_party = [ "click", "pytest",]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

[tool.pylint.master]
ignore = [ "venv", ".venv", ".tox", "node_modules", "data",]
jobs = 5

[tool.pylint.messages_control]
disable = [ "C0114", "C0115", "C0116",]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --tb=short --cov=lambda_kit"
testpaths = [ "tests",]
python_files = [ "test_*.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]

[tool.coverage.run]
branch = true
source = [ "lambda_kit",]

[tool.coverage.report]
show_missing = true
fail_under = 43

[tool.setuptools.packages.find]
include = [ "lambda_kit", "lambda_kit.*",]
exclude = [ "data", "node_modules", "tests", "tests.*",]
