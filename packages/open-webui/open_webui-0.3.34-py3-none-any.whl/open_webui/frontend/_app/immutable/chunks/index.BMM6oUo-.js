import{c as s}from"./index.C9ZMts_b.js";import{b as l,d as h}from"./index.NeePGI5c.js";const w=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${o}`},body:JSON.stringify({chat:e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},y=async(o,e,a,n,t)=>{let r=null;const c=await fetch(`${s}/chats/import`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${o}`},body:JSON.stringify({chat:e,meta:a??{},pinned:n,folder_id:t})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(r=i,console.log(i),null));if(r)throw r;return c},j=async(o="",e=null)=>{let a=null;const n=new URLSearchParams;e!==null&&n.append("page",`${e}`);const t=await fetch(`${s}/chats/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(a=r,console.log(r),null));if(a)throw a;return t.map(r=>({...r,time_range:l(r.updated_at)}))},f=async(o="",e)=>{let a=null;const n=await fetch(`${s}/chats/list/user/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n.map(t=>({...t,time_range:l(t.updated_at)}))},$=async(o="")=>{let e=null;const a=await fetch(`${s}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},g=async o=>{let e=null;const a=await fetch(`${s}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},T=async(o,e,a=1)=>{let n=null;const t=new URLSearchParams;t.append("text",e),t.append("page",`${a}`);const r=await fetch(`${s}/chats/search?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).then(c=>c).catch(c=>(n=c,console.log(c),null));if(n)throw n;return r.map(c=>({...c,time_range:l(c.updated_at)}))},m=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/folder/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},C=async o=>{let e=null;const a=await fetch(`${s}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},B=async o=>{let e=null;const a=await fetch(`${s}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},A=async o=>{let e=null;const a=await fetch(`${s}/chats/all/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a},z=async(o="")=>{let e=null;const a=await fetch(`${s}/chats/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return a.map(n=>({...n,time_range:l(n.updated_at)}))},E=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},S=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/share/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},O=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.log(t),null));if(a)throw a;return n},P=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/pin`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.log(t),null));if(a)throw a;return n},I=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/clone`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.log(t),null));if(a)throw a;return n},G=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},U=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/chats/${e}/folder`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({folder_id:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},_=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/archive`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},L=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},b=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/chats/${e}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({chat:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},k=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return n},N=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},J=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/chats/${e}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r.detail,console.log(r),null));if(n)throw n;return t},v=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/chats/${e}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.log(r),null));if(n)throw n;return t},D=async(o,e)=>{let a=null;const n=await fetch(`${s}/chats/${e}/tags/all`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return n},R=async o=>{let e=null;const a=await fetch(`${s}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return a},x=async o=>{let e=null;const a=await fetch(`${s}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return a},F=async o=>{let e=null;const a=await fetch(`${s}/users/permissions/user`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return a},q=async(o,e)=>{let a=null;const n=await fetch(`${s}/users/permissions/user`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return n},H=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/users/update/role`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({id:e,role:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),n=r.detail,null));if(n)throw n;return t},K=async o=>{let e=null;const a=await fetch(`${s}/users/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return a||[]},M=async o=>{let e=null;const a=await fetch(`${s}/users/user/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return a},W=async(o,e)=>{let a=null;const n=await fetch(`${s}/users/user/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return n},Q=async(o,e)=>{let a=null;const n=await fetch(`${s}/users/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return n},u=async(o,e)=>{let a=null;const n=await fetch(`${s}/users/user/info/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return n},V=async o=>{const e=await h().catch(a=>{throw a});if(e)return await u(o,{location:e}),e;throw new Error("Failed to get user location")},X=async(o,e)=>{let a=null;const n=await fetch(`${s}/users/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return n},Y=async(o,e,a)=>{let n=null;const t=await fetch(`${s}/users/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({profile_image_url:a.profile_image_url,email:a.email,name:a.name,password:a.password!==""?a.password:void 0})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),n=r.detail,null));if(n)throw n;return t};export{I as A,m as B,U as C,y as D,T as E,u as F,g as G,x as H,R as I,w as J,W as K,M as L,V as M,D as N,Q as a,f as b,H as c,k as d,K as e,X as f,S as g,N as h,J as i,b as j,A as k,v as l,E as m,L as n,B as o,F as p,q,$ as r,G as s,_ as t,Y as u,C as v,P as w,O as x,j as y,z};
//# sourceMappingURL=index.BMM6oUo-.js.map
