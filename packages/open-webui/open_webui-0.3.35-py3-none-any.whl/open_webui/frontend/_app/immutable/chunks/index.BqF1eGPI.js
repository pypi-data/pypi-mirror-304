import{c as i}from"./index.DK5yNYA1.js";const h=async o=>{let n=null;const a=await fetch(`${i}/auths/admin/details`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return a},u=async o=>{let n=null;const a=await fetch(`${i}/auths/admin/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return a},d=async(o,n)=>{let a=null;const t=await fetch(`${i}/auths/admin/config`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(n)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),a=e.detail,null));if(a)throw a;return t},p=async o=>{let n=null;const a=await fetch(`${i}/auths/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},credentials:"include"}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return a},y=async(o,n)=>{let a=null;const t=await fetch(`${i}/auths/signin`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({email:o,password:n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),a=e.detail,null));if(a)throw a;return t},w=async(o,n,a,t)=>{let e=null;const r=await fetch(`${i}/auths/signup`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:o,email:n,password:a,profile_image_url:t})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),e=s.detail,null));if(e)throw e;return r},f=async()=>{let o=null;if(await fetch(`${i}/auths/signout`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}).then(async n=>{if(!n.ok)throw await n.json();return n}).catch(n=>(console.log(n),o=n.detail,null)),o)throw o},j=async(o,n,a,t,e="pending")=>{let r=null;const s=await fetch(`${i}/auths/add`,{method:"POST",headers:{"Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({name:n,email:a,password:t,role:e})}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),r=l.detail,null));if(r)throw r;return s},g=async(o,n,a)=>{let t=null;const e=await fetch(`${i}/auths/update/profile`,{method:"POST",headers:{"Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({name:n,profile_image_url:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return e},T=async(o,n,a)=>{let t=null;const e=await fetch(`${i}/auths/update/password`,{method:"POST",headers:{"Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({password:n,new_password:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return e},m=async o=>{let n=null;const a=await fetch(`${i}/auths/api_key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return a.api_key},$=async o=>{let n=null;const a=await fetch(`${i}/auths/api_key`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return a.api_key};export{w as a,j as b,f as c,u as d,d as e,T as f,p as g,$ as h,g as i,m as j,h as k,y as u};
//# sourceMappingURL=index.BqF1eGPI.js.map
