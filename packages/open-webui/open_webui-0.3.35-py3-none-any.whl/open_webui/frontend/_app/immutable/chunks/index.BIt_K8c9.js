import{d as l}from"./index.DK5yNYA1.js";const y=async(a="")=>{let i=null;const o=await fetch(`${l}/api/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;let n=(o==null?void 0:o.data)??[];return n=n.filter(t=>t).sort((t,e)=>{var u,d,f,h;const s=((d=(u=t.info)==null?void 0:u.meta)==null?void 0:d.position)!==void 0,c=((h=(f=e.info)==null?void 0:f.meta)==null?void 0:h.position)!==void 0;if(s&&c)return t.info.meta.position-e.info.meta.position;if(s)return-1;if(c)return 1;const r=t.name.toLowerCase(),p=e.name.toLowerCase();return r<p?-1:r>p?1:t.name<e.name?-1:t.name>e.name?1:0}),console.log(n),n},j=async(a,i)=>{let o=null;const n=await fetch(`${l}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},g=async(a,i,o)=>{let n=null;const t=await fetch(`${l}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(o)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?n=e.detail:n=e,null));if(n)throw n;return t},m=async(a="")=>{let i=null;const o=await fetch(`${l}/api/task/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o},$=async(a,i)=>{let o=null;const n=await fetch(`${l}/api/task/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},T=async(a="",i,o,n)=>{var s,c;let t=null;const e=await fetch(`${l}/api/task/title/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:o,...n&&{chat_id:n}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;return((c=(s=e==null?void 0:e.choices[0])==null?void 0:s.message)==null?void 0:c.content.replace(/["']/g,""))??"New Chat"},S=async(a="",i,o,n)=>{var s,c;let t=null;const e=await fetch(`${l}/api/task/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:o,...n&&{chat_id:n}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;try{const p=(((c=(s=e==null?void 0:e.choices[0])==null?void 0:s.message)==null?void 0:c.content)??"").replace(/['‘’`]/g,'"'),u=p.indexOf("{"),d=p.lastIndexOf("}");if(u!==-1&&d!==-1){const f=p.substring(u,d+1),h=JSON.parse(f);return h&&h.tags?Array.isArray(h.tags)?h.tags:[]:[]}return[]}catch(r){return console.error("Failed to parse response: ",r),[]}},C=async(a="",i,o,n)=>{var c,r;let t=null;const e=await fetch(`${l}/api/task/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:o,...n&&{chat_id:n}})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(t=p.detail),null));if(t)throw t;const s=((r=(c=e==null?void 0:e.choices[0])==null?void 0:c.message)==null?void 0:r.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},A=async(a="",i,o,n)=>{var s,c;let t=null;const e=await fetch(`${l}/api/task/query/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:o,prompt:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;return((c=(s=e==null?void 0:e.choices[0])==null?void 0:s.message)==null?void 0:c.content.replace(/["']/g,""))??n},P=async(a="",i,o,n)=>{const t=new AbortController;let e=null;const s=await fetch(`${l}/api/task/moa/completions`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:o,responses:n,stream:!0})}).catch(c=>(console.log(c),e=c,null));if(e)throw e;return[s,t]},O=async(a="")=>{let i=null;const o=await fetch(`${l}/api/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return(o==null?void 0:o.data)??[]},k=async(a,i,o)=>{let n=null;const t=new FormData;t.append("file",i),t.append("urlIdx",o);const e=await fetch(`${l}/api/pipelines/upload`,{method:"POST",headers:{...a&&{authorization:`Bearer ${a}`}},body:t}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?n=s.detail:n=s,null));if(n)throw n;return e},B=async(a,i,o)=>{let n=null;const t=await fetch(`${l}/api/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({url:i,urlIdx:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?n=e.detail:n=e,null));if(n)throw n;return t},z=async(a,i,o)=>{let n=null;const t=await fetch(`${l}/api/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({id:i,urlIdx:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?n=e.detail:n=e,null));if(n)throw n;return t},E=async(a,i)=>{let o=null;const n=new URLSearchParams;i!==void 0&&n.append("urlIdx",i);const t=await fetch(`${l}/api/pipelines?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return(t==null?void 0:t.data)??[]},b=async(a,i,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const e=await fetch(`${l}/api/pipelines/${i}/valves?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return e},v=async(a,i,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const e=await fetch(`${l}/api/pipelines/${i}/valves/spec?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return e},N=async(a="",i,o,n)=>{let t=null;const e=new URLSearchParams;n!==void 0&&e.append("urlIdx",n);const s=await fetch(`${l}/api/pipelines/${i}/valves/update?${e.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(o)}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c?t=c.detail:t=c,null));if(t)throw t;return s},J=async()=>{let a=null;const i=await fetch(`${l}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return i},G=async()=>{let a=null;const i=await fetch(`${l}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return i},x=async()=>{let a=null;const i=await fetch(`${l}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return i},L=async a=>{let i=null;const o=await fetch(`${l}/api/config/model/filter`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o},U=async(a,i,o)=>{let n=null;const t=await fetch(`${l}/api/config/model/filter`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({enabled:i,models:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e,null));if(n)throw n;return t},R=async a=>{let i=null;const o=await fetch(`${l}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o.url},I=async(a,i)=>{let o=null;const n=await fetch(`${l}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({url:i})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t,null));if(o)throw o;return n.url};export{J as a,R as b,L as c,U as d,O as e,N as f,y as g,v as h,b as i,E as j,B as k,z as l,k as m,m as n,$ as o,x as p,G as q,C as r,T as s,S as t,I as u,A as v,j as w,g as x,P as y};
//# sourceMappingURL=index.BIt_K8c9.js.map
