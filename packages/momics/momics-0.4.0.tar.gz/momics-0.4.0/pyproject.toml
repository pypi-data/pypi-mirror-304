[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "momics"
version = "0.4.0"
description = "A package to create and manage genome-related TileDB arrays"
requires-python = ">=3.8"
license = {text = "CC BY-NC 4.0"}
readme = "README.md"
authors = [
    {name = "Jacques Serizay", email = "jacques.serizay@pasteur.fr"}
]
keywords = [
    "multi-omics",
    "genomics",
    "epigenomics",
    "Tile-DB",
    "bioinformatics",
    "matrix",
    "sparse",
    "format"
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3"
]
dependencies = [
    "tiledb",
    "pyBigWig",
    "pyranges",
    "pyfaidx",
    "Biopython",
    "numpy",
    "pandas",
    "pyarrow>=1.0",
    "click>=7",
    "cloup",
    "packaging",
    "psutil",
    "setuptools",
    "typing-extensions",
    "tensorflow[and-cuda]",
]

[project.urls]
homepage = "https://js2264.github.io/momics"
documentation = "https://js2264.github.io/momics"
repository = "https://github.com/js2264/momics"
changelog = "https://github.com/js2264/momics/blob/devel/CHANGES.md"

[project.scripts]
momics = "momics.cli:cli"

[tool.hatch.version]
path = "src/momics/version.py"

[tool.hatch.metadata]
allow-direct-references = true

[project.optional-dependencies]
all = [
    "biopython",
    "dask[array,dataframe]",
    "matplotlib",
    "psutil",
]
test = [
    "coverage[toml]",
    "isort",
    "python-dotenv",
    "pytest",
    "pytest-cov",
    "pytest-order",
    "ruff",
]
dev = [
    "momics[all,test]",
    "pre-commit",
    "twine"
]
docs = [
    'autodoc',
    'sphinx-autoapi',
    "autodocsumm",
    "sphinxcontrib-napoleon",
    "m2r",
    "recommonmark",
    "Sphinx>=1.6",
    "sphinx-autobuild",
    "sphinx-click",
    "furo",
    "pydata-sphinx-theme",
    "sphinx-rtd-theme",
    "myst-parser",
    "nbsphinx",
    "lxml[html_clean]",
]

[tool.black]
line-length = 130
target-version = ['py39']

[tool.ruff]
line-length = 130
src = ["src"]
exclude = [
    "bench/*",
    ".venv",
    "__main__.py",
]
lint.ignore = ["E402", "I001"]
lint.extend-select = [
    "B",  # bugbear
    "E",  # style errors
    "F",  # pyflakes
    "I",  # isort
    "RUF", # ruff-specific rules
    # "UP", # pyupgrade
    "W",  # style  warnings
]
lint.isort.known-first-party = ["momics"]

[tool.pytest.ini_options]
markers = ["order: mark test to run in a specific order"]
minversion = "7"
log_cli_level = "INFO"
xfail_strict = true
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--cov=momics",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
filterwarnings = ["ignore::PendingDeprecationWarning"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["momics"]

omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "return NotImplemented",
    "raise NotImplementedError"
]

[tool.hatch.envs.default.scripts]
fix = "ruff check --fix src tests"
lint = "ruff check src tests"
test = "pytest ."
docs = "sphinx-autobuild docs docs/_build/html"

[tool.hatch.envs.test]
features = ["dev"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py38

[testenv]
install_command = pip install -U {opts} {packages}
deps =
    .[dev,docs]
commands =
    pytest                           ### Run unit tests
    make -C docs html                ### Compile docs
    ruff check src tests --fix       ### Compile docs
    # sybil --check docs/              ### Execute code chunks in docs
allowlist_externals =
    make
"""
