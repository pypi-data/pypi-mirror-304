[atlas]
path = data
regions = brain_regions
hierarchy = hierarchy.json

[morphologies]
path = data/morphologies
hierarchy_level = 12

[compare_source_regions]
skip_comparison = True
manual_annotation_path =
# this is the column name of the cell name in the manual annotation file
col_name_id = name
# this is the column name of the region in the manual annotation file
col_name_region = source
compare_on = source

[compare_axonal_projections]
skip_comparison = True
# path_1 = /path_1/to/axonal_projections_12.csv
# path_2 = /path_2/to/axonal_projections_12.csv

[classify]
# number of processes for the classification task
n_jobs = 20
# the user can specify the desired number of mixture components for a source region
# or leave empty to choose based on the BIC (Bayesian Information Criterion) score
# e.g.: 'DG-mo': 3
n_components = {}
# if true, the number of components with the best BIC is picked,
# otherwise draw one based on the BIC
best_BIC = True
# specify here the feature vectors file to use for clustering: axon_terminals or axon_lengths
feature_vectors_file = axon_lengths

[output]
path = out_clustering_example/

[random]
seed = 42

[connectivity]
# if true, we don't plot graphs for each AP-class
skip_visualization = False
# below this probability of connection, the connection is not shown on the graph
min_prob = 0.01

[compare_morphometrics]
# the morphometrics from which we compute the representativity scores of the tufts
features = section_lengths, remote_bifurcation_angles, number_of_sections_per_neurite, terminal_path_lengths, section_term_branch_orders, section_path_distances, section_term_lengths, section_term_radial_distances

[separate_tufts]
# choose to cluster the tufts by:
# - 'region' (gather all terminals in a region, up to common ancestor)
# - 'sphere_parents' method from axon-synthesis (cluster by radial+path length distance)
clustering_method = sphere_parents
# if this is true, plot the tufts and trunks to 3D html figures as well
plot_debug = True
# the optional morphometrics to compute and output from the trunks, if clustering by region
trunk_morphometrics = segment_lengths
cluster_tufts = True

[sample_axon]
# the source region(s) from which to sample n_samples axons
# '*' to synthesize all source regions observed in the data
source_regions = ['DG-mo_R']
n_samples = 100
params_file = clustering_output.csv
regions_file = axon_terminals_12.csv
tufts_file = tufts_df.csv

[validation]
# if true, we sample axons from the GMMs and plot their projections
verify_classification = True
# if true, we don't re-run classification on the sampled axons
reuse_clusters = True
