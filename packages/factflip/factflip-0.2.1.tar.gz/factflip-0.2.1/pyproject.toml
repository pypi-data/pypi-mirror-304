[tool.poetry]
name = "factflip"
version = "0.2.1"
description = "An image macro meme generator designed for creating fact-checking memes based on misinforming claims and their corrections."
authors = ["Gr√©goire Burel <423662+evhart@users.noreply.github.com>"]
homepage = "https://github.com/evhart/factflip/"
repository = "https://github.com/evhart/factflip/"
license = "MIT"
readme = "README.md"
include = [
    { path = "README.md", format = "sdist" },
    { path = "pyproject.toml", format = "sdist" },
    { path = "LICENSE", format = "sdist" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Utilities",
    "Topic :: Multimedia",
]

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.2.3"
rdflib = "^7.1.0"
requests = "^2.32.3"
ollama = "^0.3.3"
chromadb = "^0.5.15"
beautifulsoup4 = "^4.12.3"
rich = "^13.9.2"
typer = "^0.12.5"
python-dotenv = "^1.0.1"
sparqlwrapper = "^2.0.0"
imgflip-py = "^1.0"
platformdirs = "^4.3.6"

usingversion = "^0.1.2"
[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.12.0"
ruff = "^0.7.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
factflip = "factflip.cli:app"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
upload_to_PyPI = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D",  # pydocstyle
]
ignore = [
    "C901", # too complex
    "W191", # indentation contains tabs
    "D401", # imperative mood
    "D107", # TODO remove docstring warning.
    "D104", # TODO remove docstring warning.
    "D103", # TODO remove docstring warning.
    "D102", # TODO remove docstring warning.
    "D101", # TODO remove docstring warning.
    "D100", # TODO remove docstring warning.
]

[tool.ruff.lint.pydocstyle]
convention = "google"
