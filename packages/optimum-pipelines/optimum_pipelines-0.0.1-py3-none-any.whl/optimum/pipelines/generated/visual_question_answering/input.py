# generated by datamodel-codegen:
#   filename:  input.json
#   timestamp: 2024-10-25T08:14:32+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import BaseModel, Field


class Inputs(BaseModel):
    image: Any = Field(..., description="The image.")
    question: Any = Field(..., description="The question to answer based on the image.")


class VisualQuestionAnsweringParameters(BaseModel):
    top_k: Optional[int] = Field(
        None,
        description="The number of answers to return (will be chosen by order of likelihood). Note that we return less than topk answers if there are not enough options available within the context.",
    )


class VisualQuestionAnsweringInput(BaseModel):
    inputs: Inputs = Field(
        ...,
        description="One (image, question) pair to answer",
        title="VisualQuestionAnsweringInputData",
    )
    parameters: Optional[VisualQuestionAnsweringParameters] = Field(
        None, description="Additional inference parameters"
    )
