# generated by datamodel-codegen:
#   filename:  output.json
#   timestamp: 2024-10-25T08:14:20+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class FillMaskOutputItem(BaseModel):
    sequence: str = Field(..., description="The corresponding input with the mask token prediction.")
    score: float = Field(..., description="The corresponding probability")
    token: int = Field(..., description="The predicted token id (to replace the masked one).")
    token_str: Optional[str] = Field(None, description="The predicted token (to replace the masked one).")


class FillMaskOutput(RootModel[List[FillMaskOutputItem]]):
    root: List[FillMaskOutputItem] = Field(
        ...,
        description="Outputs of inference for the Fill Mask task",
        title="FillMaskOutput",
    )
