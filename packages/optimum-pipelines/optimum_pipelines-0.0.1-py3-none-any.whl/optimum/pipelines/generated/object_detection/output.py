# generated by datamodel-codegen:
#   filename:  output.json
#   timestamp: 2024-10-25T08:14:23+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel, Field, RootModel


class BoundingBox(BaseModel):
    xmin: int = Field(..., description="The x-coordinate of the top-left corner of the bounding box.")
    xmax: int = Field(
        ...,
        description="The x-coordinate of the bottom-right corner of the bounding box.",
    )
    ymin: int = Field(..., description="The y-coordinate of the top-left corner of the bounding box.")
    ymax: int = Field(
        ...,
        description="The y-coordinate of the bottom-right corner of the bounding box.",
    )


class ObjectDetectionOutputItem(BaseModel):
    label: str = Field(..., description="The predicted label for the bounding box.")
    score: float = Field(..., description="The associated score / probability.")
    box: BoundingBox = Field(
        ...,
        description="The predicted bounding box. Coordinates are relative to the top left corner of the input image.",
    )


class ObjectDetectionOutput(RootModel[List[ObjectDetectionOutputItem]]):
    root: List[ObjectDetectionOutputItem] = Field(
        ...,
        description="Outputs of inference for the Object Detection task",
        title="ObjectDetectionOutput",
    )
