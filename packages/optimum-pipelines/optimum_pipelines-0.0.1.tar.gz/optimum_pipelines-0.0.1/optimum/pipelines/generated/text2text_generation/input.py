# generated by datamodel-codegen:
#   filename:  input.json
#   timestamp: 2024-10-25T08:14:30+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field


class Text2textGenerationParameters(BaseModel):
    clean_up_tokenization_spaces: Optional[bool] = Field(
        None,
        description="Whether to clean up the potential extra spaces in the text output.",
    )
    truncation: Optional[str] = Field(
        None,
        description="The truncation strategy to use",
        title="Text2textGenerationTruncationStrategy",
    )
    generate_parameters: Optional[Dict[str, Any]] = Field(
        None,
        description="Additional parametrization of the text generation algorithm",
        title="generateParameters",
    )


class Text2TextGenerationInput(BaseModel):
    inputs: str = Field(..., description="The input text data")
    parameters: Optional[Text2textGenerationParameters] = Field(None, description="Additional inference parameters")
