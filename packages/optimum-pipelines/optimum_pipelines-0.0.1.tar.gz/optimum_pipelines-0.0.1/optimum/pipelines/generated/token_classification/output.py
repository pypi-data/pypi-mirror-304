# generated by datamodel-codegen:
#   filename:  output.json
#   timestamp: 2024-10-25T08:14:31+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class TokenClassificationOutputItem(BaseModel):
    entity_group: Optional[str] = Field(None, description="The predicted label for that group of tokens")
    score: float = Field(..., description="The associated score / probability")
    word: Optional[str] = Field(None, description="The corresponding text")
    start: Optional[int] = Field(None, description="The character position in the input where this group begins.")
    end: Optional[int] = Field(None, description="The character position in the input where this group ends.")


class TokenClassificationOutput(RootModel[List[TokenClassificationOutputItem]]):
    root: List[TokenClassificationOutputItem] = Field(
        ...,
        description="Outputs of inference for the Token Classification task",
        title="TokenClassificationOutput",
    )
