# Copyright 2024 The HuggingFace Team. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import typing
from typing import Any # Required for python > 3.10
from annotated_types import Interval, Gt

{%- if args_lst|length > 1 %}
from optimum.pipelines.generated.{{pipeline_module}}.input import {{inputs_type}}
{%- endif %}
from optimum.pipelines.generated.{{pipeline_module}}.input import {{parameters_class}}

class {{pipeline_class}}:

    def __call__(self,
{%- for arg in args_lst %}
        {{arg[0]}}: {{arg[1]}},
{%- endfor %}
{%- for kwarg in kwargs_lst %}
        {{kwarg[0]}}: {{kwarg[1]}} = {{kwarg[2]}},
{%- endfor %}
    ):
{%- if args_lst|length > 1 %}
        normalized_inputs = {{inputs_type}} (
{%- for arg in args_lst %}
            {{arg[0]}}={{arg[0]}},
{%- endfor %}
        )
{%- else %}
        normalized_inputs = {{args_lst[0][0]}}
{%- endif %}
        normalized_parameters = {{parameters_class}} (
{%- for kwarg in kwargs_lst %}
            {{kwarg[0]}}={{kwarg[0]}},
{%- endfor %}
        )
        return self.forward(normalized_inputs, parameters=normalized_parameters)

    def forward(self, inputs: {{inputs_type}}, parameters: {{parameters_class}}):
        raise NotImplementedError

