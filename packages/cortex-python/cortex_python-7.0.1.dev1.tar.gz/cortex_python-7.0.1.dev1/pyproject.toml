[tool.poetry]
name = "cortex-python"
version = "7.0.1.dev1"
description = "Python module for the Tecnotree Sensa Platform"
authors = ["Tecnotree <support@tecnotree.com>"]
readme = "README.md"
packages = [{include='cortex/**/*.py'}]
license = "Apache-2.0"

[[tool.poetry.source]]
name = "sensa"
url = "https://cognitivescale.jfrog.io/artifactory/api/pypi/cognitivescale_local/simple/"
priority = "explicit"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
strict = true
style = "pep440"
bump = true
# Exclude metadata (+{git SHA}) from version string - aka local versions (https://peps.python.org/pep-0440/#local-version-identifiers).
# Local Versions are not allowed by PyPI, as PEP440 states: "Local version identifiers SHOULD NOT be used when publishing upstream projects to a public index server..."
metadata = false

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
requests = ">=2.31.0,<3,"
requests-toolbelt = ">=1.0.0,"
pyyaml = ">=5.4.1,"
python-dateutil = ">=2.8.2,<3,"
pyjwt = { version="<3", extras=["crypto"] }
cuid = ">=0.3,<0.4" # TODO bump in certifai
dill = "<=0.3.4," # TODO bump in certifai
pytimeparse2 = "^1.7.1"
matplotlib = { version=">3,<4", optional=true}
seaborn = { version=">0.13,<0.14", optional=true}
setuptools = "*"  #  mlflow requires this https://github.com/mlflow/mlflow/issues/11330
pandas = { version="<3", optional=true}
ipython = { version=">=8.10,<9", optional=true}
jinja2={ version="<4", optional=true}
mlflow={ version=">2,<3", optional=true}

# have to explicilty point these to the `sensa` private repo
# this also causes pip to resolve these, so they MUST be added to the `certifai` extra as well.
certifai-evaluator-plugin={ version="*", optional=true, source="sensa" }
cortex-certifai-common={ version="*", optional=true, source="sensa" }
cortex_certifai_engine={ version="*", optional=true, source="sensa" }
cortex_certifai_model_sdk={ version="*", optional=true, source="sensa" }
cortex_certifai_scanner={ version="*", optional=true, source="sensa" }

[tool.poetry.group.dev.dependencies]
tox = ">=4.0,<5.0"
requests-mock = ">=1.10.0"
pipdeptree = "^2.16.1"
pytest = ">=8,<9"
pylint = "*"  # TODO dill verision couldn't pin this
pytest-html = ">=3.2.0,<4"
pytest-cov = ">=4.0.0,<5.0.0"
black = "<25"
sphinx = "^7.2.6"
gitpython = "^3.1.42"
sphinx-multiversion = "^0.2.4"
sphinx-rtd-theme = "^2.0.0"
sphinxcontrib-restbuilder = "^0.3"

[tool.poetry.group.daemon]
optional=true

[tool.poetry.group.daemon.dependencies]
flask="*"
fastapi-cli="*"
uvicorn="*"

[tool.poetry.extras]
# Basic dependencies for developing models within jupyter
models_dev = ["mlflow","ipython", "jinja2", "matplotlib", "seaborn", "pandas"]
# dependencies for running models as skills
models_runtime=["mlflow"]
# certifai evaluator plugin
# cortex-certifai are transitive deps for the eval plugin, they are added here so pip/poetry/conda don't always attempt resolve them.
certifai=["certifai-evaluator-plugin", "cortex-certifai-common", "cortex_certifai_engine", "cortex_certifai_model_sdk", "cortex_certifai_scanner"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
# Wrapper around poetry.core.masonry.api
build-backend = "poetry_dynamic_versioning.backend"
