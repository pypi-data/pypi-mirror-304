services:
  redis:
    image: redis:7-alpine

  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_BROKER_ID: "1"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "CONTROLLER://kafka:9093,PLAINTEXT://:9092"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_ENABLE_KRAFT: "yes"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 50

  test:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    volumes:
      - ./:/test
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      REDIS_URL: "redis://redis:6379/0"

  test-coverage:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    volumes:
      - ./:/test
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      REDIS_URL: "redis://redis:6379/0"
    command: tox run -e coverage -- --with-custom-logging
