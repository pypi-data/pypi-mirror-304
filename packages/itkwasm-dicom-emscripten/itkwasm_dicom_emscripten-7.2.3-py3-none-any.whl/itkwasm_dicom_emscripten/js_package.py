# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var St=Object.defineProperty;var kt=(A,e)=>{for(var t in e)St(A,t,{get:e[t],enumerable:!0})};var Ft="7.2.3",RA=Ft;var bt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},b=bt;var Rt={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},W=Rt;function Ut(A,e){let t=null;switch(A){case b.UInt8:{t=new Uint8Array(e);break}case b.Int8:{t=new Int8Array(e);break}case b.UInt16:{t=new Uint16Array(e);break}case b.Int16:{t=new Int16Array(e);break}case b.UInt32:{t=new Uint32Array(e);break}case b.Int32:{t=new Int32Array(e);break}case b.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case b.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case W.Float32:{t=new Float32Array(e);break}case W.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var G=Ut;var Nt={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},Be=Nt;var UA=class{dimension;componentType;pixelType;components;constructor(e=2,t=b.UInt8,r=Be.Scalar,n=1){this.dimension=e,this.componentType=t,this.pixelType=r,this.components=n}},ue=UA;function Tt(A,e,t,r,n){A[r+t*e]=n}var ce=Tt;var NA=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new ue){this.imageType=e;let t=e.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)ce(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},Ce=NA;function Gt(A){if(A.length<1)throw Error("At least one images is required.");let e=A[0];if(e.data===null)throw Error("Image data is null.");let t=new Ce(e.imageType);t.origin=Array.from(e.origin),t.spacing=Array.from(e.spacing);let r=t.imageType.dimension;t.direction=e.direction.slice();let n=r-1;t.size=Array.from(e.size);let i=A.reduce((s,a)=>s+a.size[n],0);t.size[n]=i;let o=t.size.reduce((s,a)=>s*a,1)*t.imageType.components,I=e.data.constructor;t.data=new I(o);let c=t.imageType.components;for(let s=0;s<t.size.length-1;s++)c*=t.size[s];let B=0;if(t.data!=null)for(let s=0;s<A.length;s++)t.data.set(A[s].data,c*B),B+=A[s].size[n];else throw Error("Could not create result image data.");return t}var TA=Gt;var GA=class{fcn;workerQueue;runInfo;constructor(e,t){this.fcn=t,this.workerQueue=new Array(e),this.workerQueue.fill(null),this.runInfo=[]}runTasks(e,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((n,i)=>{r.resolve=n,r.reject=i,r.results=new Array(e.length),r.completedTasks=0,r.addingTasks=!0,e.forEach((o,I)=>{this.addTask(r.index,I,o)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let e=0;e<this.workerQueue.length;e++){let t=this.workerQueue[e];t?.terminate(),this.workerQueue[e]=null}}cancel(e){let t=this.runInfo[e];t!=null&&(t.canceled=!0)}addTask(e,t,r){let n=this.runInfo[e];if(n?.canceled===!0){n.reject("Remaining tasks canceled"),this.clearTask(n.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();n.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:o,...I})=>{if(this.workerQueue.push(o),this.runInfo[e]!==null){if(n.runningWorkers--,n.results[t]=I,n.completedTasks++,n.progressCallback!=null&&n.progressCallback(n.completedTasks,n.results.length),n.taskQueue.length>0){let c=n.taskQueue.shift();this.addTask(e,c[0],c[1])}else if(!n.addingTasks&&n.runningWorkers===0){let c=n.results;n.resolve(c),this.clearTask(n.index)}}}).catch(o=>{n.reject(o),this.clearTask(n.index)})}else n.runningWorkers!==0||n.postponed?n.taskQueue.push([t,r]):(n.postponed=!0,setTimeout(()=>{n.postponed=!1,this.addTask(n.index,t,r)},50))}clearTask(e){this.runInfo[e].results=[],this.runInfo[e].taskQueue=[],this.runInfo[e].progressCallback=null,this.runInfo[e].canceled=null,this.runInfo[e].reject=()=>{},this.runInfo[e].resolve=()=>{}}},OA=GA;var Ot={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},E=Ot;var Ee=Symbol("Comlink.proxy"),Lt=Symbol("Comlink.endpoint"),xA=Symbol("Comlink.releaseProxy"),LA=Symbol("Comlink.finalizer"),IA=Symbol("Comlink.thrown"),pe=A=>typeof A=="object"&&A!==null||typeof A=="function",Pt={canHandle:A=>pe(A)&&A[Ee],serialize(A){let{port1:e,port2:t}=new MessageChannel;return me(A,e),[t,[t]]},deserialize(A){return A.start(),JA(A)}},xt={canHandle:A=>pe(A)&&IA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Qe=new Map([["proxy",Pt],["throw",xt]]);function Jt(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function me(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(n){if(!n||!n.data)return;if(!Jt(t,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:i,type:o,path:I}=Object.assign({path:[]},n.data),c=(n.data.argumentList||[]).map(H),B;try{let s=I.slice(0,-1).reduce((f,l)=>f[l],A),a=I.reduce((f,l)=>f[l],A);switch(o){case"GET":B=a;break;case"SET":s[I.slice(-1)[0]]=H(n.data.value),B=!0;break;case"APPLY":B=a.apply(s,c);break;case"CONSTRUCT":{let f=new a(...c);B=qt(f)}break;case"ENDPOINT":{let{port1:f,port2:l}=new MessageChannel;me(A,l),B=HA(f,[f])}break;case"RELEASE":B=void 0;break;default:return}}catch(s){B={value:s,[IA]:0}}Promise.resolve(B).catch(s=>({value:s,[IA]:0})).then(s=>{let[a,f]=BA(s);e.postMessage(Object.assign(Object.assign({},a),{id:i}),f),o==="RELEASE"&&(e.removeEventListener("message",r),de(e),LA in A&&typeof A[LA]=="function"&&A[LA]())}).catch(s=>{let[a,f]=BA({value:new TypeError("Unserializable return value"),[IA]:0});e.postMessage(Object.assign(Object.assign({},a),{id:i}),f)})}),e.start&&e.start()}function Ht(A){return A.constructor.name==="MessagePort"}function de(A){Ht(A)&&A.close()}function JA(A,e){return PA(A,[],e)}function sA(A){if(A)throw new Error("Proxy has been released and is not useable")}function he(A){return Y(A,{type:"RELEASE"}).then(()=>{de(A)})}var gA=new WeakMap,lA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(gA.get(A)||0)-1;gA.set(A,e),e===0&&he(A)});function Mt(A,e){let t=(gA.get(e)||0)+1;gA.set(e,t),lA&&lA.register(A,e,A)}function Wt(A){lA&&lA.unregister(A)}function PA(A,e=[],t=function(){}){let r=!1,n=new Proxy(t,{get(i,o){if(sA(r),o===xA)return()=>{Wt(n),he(A),r=!0};if(o==="then"){if(e.length===0)return{then:()=>n};let I=Y(A,{type:"GET",path:e.map(c=>c.toString())}).then(H);return I.then.bind(I)}return PA(A,[...e,o])},set(i,o,I){sA(r);let[c,B]=BA(I);return Y(A,{type:"SET",path:[...e,o].map(s=>s.toString()),value:c},B).then(H)},apply(i,o,I){sA(r);let c=e[e.length-1];if(c===Lt)return Y(A,{type:"ENDPOINT"}).then(H);if(c==="bind")return PA(A,e.slice(0,-1));let[B,s]=fe(I);return Y(A,{type:"APPLY",path:e.map(a=>a.toString()),argumentList:B},s).then(H)},construct(i,o){sA(r);let[I,c]=fe(o);return Y(A,{type:"CONSTRUCT",path:e.map(B=>B.toString()),argumentList:I},c).then(H)}});return Mt(n,A),n}function Yt(A){return Array.prototype.concat.apply([],A)}function fe(A){let e=A.map(BA);return[e.map(t=>t[0]),Yt(e.map(t=>t[1]))]}var ye=new WeakMap;function HA(A,e){return ye.set(A,e),A}function qt(A){return Object.assign(A,{[Ee]:!0})}function BA(A){for(let[e,t]of Qe)if(t.canHandle(A)){let[r,n]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},n]}return[{type:"RAW",value:A},ye.get(A)||[]]}function H(A){switch(A.type){case"HANDLER":return Qe.get(A.name).deserialize(A.value);case"RAW":return A.value}}function Y(A,e,t){return new Promise(r=>{let n=Kt();A.addEventListener("message",function i(o){!o.data||!o.data.id||o.data.id!==n||(A.removeEventListener("message",i),r(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),t)})}function Kt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function X(A,e){return function(){return A.apply(e,arguments)}}var{toString:vt}=Object.prototype,{getPrototypeOf:YA}=Object,cA=(A=>e=>{let t=vt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),O=A=>(A=A.toLowerCase(),e=>cA(e)===A),CA=A=>e=>typeof e===A,{isArray:q}=Array,$=CA("undefined");function jt(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&T(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var ke=O("ArrayBuffer");function _t(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&ke(A.buffer),e}var zt=CA("string"),T=CA("function"),Fe=CA("number"),fA=A=>A!==null&&typeof A=="object",Vt=A=>A===!0||A===!1,uA=A=>{if(cA(A)!=="object")return!1;let e=YA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Zt=O("Date"),Xt=O("File"),$t=O("Blob"),Ar=O("FileList"),er=A=>fA(A)&&T(A.pipe),tr=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||T(A.append)&&((e=cA(A))==="formdata"||e==="object"&&T(A.toString)&&A.toString()==="[object FormData]"))},rr=O("URLSearchParams"),ir=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function AA(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,n;if(typeof A!="object"&&(A=[A]),q(A))for(r=0,n=A.length;r<n;r++)e.call(null,A[r],r,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),o=i.length,I;for(r=0;r<o;r++)I=i[r],e.call(null,A[I],I,A)}}function be(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,n;for(;r-- >0;)if(n=t[r],e===n.toLowerCase())return n;return null}var Re=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Ue=A=>!$(A)&&A!==Re;function WA(){let{caseless:A}=Ue(this)&&this||{},e={},t=(r,n)=>{let i=A&&be(e,n)||n;uA(e[i])&&uA(r)?e[i]=WA(e[i],r):uA(r)?e[i]=WA({},r):q(r)?e[i]=r.slice():e[i]=r};for(let r=0,n=arguments.length;r<n;r++)arguments[r]&&AA(arguments[r],t);return e}var nr=(A,e,t,{allOwnKeys:r}={})=>(AA(e,(n,i)=>{t&&T(n)?A[i]=X(n,t):A[i]=n},{allOwnKeys:r}),A),or=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),ar=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},sr=(A,e,t,r)=>{let n,i,o,I={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),i=n.length;i-- >0;)o=n[i],(!r||r(o,A,e))&&!I[o]&&(e[o]=A[o],I[o]=!0);A=t!==!1&&YA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Ir=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},gr=A=>{if(!A)return null;if(q(A))return A;let e=A.length;if(!Fe(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},lr=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&YA(Uint8Array)),Br=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),n;for(;(n=r.next())&&!n.done;){let i=n.value;e.call(A,i[0],i[1])}},ur=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},cr=O("HTMLFormElement"),Cr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,n){return r.toUpperCase()+n}),De=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),fr=O("RegExp"),Ne=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};AA(t,(n,i)=>{let o;(o=e(n,i,A))!==!1&&(r[i]=o||n)}),Object.defineProperties(A,r)},Er=A=>{Ne(A,(e,t)=>{if(T(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(T(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},pr=(A,e)=>{let t={},r=n=>{n.forEach(i=>{t[i]=!0})};return q(A)?r(A):r(String(A).split(e)),t},Qr=()=>{},mr=(A,e)=>(A=+A,Number.isFinite(A)?A:e),MA="abcdefghijklmnopqrstuvwxyz",Se="0123456789",Te={DIGIT:Se,ALPHA:MA,ALPHA_DIGIT:MA+MA.toUpperCase()+Se},dr=(A=16,e=Te.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function hr(A){return!!(A&&T(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var yr=A=>{let e=new Array(10),t=(r,n)=>{if(fA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[n]=r;let i=q(r)?[]:{};return AA(r,(o,I)=>{let c=t(o,n+1);!$(c)&&(i[I]=c)}),e[n]=void 0,i}}return r};return t(A,0)},wr=O("AsyncFunction"),Dr=A=>A&&(fA(A)||T(A))&&T(A.then)&&T(A.catch),g={isArray:q,isArrayBuffer:ke,isBuffer:jt,isFormData:tr,isArrayBufferView:_t,isString:zt,isNumber:Fe,isBoolean:Vt,isObject:fA,isPlainObject:uA,isUndefined:$,isDate:Zt,isFile:Xt,isBlob:$t,isRegExp:fr,isFunction:T,isStream:er,isURLSearchParams:rr,isTypedArray:lr,isFileList:Ar,forEach:AA,merge:WA,extend:nr,trim:ir,stripBOM:or,inherits:ar,toFlatObject:sr,kindOf:cA,kindOfTest:O,endsWith:Ir,toArray:gr,forEachEntry:Br,matchAll:ur,isHTMLForm:cr,hasOwnProperty:De,hasOwnProp:De,reduceDescriptors:Ne,freezeMethods:Er,toObjectSet:pr,toCamelCase:Cr,noop:Qr,toFiniteNumber:mr,findKey:be,global:Re,isContextDefined:Ue,ALPHABET:Te,generateString:dr,isSpecCompliantForm:hr,toJSONObject:yr,isAsyncFn:wr,isThenable:Dr};function K(A,e,t,r,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),n&&(this.response=n)}g.inherits(K,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:g.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Ge=K.prototype,Oe={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Oe[A]={value:A}});Object.defineProperties(K,Oe);Object.defineProperty(Ge,"isAxiosError",{value:!0});K.from=(A,e,t,r,n,i)=>{let o=Object.create(Ge);return g.toFlatObject(A,o,function(c){return c!==Error.prototype},I=>I!=="isAxiosError"),K.call(o,A.message,e,t,r,n),o.cause=A,o.name=A.name,i&&Object.assign(o,i),o};var m=K;var EA=null;function qA(A){return g.isPlainObject(A)||g.isArray(A)}function Pe(A){return g.endsWith(A,"[]")?A.slice(0,-2):A}function Le(A,e,t){return A?A.concat(e).map(function(n,i){return n=Pe(n),!t&&i?"["+n+"]":n}).join(t?".":""):e}function Sr(A){return g.isArray(A)&&!A.some(qA)}var kr=g.toFlatObject(g,{},null,function(e){return/^is[A-Z]/.test(e)});function Fr(A,e,t){if(!g.isObject(A))throw new TypeError("target must be an object");e=e||new(EA||FormData),t=g.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(u,p){return!g.isUndefined(p[u])});let r=t.metaTokens,n=t.visitor||s,i=t.dots,o=t.indexes,c=(t.Blob||typeof Blob<"u"&&Blob)&&g.isSpecCompliantForm(e);if(!g.isFunction(n))throw new TypeError("visitor must be a function");function B(C){if(C===null)return"";if(g.isDate(C))return C.toISOString();if(!c&&g.isBlob(C))throw new m("Blob is not supported. Use a Buffer instead.");return g.isArrayBuffer(C)||g.isTypedArray(C)?c&&typeof Blob=="function"?new Blob([C]):Buffer.from(C):C}function s(C,u,p){let Q=C;if(C&&!p&&typeof C=="object"){if(g.endsWith(u,"{}"))u=r?u:u.slice(0,-2),C=JSON.stringify(C);else if(g.isArray(C)&&Sr(C)||(g.isFileList(C)||g.endsWith(u,"[]"))&&(Q=g.toArray(C)))return u=Pe(u),Q.forEach(function(S,Z){!(g.isUndefined(S)||S===null)&&e.append(o===!0?Le([u],Z,i):o===null?u:u+"[]",B(S))}),!1}return qA(C)?!0:(e.append(Le(p,u,i),B(C)),!1)}let a=[],f=Object.assign(kr,{defaultVisitor:s,convertValue:B,isVisitable:qA});function l(C,u){if(!g.isUndefined(C)){if(a.indexOf(C)!==-1)throw Error("Circular reference detected in "+u.join("."));a.push(C),g.forEach(C,function(Q,d){(!(g.isUndefined(Q)||Q===null)&&n.call(e,Q,g.isString(d)?d.trim():d,u,f))===!0&&l(Q,u?u.concat(d):[d])}),a.pop()}}if(!g.isObject(A))throw new TypeError("data must be an object");return l(A),e}var P=Fr;function xe(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function Je(A,e){this._pairs=[],A&&P(A,this,e)}var He=Je.prototype;He.append=function(e,t){this._pairs.push([e,t])};He.toString=function(e){let t=e?function(r){return e.call(this,r,xe)}:xe;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};var pA=Je;function br(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function eA(A,e,t){if(!e)return A;let r=t&&t.encode||br,n=t&&t.serialize,i;if(n?i=n(e,t):i=g.isURLSearchParams(e)?e.toString():new pA(e,t).toString(r),i){let o=A.indexOf("#");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var KA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){g.forEach(this.handlers,function(r){r!==null&&e(r)})}},vA=KA;var QA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Me=typeof URLSearchParams<"u"?URLSearchParams:pA;var We=typeof FormData<"u"?FormData:null;var Ye=typeof Blob<"u"?Blob:null;var qe={isBrowser:!0,classes:{URLSearchParams:Me,FormData:We,Blob:Ye},protocols:["http","https","file","blob","url","data"]};var jA={};kt(jA,{hasBrowserEnv:()=>Ke,hasStandardBrowserEnv:()=>Rr,hasStandardBrowserWebWorkerEnv:()=>Ur});var Ke=typeof window<"u"&&typeof document<"u",Rr=(A=>Ke&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Ur=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var R={...jA,...qe};function _A(A,e){return P(A,new R.classes.URLSearchParams,Object.assign({visitor:function(t,r,n,i){return R.isNode&&g.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function Nr(A){return g.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function Tr(A){let e={},t=Object.keys(A),r,n=t.length,i;for(r=0;r<n;r++)i=t[r],e[i]=A[i];return e}function Gr(A){function e(t,r,n,i){let o=t[i++];if(o==="__proto__")return!0;let I=Number.isFinite(+o),c=i>=t.length;return o=!o&&g.isArray(n)?n.length:o,c?(g.hasOwnProp(n,o)?n[o]=[n[o],r]:n[o]=r,!I):((!n[o]||!g.isObject(n[o]))&&(n[o]=[]),e(t,r,n[o],i)&&g.isArray(n[o])&&(n[o]=Tr(n[o])),!I)}if(g.isFormData(A)&&g.isFunction(A.entries)){let t={};return g.forEachEntry(A,(r,n)=>{e(Nr(r),n,t,0)}),t}return null}var mA=Gr;function Or(A,e,t){if(g.isString(A))try{return(e||JSON.parse)(A),g.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var zA={transitional:QA,adapter:["xhr","http"],transformRequest:[function(e,t){let r=t.getContentType()||"",n=r.indexOf("application/json")>-1,i=g.isObject(e);if(i&&g.isHTMLForm(e)&&(e=new FormData(e)),g.isFormData(e))return n?JSON.stringify(mA(e)):e;if(g.isArrayBuffer(e)||g.isBuffer(e)||g.isStream(e)||g.isFile(e)||g.isBlob(e))return e;if(g.isArrayBufferView(e))return e.buffer;if(g.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let I;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return _A(e,this.formSerializer).toString();if((I=g.isFileList(e))||r.indexOf("multipart/form-data")>-1){let c=this.env&&this.env.FormData;return P(I?{"files[]":e}:e,c&&new c,this.formSerializer)}}return i||n?(t.setContentType("application/json",!1),Or(e)):e}],transformResponse:[function(e){let t=this.transitional||zA.transitional,r=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&g.isString(e)&&(r&&!this.responseType||n)){let o=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(I){if(o)throw I.name==="SyntaxError"?m.from(I,m.ERR_BAD_RESPONSE,this,null,this.response):I}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:R.classes.FormData,Blob:R.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};g.forEach(["delete","get","head","post","put","patch"],A=>{zA.headers[A]={}});var v=zA;var Lr=g.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),ve=A=>{let e={},t,r,n;return A&&A.split(`
`).forEach(function(o){n=o.indexOf(":"),t=o.substring(0,n).trim().toLowerCase(),r=o.substring(n+1).trim(),!(!t||e[t]&&Lr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var je=Symbol("internals");function tA(A){return A&&String(A).trim().toLowerCase()}function dA(A){return A===!1||A==null?A:g.isArray(A)?A.map(dA):String(A)}function Pr(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var xr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function VA(A,e,t,r,n){if(g.isFunction(r))return r.call(this,e,t);if(n&&(e=t),!!g.isString(e)){if(g.isString(r))return e.indexOf(r)!==-1;if(g.isRegExp(r))return r.test(e)}}function Jr(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function Hr(A,e){let t=g.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(n,i,o){return this[r].call(this,e,n,i,o)},configurable:!0})})}var j=class{constructor(e){e&&this.set(e)}set(e,t,r){let n=this;function i(I,c,B){let s=tA(c);if(!s)throw new Error("header name must be a non-empty string");let a=g.findKey(n,s);(!a||n[a]===void 0||B===!0||B===void 0&&n[a]!==!1)&&(n[a||c]=dA(I))}let o=(I,c)=>g.forEach(I,(B,s)=>i(B,s,c));return g.isPlainObject(e)||e instanceof this.constructor?o(e,t):g.isString(e)&&(e=e.trim())&&!xr(e)?o(ve(e),t):e!=null&&i(t,e,r),this}get(e,t){if(e=tA(e),e){let r=g.findKey(this,e);if(r){let n=this[r];if(!t)return n;if(t===!0)return Pr(n);if(g.isFunction(t))return t.call(this,n,r);if(g.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=tA(e),e){let r=g.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||VA(this,this[r],r,t)))}return!1}delete(e,t){let r=this,n=!1;function i(o){if(o=tA(o),o){let I=g.findKey(r,o);I&&(!t||VA(r,r[I],I,t))&&(delete r[I],n=!0)}}return g.isArray(e)?e.forEach(i):i(e),n}clear(e){let t=Object.keys(this),r=t.length,n=!1;for(;r--;){let i=t[r];(!e||VA(this,this[i],i,e,!0))&&(delete this[i],n=!0)}return n}normalize(e){let t=this,r={};return g.forEach(this,(n,i)=>{let o=g.findKey(r,i);if(o){t[o]=dA(n),delete t[i];return}let I=e?Jr(i):String(i).trim();I!==i&&delete t[i],t[I]=dA(n),r[I]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return g.forEach(this,(r,n)=>{r!=null&&r!==!1&&(t[n]=e&&g.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(n=>r.set(n)),r}static accessor(e){let r=(this[je]=this[je]={accessors:{}}).accessors,n=this.prototype;function i(o){let I=tA(o);r[I]||(Hr(n,o),r[I]=!0)}return g.isArray(e)?e.forEach(i):i(e),this}};j.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);g.reduceDescriptors(j.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});g.freezeMethods(j);var U=j;function rA(A,e){let t=this||v,r=e||t,n=U.from(r.headers),i=r.data;return g.forEach(A,function(I){i=I.call(t,i,n.normalize(),e?e.status:void 0)}),n.normalize(),i}function iA(A){return!!(A&&A.__CANCEL__)}function _e(A,e,t){m.call(this,A??"canceled",m.ERR_CANCELED,e,t),this.name="CanceledError"}g.inherits(_e,m,{__CANCEL__:!0});var x=_e;function ZA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new m("Request failed with status code "+t.status,[m.ERR_BAD_REQUEST,m.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var ze=R.hasStandardBrowserEnv?{write(A,e,t,r,n,i){let o=[A+"="+encodeURIComponent(e)];g.isNumber(t)&&o.push("expires="+new Date(t).toGMTString()),g.isString(r)&&o.push("path="+r),g.isString(n)&&o.push("domain="+n),i===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function XA(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function $A(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function nA(A,e){return A&&!XA(e)?$A(A,e):e}var Ve=R.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function n(i){let o=i;return e&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=n(window.location.href),function(o){let I=g.isString(o)?n(o):o;return I.protocol===r.protocol&&I.host===r.host}}():function(){return function(){return!0}}();function Ae(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Mr(A,e){A=A||10;let t=new Array(A),r=new Array(A),n=0,i=0,o;return e=e!==void 0?e:1e3,function(c){let B=Date.now(),s=r[i];o||(o=B),t[n]=c,r[n]=B;let a=i,f=0;for(;a!==n;)f+=t[a++],a=a%A;if(n=(n+1)%A,n===i&&(i=(i+1)%A),B-o<e)return;let l=s&&B-s;return l?Math.round(f*1e3/l):void 0}}var Ze=Mr;function Xe(A,e){let t=0,r=Ze(50,250);return n=>{let i=n.loaded,o=n.lengthComputable?n.total:void 0,I=i-t,c=r(I),B=i<=o;t=i;let s={loaded:i,total:o,progress:o?i/o:void 0,bytes:I,rate:c||void 0,estimated:c&&o&&B?(o-i)/c:void 0,event:n};s[e?"download":"upload"]=!0,A(s)}}var Wr=typeof XMLHttpRequest<"u",$e=Wr&&function(A){return new Promise(function(t,r){let n=A.data,i=U.from(A.headers).normalize(),{responseType:o,withXSRFToken:I}=A,c;function B(){A.cancelToken&&A.cancelToken.unsubscribe(c),A.signal&&A.signal.removeEventListener("abort",c)}let s;if(g.isFormData(n)){if(R.hasStandardBrowserEnv||R.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((s=i.getContentType())!==!1){let[u,...p]=s?s.split(";").map(Q=>Q.trim()).filter(Boolean):[];i.setContentType([u||"multipart/form-data",...p].join("; "))}}let a=new XMLHttpRequest;if(A.auth){let u=A.auth.username||"",p=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(u+":"+p))}let f=nA(A.baseURL,A.url);a.open(A.method.toUpperCase(),eA(f,A.params,A.paramsSerializer),!0),a.timeout=A.timeout;function l(){if(!a)return;let u=U.from("getAllResponseHeaders"in a&&a.getAllResponseHeaders()),Q={data:!o||o==="text"||o==="json"?a.responseText:a.response,status:a.status,statusText:a.statusText,headers:u,config:A,request:a};ZA(function(S){t(S),B()},function(S){r(S),B()},Q),a=null}if("onloadend"in a?a.onloadend=l:a.onreadystatechange=function(){!a||a.readyState!==4||a.status===0&&!(a.responseURL&&a.responseURL.indexOf("file:")===0)||setTimeout(l)},a.onabort=function(){a&&(r(new m("Request aborted",m.ECONNABORTED,A,a)),a=null)},a.onerror=function(){r(new m("Network Error",m.ERR_NETWORK,A,a)),a=null},a.ontimeout=function(){let p=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",Q=A.transitional||QA;A.timeoutErrorMessage&&(p=A.timeoutErrorMessage),r(new m(p,Q.clarifyTimeoutError?m.ETIMEDOUT:m.ECONNABORTED,A,a)),a=null},R.hasStandardBrowserEnv&&(I&&g.isFunction(I)&&(I=I(A)),I||I!==!1&&Ve(f))){let u=A.xsrfHeaderName&&A.xsrfCookieName&&ze.read(A.xsrfCookieName);u&&i.set(A.xsrfHeaderName,u)}n===void 0&&i.setContentType(null),"setRequestHeader"in a&&g.forEach(i.toJSON(),function(p,Q){a.setRequestHeader(Q,p)}),g.isUndefined(A.withCredentials)||(a.withCredentials=!!A.withCredentials),o&&o!=="json"&&(a.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&a.addEventListener("progress",Xe(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&a.upload&&a.upload.addEventListener("progress",Xe(A.onUploadProgress)),(A.cancelToken||A.signal)&&(c=u=>{a&&(r(!u||u.type?new x(null,A,a):u),a.abort(),a=null)},A.cancelToken&&A.cancelToken.subscribe(c),A.signal&&(A.signal.aborted?c():A.signal.addEventListener("abort",c)));let C=Ae(f);if(C&&R.protocols.indexOf(C)===-1){r(new m("Unsupported protocol "+C+":",m.ERR_BAD_REQUEST,A));return}a.send(n||null)})};var ee={http:EA,xhr:$e};g.forEach(ee,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var At=A=>`- ${A}`,Yr=A=>g.isFunction(A)||A===null||A===!1,hA={getAdapter:A=>{A=g.isArray(A)?A:[A];let{length:e}=A,t,r,n={};for(let i=0;i<e;i++){t=A[i];let o;if(r=t,!Yr(t)&&(r=ee[(o=String(t)).toLowerCase()],r===void 0))throw new m(`Unknown adapter '${o}'`);if(r)break;n[o||"#"+i]=r}if(!r){let i=Object.entries(n).map(([I,c])=>`adapter ${I} `+(c===!1?"is not supported by the environment":"is not available in the build")),o=e?i.length>1?`since :
`+i.map(At).join(`
`):" "+At(i[0]):"as no adapter specified";throw new m("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return r},adapters:ee};function te(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new x(null,A)}function yA(A){return te(A),A.headers=U.from(A.headers),A.data=rA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),hA.getAdapter(A.adapter||v.adapter)(A).then(function(r){return te(A),r.data=rA.call(A,A.transformResponse,r),r.headers=U.from(r.headers),r},function(r){return iA(r)||(te(A),r&&r.response&&(r.response.data=rA.call(A,A.transformResponse,r.response),r.response.headers=U.from(r.response.headers))),Promise.reject(r)})}var et=A=>A instanceof U?{...A}:A;function L(A,e){e=e||{};let t={};function r(B,s,a){return g.isPlainObject(B)&&g.isPlainObject(s)?g.merge.call({caseless:a},B,s):g.isPlainObject(s)?g.merge({},s):g.isArray(s)?s.slice():s}function n(B,s,a){if(g.isUndefined(s)){if(!g.isUndefined(B))return r(void 0,B,a)}else return r(B,s,a)}function i(B,s){if(!g.isUndefined(s))return r(void 0,s)}function o(B,s){if(g.isUndefined(s)){if(!g.isUndefined(B))return r(void 0,B)}else return r(void 0,s)}function I(B,s,a){if(a in e)return r(B,s);if(a in A)return r(void 0,B)}let c={url:i,method:i,data:i,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:I,headers:(B,s)=>n(et(B),et(s),!0)};return g.forEach(Object.keys(Object.assign({},A,e)),function(s){let a=c[s]||n,f=a(A[s],e[s],s);g.isUndefined(f)&&a!==I||(t[s]=f)}),t}var wA="1.6.8";var re={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{re[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var tt={};re.transitional=function(e,t,r){function n(i,o){return"[Axios v"+wA+"] Transitional option '"+i+"'"+o+(r?". "+r:"")}return(i,o,I)=>{if(e===!1)throw new m(n(o," has been removed"+(t?" in "+t:"")),m.ERR_DEPRECATED);return t&&!tt[o]&&(tt[o]=!0,console.warn(n(o," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,o,I):!0}};function qr(A,e,t){if(typeof A!="object")throw new m("options must be an object",m.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),n=r.length;for(;n-- >0;){let i=r[n],o=e[i];if(o){let I=A[i],c=I===void 0||o(I,i,A);if(c!==!0)throw new m("option "+i+" must be "+c,m.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new m("Unknown option "+i,m.ERR_BAD_OPTION)}}var DA={assertOptions:qr,validators:re};var J=DA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new vA,response:new vA}}async request(e,t){try{return await this._request(e,t)}catch(r){if(r instanceof Error){let n;Error.captureStackTrace?Error.captureStackTrace(n={}):n=new Error;let i=n.stack?n.stack.replace(/^.+\n/,""):"";r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}throw r}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=L(this.defaults,t);let{transitional:r,paramsSerializer:n,headers:i}=t;r!==void 0&&DA.assertOptions(r,{silentJSONParsing:J.transitional(J.boolean),forcedJSONParsing:J.transitional(J.boolean),clarifyTimeoutError:J.transitional(J.boolean)},!1),n!=null&&(g.isFunction(n)?t.paramsSerializer={serialize:n}:DA.assertOptions(n,{encode:J.function,serialize:J.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let o=i&&g.merge(i.common,i[t.method]);i&&g.forEach(["delete","get","head","post","put","patch","common"],C=>{delete i[C]}),t.headers=U.concat(o,i);let I=[],c=!0;this.interceptors.request.forEach(function(u){typeof u.runWhen=="function"&&u.runWhen(t)===!1||(c=c&&u.synchronous,I.unshift(u.fulfilled,u.rejected))});let B=[];this.interceptors.response.forEach(function(u){B.push(u.fulfilled,u.rejected)});let s,a=0,f;if(!c){let C=[yA.bind(this),void 0];for(C.unshift.apply(C,I),C.push.apply(C,B),f=C.length,s=Promise.resolve(t);a<f;)s=s.then(C[a++],C[a++]);return s}f=I.length;let l=t;for(a=0;a<f;){let C=I[a++],u=I[a++];try{l=C(l)}catch(p){u.call(this,p);break}}try{s=yA.call(this,l)}catch(C){return Promise.reject(C)}for(a=0,f=B.length;a<f;)s=s.then(B[a++],B[a++]);return s}getUri(e){e=L(this.defaults,e);let t=nA(e.baseURL,e.url);return eA(t,e.params,e.paramsSerializer)}};g.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(t,r){return this.request(L(r||{},{method:e,url:t,data:(r||{}).data}))}});g.forEach(["post","put","patch"],function(e){function t(r){return function(i,o,I){return this.request(L(I||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:o}))}}_.prototype[e]=t(),_.prototype[e+"Form"]=t(!0)});var oA=_;var ie=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(n=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](n);r._listeners=null}),this.promise.then=n=>{let i,o=new Promise(I=>{r.subscribe(I),i=I}).then(n);return o.cancel=function(){r.unsubscribe(i)},o},e(function(i,o,I){r.reason||(r.reason=new x(i,o,I),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},rt=ie;function ne(A){return function(t){return A.apply(null,t)}}function oe(A){return g.isObject(A)&&A.isAxiosError===!0}var ae={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(ae).forEach(([A,e])=>{ae[e]=A});var it=ae;function nt(A){let e=new oA(A),t=X(oA.prototype.request,e);return g.extend(t,oA.prototype,e,{allOwnKeys:!0}),g.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return nt(L(A,n))},t}var D=nt(v);D.Axios=oA;D.CanceledError=x;D.CancelToken=rt;D.isCancel=iA;D.VERSION=wA;D.toFormData=P;D.AxiosError=m;D.Cancel=D.CanceledError;D.all=function(e){return Promise.all(e)};D.spread=ne;D.isAxiosError=oe;D.mergeConfig=L;D.AxiosHeaders=U;D.formToJSON=A=>mA(g.isHTMLForm(A)?new FormData(A):A);D.getAdapter=hA.getAdapter;D.HttpStatusCode=it;D.default=D;var z=D;var{Axios:Ya,AxiosError:qa,CanceledError:Ka,isCancel:va,CancelToken:ja,VERSION:_a,all:za,Cancel:Va,isAxiosError:Za,spread:Xa,toFormData:$a,AxiosHeaders:As,HttpStatusCode:es,formToJSON:ts,getAdapter:rs,mergeConfig:is}=z;async function Kr(A,e){let t=A,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let n=await z.get(t,{responseType:"blob",params:e}),i=URL.createObjectURL(n.data);r=new Worker(i,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var aA=Kr;function ot(A){let e=JA(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[xA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function vr(A,e,t){let r;if(A!=null){let i=A;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):ot(A)}let n=await aA(e,t);return ot(n)}var at=vr;async function jr(A,e,t){let r="unknown";typeof A!="string"?r=A.href:A.startsWith("http")?r=A:r=typeof e<"u"?`${e}/${A}`:A,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let n=`${r}.wasm`,o=(await z.get(n,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:o})}var st=jr;var It=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Bt=typeof globalThis.SharedArrayBuffer=="function",gt=new TextEncoder,lt=new TextDecoder("utf-8");function _r(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),i=A.fs_stat(e).size,o=null;Bt?o=new SharedArrayBuffer(i):o=new ArrayBuffer(i);let I=new Uint8Array(o);return A.fs_read(r,I,0,i,0),A.fs_close(r),I}function ut(A,e,t){let r=null;Bt?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let n=new Uint8Array(r),i=new Uint8Array(A.HEAPU8.buffer,e,t);return n.set(i),n}function k(A,e,t,r){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function M(A,e,t){let r=JSON.stringify(e),n=A.lengthBytesUTF8(r)+1,i=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,n]);A.stringToUTF8(r,i,n)}function N(A,e,t,r){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),o=ut(A,n,i);return G(r,o.buffer)}function SA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.UTF8ToString(t);return JSON.parse(r)}function zr(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(B,s){switch(B.type){case E.TextStream:{let a=gt.encode(B.data.data),f=k(A,a,s,0),l={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,l,s);break}case E.JsonCompatible:{let a=gt.encode(JSON.stringify(B.data)),f=k(A,a,s,0),l={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,l,s);break}case E.BinaryStream:{let a=B.data.data,f=k(A,a,s,0),l={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,l,s);break}case E.TextFile:{A.fs_writeFile(B.data.path,B.data.data);break}case E.BinaryFile:{A.fs_writeFile(B.data.path,B.data.data);break}case E.Image:{let a=B.data,f=k(A,a.data,s,0),l=k(A,a.direction,s,1),C=typeof a.metadata?.entries<"u"?Array.from(a.metadata.entries()):[],u={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:`data:application/vnd.itk.address,0:${l}`,size:a.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:C};M(A,u,s);break}case E.Mesh:{let a=B.data,f=k(A,a.points,s,0),l=k(A,a.cells,s,1),C=k(A,a.pointData,s,2),u=k(A,a.cellData,s,3),p={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:a.numberOfCells,cells:`data:application/vnd.itk.address,0:${l}`,cellBufferSize:a.cellBufferSize,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${C}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${u}`};M(A,p,s);break}case E.PointSet:{let a=B.data,f=k(A,a.points,s,0),l=k(A,a.pointData,s,1),C={pointSetType:a.pointSetType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${l}`};M(A,C,s);break}case E.PolyData:{let a=B.data,f=k(A,a.points,s,0),l=k(A,a.vertices,s,1),C=k(A,a.lines,s,2),u=k(A,a.polygons,s,3),p=k(A,a.triangleStrips,s,4),Q=k(A,a.pointData,s,5),d=k(A,a.pointData,s,6),S={polyDataType:a.polyDataType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:a.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${l}`,linesBufferSize:a.linesBufferSize,lines:`data:application/vnd.itk.address,0:${C}`,polygonsBufferSize:a.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${u}`,triangleStripsBufferSize:a.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${p}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${Q}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${d}`};M(A,S,s);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(B){throw typeof B=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(B)):console.error("Build module in Debug mode for exception message information.")),B}finally{A.stackRestore(n)}let o=A.getModuleStdout(),I=A.getModuleStderr(),c=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(B,s){let a=null;switch(B.type){case E.TextStream:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),C=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,l,C);a={data:lt.decode(u)};break}case E.JsonCompatible:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),C=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,l,C);a=JSON.parse(lt.decode(u));break}case E.BinaryStream:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),C=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]);a={data:ut(A,l,C)};break}case E.TextFile:{a={path:B.data.path,data:A.fs_readFile(B.data.path,{encoding:"utf8"})};break}case E.BinaryFile:{a={path:B.data.path,data:_r(A,B.data.path)};break}case E.Image:{let l=SA(A,s);l.data=N(A,s,0,l.imageType.componentType),l.direction=N(A,s,1,W.Float64),l.metadata=new Map(l.metadata),a=l;break}case E.Mesh:{let l=SA(A,s);l.numberOfPoints>0?l.points=N(A,s,0,l.meshType.pointComponentType):l.points=G(l.meshType.pointComponentType,new ArrayBuffer(0)),l.numberOfCells>0?l.cells=N(A,s,1,l.meshType.cellComponentType):l.cells=G(l.meshType.cellComponentType,new ArrayBuffer(0)),l.numberOfPointPixels>0?l.pointData=N(A,s,2,l.meshType.pointPixelComponentType):l.pointData=G(l.meshType.pointPixelComponentType,new ArrayBuffer(0)),l.numberOfCellPixels>0?l.cellData=N(A,s,3,l.meshType.cellPixelComponentType):l.cellData=G(l.meshType.cellPixelComponentType,new ArrayBuffer(0)),a=l;break}case E.PointSet:{let l=SA(A,s);l.numberOfPoints>0?l.points=N(A,s,0,l.pointSetType.pointComponentType):l.points=G(l.pointSetType.pointComponentType,new ArrayBuffer(0)),l.numberOfPointPixels>0?l.pointData=N(A,s,1,l.pointSetType.pointPixelComponentType):l.pointData=G(l.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),a=l;break}case E.PolyData:{let l=SA(A,s);l.numberOfPoints>0?l.points=N(A,s,0,W.Float32):l.points=new Float32Array,l.verticesBufferSize>0?l.vertices=N(A,s,1,b.UInt32):l.vertices=new Uint32Array,l.linesBufferSize>0?l.lines=N(A,s,2,b.UInt32):l.lines=new Uint32Array,l.polygonsBufferSize>0?l.polygons=N(A,s,3,b.UInt32):l.polygons=new Uint32Array,l.triangleStripsBufferSize>0?l.triangleStrips=N(A,s,4,b.UInt32):l.triangleStrips=new Uint32Array,l.numberOfPointPixels>0?l.pointData=N(A,s,5,l.polyDataType.pointPixelComponentType):l.pointData=G(l.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),l.numberOfCellPixels>0?l.cellData=N(A,s,6,l.polyDataType.cellPixelComponentType):l.cellData=G(l.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),a=l;break}default:throw Error("Unsupported output InterfaceType")}let f={type:B.type,data:a};c.push(f)}),{returnValue:i,stdout:o,stderr:I,outputs:c}}var ct=zr;var Vr=typeof globalThis.SharedArrayBuffer<"u";function Zr(A,e){if(A==null)return[];let t=[];for(let r=0;r<A.length;r++){let n=Xr(A[r],e);n!==null&&t.push(n)}return t}function Xr(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),Vr&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var Ct=Zr;function $r(A){return[A.data,A.direction]}var ft=$r;function Ai(A){return[A.points,A.pointData,A.cells,A.cellData]}var Et=Ai;function ei(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var pt=ei;var ti;function kA(){return ti}var ri;function Qt(){return ri}var ii;function FA(){return ii}var se=new Map;function ni(){let A=FA();return typeof A>"u"&&(A=null),A}function mt(){let A=kA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function bA(){let A=Qt();return typeof A>"u"&&(A={}),A}async function oi(A,e,t){let r=A,n=A;if(typeof A!="string"&&(r=new URL(A.href),n=r.href),se.has(n))return se.get(n);{let i=await st(A,e?.toString()??mt(),t??bA());return se.set(n,i),i}}async function ai(A,e,t,r,n){if(!await It()){let p="WebAssembly SIMD support is required -- please update your browser.";throw alert(p),new Error(p)}let i=n?.webWorker??null;if(i===!1){let p=await oi(A.toString(),n?.pipelineBaseUrl,n?.pipelineQueryParams??bA());return ct(p,e,t,r)}let o=i,I=n?.pipelineWorkerUrl??ni(),c=typeof I!="string"&&typeof I?.href<"u"?I.href:I,{workerProxy:B,worker:s}=await at(o,c,n?.pipelineQueryParams??bA());o=s;let a=[];r!=null&&r.length>0&&r.forEach(function(p){if(p.type===E.BinaryStream){let Q=p.data.data;a.push(Q)}else if(p.type===E.BinaryFile){let Q=p.data.data;a.push(Q)}else if(p.type===E.Image){let Q=p.data;Q.data!==null&&a.push(...ft(Q))}else if(p.type===E.Mesh){let Q=p.data;a.push(...Et(Q))}else if(p.type===E.PolyData){let Q=p.data;a.push(...pt(Q))}});let f=n?.pipelineBaseUrl??mt(),l=typeof f!="string"&&typeof f?.href<"u"?f.href:f,C=r!=null?HA(r,Ct(a,n?.noCopy)):null,u=await B.runPipeline(A.toString(),l,e,t,C,n?.pipelineQueryParams??bA());return{returnValue:u.returnValue,stdout:u.stdout,stderr:u.stderr,outputs:u.outputs,webWorker:o}}var y=ai;var si=null;function dt(){return si}var Ie,Ii=`https://cdn.jsdelivr.net/npm/@itk-wasm/dicom@${RA}/dist/pipelines`;function _s(A){Ie=A}function w(){if(typeof Ie<"u")return Ie;let A=kA();return typeof A<"u"?A:Ii}var ge,gi=null;function ht(A){ge=A}function h(){if(typeof ge<"u")return ge;let A=FA();return typeof A<"u"?A:gi}var V=null;async function yt(){let A=h(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;V=await aA(e)}function eI(A){V=A}async function F(){if(V!==null)return V.terminated&&await yt(),V;let A=dt();return A!==null?A:(await yt(),V)}async function li(A,e,t={}){let r=[{type:E.JsonCompatible},{type:E.Image}],n=A;if(A instanceof File){let S=await A.arrayBuffer();n={path:A.name,data:new Uint8Array(S)}}let i=e;if(e instanceof File){let S=await e.arrayBuffer();i={path:e.name,data:new Uint8Array(S)}}let o=[{type:E.BinaryFile,data:n},{type:E.BinaryFile,data:i}],I=[],c=n.path;I.push(c);let B=i.path;I.push(B),I.push("0"),I.push("1"),I.push("--memory-io"),t.colorOutput&&t.colorOutput&&I.push("--color-output"),t.configFile&&I.push("--config-file",t.configFile.toString()),t.frame&&I.push("--frame",t.frame.toString()),t.noPresentationStateOutput&&t.noPresentationStateOutput&&I.push("--no-presentation-state-output"),t.noBitmapOutput&&t.noBitmapOutput&&I.push("--no-bitmap-output");let f="apply-presentation-state-to-image",l=t?.webWorker;l===void 0&&(l=await F());let{webWorker:C,returnValue:u,stderr:p,outputs:Q}=await y(f,I,r,o,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:l,noCopy:t?.noCopy});if(u!==0&&p!=="")throw new Error(p);return{webWorker:C,presentationStateOutStream:Q[0]?.data,outputImage:Q[1]?.data}}var Bi=li;async function ui(A,e={}){let t=[{type:E.BinaryStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;i.push(o),i.push("0"),i.push("--memory-io"),e.readFileOnly&&e.readFileOnly&&i.push("--read-file-only"),e.readDataset&&e.readDataset&&i.push("--read-dataset"),e.readXferAuto&&e.readXferAuto&&i.push("--read-xfer-auto"),e.readXferDetect&&e.readXferDetect&&i.push("--read-xfer-detect"),e.readXferLittle&&e.readXferLittle&&i.push("--read-xfer-little"),e.readXferBig&&e.readXferBig&&i.push("--read-xfer-big"),e.readXferImplicit&&e.readXferImplicit&&i.push("--read-xfer-implicit"),e.acceptOddLength&&e.acceptOddLength&&i.push("--accept-odd-length"),e.assumeEvenLength&&e.assumeEvenLength&&i.push("--assume-even-length"),e.enableCp246&&e.enableCp246&&i.push("--enable-cp246"),e.disableCp246&&e.disableCp246&&i.push("--disable-cp246"),e.retainUn&&e.retainUn&&i.push("--retain-un"),e.convertUn&&e.convertUn&&i.push("--convert-un"),e.enableCorrection&&e.enableCorrection&&i.push("--enable-correction"),e.disableCorrection&&e.disableCorrection&&i.push("--disable-correction");let c="read-dicom-encapsulated-pdf",B=e?.webWorker;B===void 0&&(B=await F());let{webWorker:s,returnValue:a,stderr:f,outputs:l}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&f!=="")throw new Error(f);return{webWorker:s,pdfBinaryOutput:(l[0]?.data).data}}var ci=ui;async function Ci(A,e={}){let t=[{type:E.TextStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;if(i.push(o),i.push("0"),i.push("--memory-io"),e.readFileOnly&&e.readFileOnly&&i.push("--read-file-only"),e.readDataset&&e.readDataset&&i.push("--read-dataset"),e.readXferAuto&&e.readXferAuto&&i.push("--read-xfer-auto"),e.readXferDetect&&e.readXferDetect&&i.push("--read-xfer-detect"),e.readXferLittle&&e.readXferLittle&&i.push("--read-xfer-little"),e.readXferBig&&e.readXferBig&&i.push("--read-xfer-big"),e.readXferImplicit&&e.readXferImplicit&&i.push("--read-xfer-implicit"),e.processingDetails&&e.processingDetails&&i.push("--processing-details"),e.unknownRelationship&&e.unknownRelationship&&i.push("--unknown-relationship"),e.invalidItemValue&&e.invalidItemValue&&i.push("--invalid-item-value"),e.ignoreConstraints&&e.ignoreConstraints&&i.push("--ignore-constraints"),e.ignoreItemErrors&&e.ignoreItemErrors&&i.push("--ignore-item-errors"),e.skipInvalidItems&&e.skipInvalidItems&&i.push("--skip-invalid-items"),e.disableVrChecker&&e.disableVrChecker&&i.push("--disable-vr-checker"),e.charsetRequire&&e.charsetRequire&&i.push("--charset-require"),e.charsetAssume&&i.push("--charset-assume",e.charsetAssume.toString()),e.charsetCheckAll&&e.charsetCheckAll&&i.push("--charset-check-all"),e.convertToUtf8&&e.convertToUtf8&&i.push("--convert-to-utf8"),e.urlPrefix&&i.push("--url-prefix",e.urlPrefix.toString()),e.html32&&e.html32&&i.push("--html-32"),e.html40&&e.html40&&i.push("--html-40"),e.xhtml11&&e.xhtml11&&i.push("--xhtml-11"),e.addDocumentType&&e.addDocumentType&&i.push("--add-document-type"),e.cssReference){let u=n.length.toString();n.push({type:E.TextStream,data:{data:e.cssReference}}),i.push("--css-reference",u)}if(e.cssFile){let u=e.cssFile,p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new TextDecoder().decode(d)}}i.push("--css-file"),n.push({type:E.TextFile,data:p});let Q=u instanceof File?u.name:u.path;i.push(Q)}e.expandInline&&e.expandInline&&i.push("--expand-inline"),e.neverExpandInline&&e.neverExpandInline&&i.push("--never-expand-inline"),e.alwaysExpandInline&&e.alwaysExpandInline&&i.push("--always-expand-inline"),e.renderFullData&&e.renderFullData&&i.push("--render-full-data"),e.sectionTitleInline&&e.sectionTitleInline&&i.push("--section-title-inline"),e.documentTypeTitle&&e.documentTypeTitle&&i.push("--document-type-title"),e.patientInfoTitle&&e.patientInfoTitle&&i.push("--patient-info-title"),e.noDocumentHeader&&e.noDocumentHeader&&i.push("--no-document-header"),e.renderInlineCodes&&e.renderInlineCodes&&i.push("--render-inline-codes"),e.conceptNameCodes&&e.conceptNameCodes&&i.push("--concept-name-codes"),e.numericUnitCodes&&e.numericUnitCodes&&i.push("--numeric-unit-codes"),e.codeValueUnit&&e.codeValueUnit&&i.push("--code-value-unit"),e.codeMeaningUnit&&e.codeMeaningUnit&&i.push("--code-meaning-unit"),e.renderAllCodes&&e.renderAllCodes&&i.push("--render-all-codes"),e.codeDetailsTooltip&&e.codeDetailsTooltip&&i.push("--code-details-tooltip");let c="structured-report-to-html",B=e?.webWorker;B===void 0&&(B=await F());let{webWorker:s,returnValue:a,stderr:f,outputs:l}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&f!=="")throw new Error(f);return{webWorker:s,outputText:(l[0]?.data).data}}var fi=Ci;async function Ei(A,e={}){let t=[{type:E.TextStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;i.push(o),i.push("0"),i.push("--memory-io"),e.unknownRelationship&&e.unknownRelationship&&i.push("--unknown-relationship"),e.invalidItemValue&&e.invalidItemValue&&i.push("--invalid-item-value"),e.ignoreConstraints&&e.ignoreConstraints&&i.push("--ignore-constraints"),e.ignoreItemErrors&&e.ignoreItemErrors&&i.push("--ignore-item-errors"),e.skipInvalidItems&&e.skipInvalidItems&&i.push("--skip-invalid-items"),e.noDocumentHeader&&e.noDocumentHeader&&i.push("--no-document-header"),e.numberNestedItems&&e.numberNestedItems&&i.push("--number-nested-items"),e.shortenLongValues&&e.shortenLongValues&&i.push("--shorten-long-values"),e.printInstanceUid&&e.printInstanceUid&&i.push("--print-instance-uid"),e.printSopclassShort&&e.printSopclassShort&&i.push("--print-sopclass-short"),e.printSopclassLong&&e.printSopclassLong&&i.push("--print-sopclass-long"),e.printSopclassUid&&e.printSopclassUid&&i.push("--print-sopclass-uid"),e.printAllCodes&&e.printAllCodes&&i.push("--print-all-codes"),e.printInvalidCodes&&e.printInvalidCodes&&i.push("--print-invalid-codes"),e.printTemplateId&&e.printTemplateId&&i.push("--print-template-id"),e.indicateEnhanced&&e.indicateEnhanced&&i.push("--indicate-enhanced"),e.printColor&&e.printColor&&i.push("--print-color");let c="structured-report-to-text",B=e?.webWorker;B===void 0&&(B=await F());let{webWorker:s,returnValue:a,stderr:f,outputs:l}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&f!=="")throw new Error(f);return{webWorker:s,outputText:(l[0]?.data).data}}var pi=Ei;async function Qi(A,e={}){let t=[{type:E.JsonCompatible}],r=A;if(A instanceof File){let C=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(C)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;if(i.push(o),i.push("0"),i.push("--memory-io"),typeof e.tagsToRead<"u"){let C=n.length.toString();n.push({type:E.JsonCompatible,data:e.tagsToRead}),i.push("--tags-to-read",C)}let c="read-dicom-tags",{webWorker:B,returnValue:s,stderr:a,outputs:f}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:e?.webWorker??null});if(s!==0)throw new Error(a);return{webWorker:B,tags:f[0].data}}var mi=Qi;async function di(A,e=!1,t={}){let r=[{type:E.Image},{type:E.JsonCompatible}],n=[],i=[];i.push("0"),i.push("1"),i.push("--memory-io"),i.push("--input-images"),A.forEach(C=>{n.push({type:E.BinaryFile,data:C}),i.push(C.path)}),typeof e<"u"&&e&&i.push("--single-sorted-series");let c="read-image-dicom-file-series",{webWorker:B,returnValue:s,stderr:a,outputs:f}=await y(c,i,r,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:t?.webWorker??null});if(s!==0)throw new Error(a);return{webWorker:B,outputImage:f[0].data,sortedFilenames:f[1].data}}var le=di;var hi=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:4,wt=8;async function yi(A={inputImages:[]}){let e=A.webWorkerPool??null;e===null&&(e=new OA(hi,le));let t=[];if(A.inputImages.length<1)throw new Error('"input-images" option must have a length > 1');if(await Promise.all(A.inputImages.map(async r=>{let n=r;if(r instanceof File){let i=await r.arrayBuffer();n={path:r.name,data:new Uint8Array(i)}}t.push(n)})),A.singleSortedSeries){let r=[];for(let c=0;c<t.length;c+=wt){let B=t.slice(c,c+wt);r.push([B,A.singleSortedSeries,{}])}let n=await e.runTasks(r).promise,i=n.map(c=>c.outputImage),o=n.reduce((c,B)=>c.concat(B.sortedFilenames),[]);return{outputImage:TA(i),webWorkerPool:e,sortedFilenames:o}}else{let r=[[t,A.singleSortedSeries,{}]],n=await e.runTasks(r).promise;return{outputImage:n[0].outputImage,webWorkerPool:e,sortedFilenames:n[0].sortedFilenames}}}var wi=yi;async function Di(A,e={}){let t=[{type:E.Image},{type:E.JsonCompatible}],r=A;if(A instanceof File){let p=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(p)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;i.push(o),i.push("0"),i.push("1"),i.push("--memory-io");let B="read-segmentation",s=e?.webWorker;s===void 0&&(s=await F());let{webWorker:a,returnValue:f,stderr:l,outputs:C}=await y(B,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:s,noCopy:e?.noCopy});if(f!==0&&l!=="")throw new Error(l);return{webWorker:a,segImage:C[0]?.data,metaInfo:C[1]?.data}}var Si=Di;async function ki(A,e={}){let t=[{type:E.Image},{type:E.JsonCompatible}],r=A;if(A instanceof File){let p=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(p)}}let n=[{type:E.BinaryFile,data:r}],i=[],o=r.path;i.push(o),i.push("0"),i.push("1"),i.push("--memory-io"),e.mergeSegments&&e.mergeSegments&&i.push("--merge-segments");let B="read-overlapping-segmentation",s=e?.webWorker;s===void 0&&(s=await F());let{webWorker:a,returnValue:f,stderr:l,outputs:C}=await y(B,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:s,noCopy:e?.noCopy});if(f!==0&&l!=="")throw new Error(l);return{webWorker:a,segImage:C[0]?.data,metaInfo:C[1]?.data}}var Fi=ki;async function bi(A,e,t,r={refDicomSeries:[]}){let n=[{type:E.BinaryFile,data:{path:t,data:new Uint8Array}}],i=[{type:E.Image,data:A},{type:E.JsonCompatible,data:e}],o=[];o.push("0"),o.push("1");let B=t;if(o.push(B),o.push("--memory-io"),r.refDicomSeries){if(r.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');o.push("--ref-dicom-series"),await Promise.all(r.refDicomSeries.map(async Q=>{let d=Q;if(Q instanceof File){let Z=await Q.arrayBuffer();d={path:Q.name,data:new Uint8Array(Z)}}i.push({type:E.BinaryFile,data:d});let S=Q instanceof File?Q.name:d.path;o.push(S)}))}r.skipEmptySlices&&r.skipEmptySlices&&o.push("--skip-empty-slices"),r.useLabelidAsSegmentnumber&&r.useLabelidAsSegmentnumber&&o.push("--use-labelid-as-segmentnumber");let s="write-segmentation",a=r?.webWorker;a===void 0&&(a=await F());let{webWorker:f,returnValue:l,stderr:C,outputs:u}=await y(s,o,n,i,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:a,noCopy:r?.noCopy});if(l!==0&&C!=="")throw new Error(C);return{webWorker:f,outputDicomFile:u[0]?.data}}var Ri=bi;async function Ui(A,e,t,r={refDicomSeries:[]}){let n=[{type:E.BinaryFile,data:{path:t,data:new Uint8Array}}],i=[{type:E.Image,data:A},{type:E.JsonCompatible,data:e}],o=[];o.push("0"),o.push("1");let B=t;if(o.push(B),o.push("--memory-io"),r.refDicomSeries){if(r.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');o.push("--ref-dicom-series"),await Promise.all(r.refDicomSeries.map(async Q=>{let d=Q;if(Q instanceof File){let Z=await Q.arrayBuffer();d={path:Q.name,data:new Uint8Array(Z)}}i.push({type:E.BinaryFile,data:d});let S=Q instanceof File?Q.name:d.path;o.push(S)}))}r.skipEmptySlices&&r.skipEmptySlices&&o.push("--skip-empty-slices"),r.useLabelidAsSegmentnumber&&r.useLabelidAsSegmentnumber&&o.push("--use-labelid-as-segmentnumber");let s="write-overlapping-segmentation",a=r?.webWorker;a===void 0&&(a=await F());let{webWorker:f,returnValue:l,stderr:C,outputs:u}=await y(s,o,n,i,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:a,noCopy:r?.noCopy});if(l!==0&&C!=="")throw new Error(C);return{webWorker:f,outputDicomFile:u[0]?.data}}var Ni=Ui;async function Ti(A,e,t={refDicomSeries:[],segImages:[]}){let r=[{type:E.BinaryFile,data:{path:e,data:new Uint8Array}}],n=[{type:E.JsonCompatible,data:A}],i=[];i.push("0");let I=e;if(i.push(I),i.push("--memory-io"),t.refDicomSeries){if(t.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');i.push("--ref-dicom-series"),await Promise.all(t.refDicomSeries.map(async u=>{let p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new Uint8Array(d)}}n.push({type:E.BinaryFile,data:p});let Q=u instanceof File?u.name:p.path;i.push(Q)}))}if(t.segImages){if(t.segImages.length<1)throw new Error('"seg-images" option must have a length > 1');i.push("--seg-images"),await Promise.all(t.segImages.map(async u=>{let p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new Uint8Array(d)}}n.push({type:E.BinaryFile,data:p});let Q=u instanceof File?u.name:p.path;i.push(Q)}))}t.skipEmptySlices&&t.skipEmptySlices&&i.push("--skip-empty-slices"),t.useLabelidAsSegmentnumber&&t.useLabelidAsSegmentnumber&&i.push("--use-labelid-as-segmentnumber");let c="write-multi-segmentation",B=t?.webWorker;B===void 0&&(B=await F());let{webWorker:s,returnValue:a,stderr:f,outputs:l}=await y(c,i,r,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:B,noCopy:t?.noCopy});if(a!==0&&f!=="")throw new Error(f);return{webWorker:s,outputDicomFile:l[0]?.data}}var Gi=Ti;var Dt='data:text/javascript;charset=utf-8,var II=Object.defineProperty;var eI=(A,t)=>{for(var I in t)II(A,I,{get:t[I],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gI=Symbol("Comlink.endpoint"),rI=Symbol("Comlink.releaseProxy"),pA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:t,port2:I}=new MessageChannel;return iA(A,t),[I,[I]]},deserialize(A){return A.start(),nI(A)}},iI={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},At=new Map([["proxy",oI],["throw",iI]]);function CI(A,t){for(let I of A)if(t===I||I==="*"||I instanceof RegExp&&I.test(t))return!0;return!1}function iA(A,t=globalThis,I=["*"]){t.addEventListener("message",function e(g){if(!g||!g.data)return;if(!CI(I,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:o,path:n}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),Q;try{let B=n.slice(0,-1).reduce((f,s)=>f[s],A),i=n.reduce((f,s)=>f[s],A);switch(o){case"GET":Q=i;break;case"SET":B[n.slice(-1)[0]]=b(g.data.value),Q=!0;break;case"APPLY":Q=i.apply(B,a);break;case"CONSTRUCT":{let f=new i(...a);Q=aI(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;iA(A,s),Q=FA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(B){Q={value:B,[eA]:0}}Promise.resolve(Q).catch(B=>({value:B,[eA]:0})).then(B=>{let[i,f]=oA(B);t.postMessage(Object.assign(Object.assign({},i),{id:r}),f),o==="RELEASE"&&(t.removeEventListener("message",e),tt(t),pA in A&&typeof A[pA]=="function"&&A[pA]())}).catch(B=>{let[i,f]=oA({value:new TypeError("Unserializable return value"),[eA]:0});t.postMessage(Object.assign(Object.assign({},i),{id:r}),f)})}),t.start&&t.start()}function BI(A){return A.constructor.name==="MessagePort"}function tt(A){BI(A)&&A.close()}function nI(A,t){return SA(A,[],t)}function IA(A){if(A)throw new Error("Proxy has been released and is not useable")}function It(A){return q(A,{type:"RELEASE"}).then(()=>{tt(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(gA.get(A)||0)-1;gA.set(A,t),t===0&&It(A)});function sI(A,t){let I=(gA.get(t)||0)+1;gA.set(t,I),rA&&rA.register(A,t,A)}function QI(A){rA&&rA.unregister(A)}function SA(A,t=[],I=function(){}){let e=!1,g=new Proxy(I,{get(r,o){if(IA(e),o===rI)return()=>{QI(g),It(A),e=!0};if(o==="then"){if(t.length===0)return{then:()=>g};let n=q(A,{type:"GET",path:t.map(a=>a.toString())}).then(b);return n.then.bind(n)}return SA(A,[...t,o])},set(r,o,n){IA(e);let[a,Q]=oA(n);return q(A,{type:"SET",path:[...t,o].map(B=>B.toString()),value:a},Q).then(b)},apply(r,o,n){IA(e);let a=t[t.length-1];if(a===gI)return q(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return SA(A,t.slice(0,-1));let[Q,B]=_A(n);return q(A,{type:"APPLY",path:t.map(i=>i.toString()),argumentList:Q},B).then(b)},construct(r,o){IA(e);let[n,a]=_A(o);return q(A,{type:"CONSTRUCT",path:t.map(Q=>Q.toString()),argumentList:n},a).then(b)}});return sI(g,A),g}function EI(A){return Array.prototype.concat.apply([],A)}function _A(A){let t=A.map(oA);return[t.map(I=>I[0]),EI(t.map(I=>I[1]))]}var et=new WeakMap;function FA(A,t){return et.set(A,t),A}function aI(A){return Object.assign(A,{[vA]:!0})}function oA(A){for(let[t,I]of At)if(I.canHandle(A)){let[e,g]=I.serialize(A);return[{type:"HANDLER",name:t,value:e},g]}return[{type:"RAW",value:A},et.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return At.get(A.name).deserialize(A.value);case"RAW":return A.value}}function q(A,t,I){return new Promise(e=>{let g=cI();A.addEventListener("message",function r(o){!o.data||!o.data.id||o.data.id!==g||(A.removeEventListener("message",r),e(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},t),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,t){return function(){return A.apply(t,arguments)}}var{toString:fI}=Object.prototype,{getPrototypeOf:UA}=Object,BA=(A=>t=>{let I=fI.call(t);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),t=>BA(t)===A),nA=A=>t=>typeof t===A,{isArray:K}=Array,Z=nA("undefined");function lI(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var it=U("ArrayBuffer");function DI(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&it(A.buffer),t}var uI=nA("string"),F=nA("function"),Ct=nA("number"),sA=A=>A!==null&&typeof A=="object",hI=A=>A===!0||A===!1,CA=A=>{if(BA(A)!=="object")return!1;let t=UA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dI=U("Date"),yI=U("File"),wI=U("Blob"),mI=U("FileList"),pI=A=>sA(A)&&F(A.pipe),SI=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((t=BA(A))==="formdata"||t==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},FI=U("URLSearchParams"),RI=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,t,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),K(A))for(e=0,g=A.length;e<g;e++)t.call(null,A[e],e,A);else{let r=I?Object.getOwnPropertyNames(A):Object.keys(A),o=r.length,n;for(e=0;e<o;e++)n=r[e],t.call(null,A[n],n,A)}}function Bt(A,t){t=t.toLowerCase();let I=Object.keys(A),e=I.length,g;for(;e-- >0;)if(g=I[e],t===g.toLowerCase())return g;return null}var nt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,st=A=>!Z(A)&&A!==nt;function NA(){let{caseless:A}=st(this)&&this||{},t={},I=(e,g)=>{let r=A&&Bt(t,g)||g;CA(t[r])&&CA(e)?t[r]=NA(t[r],e):CA(e)?t[r]=NA({},e):K(e)?t[r]=e.slice():t[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],I);return t}var NI=(A,t,I,{allOwnKeys:e}={})=>(V(t,(g,r)=>{I&&F(g)?A[r]=W(g,I):A[r]=g},{allOwnKeys:e}),A),UI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),GI=(A,t,I,e)=>{A.prototype=Object.create(t.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),I&&Object.assign(A.prototype,I)},kI=(A,t,I,e)=>{let g,r,o,n={};if(t=t||{},A==null)return t;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)o=g[r],(!e||e(o,A,t))&&!n[o]&&(t[o]=A[o],n[o]=!0);A=I!==!1&&UA(A)}while(A&&(!I||I(A,t))&&A!==Object.prototype);return t},LI=(A,t,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=t.length;let e=A.indexOf(t,I);return e!==-1&&e===I},JI=A=>{if(!A)return null;if(K(A))return A;let t=A.length;if(!Ct(t))return null;let I=new Array(t);for(;t-- >0;)I[t]=A[t];return I},HI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&UA(Uint8Array)),YI=(A,t)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;t.call(A,r[0],r[1])}},bI=(A,t)=>{let I,e=[];for(;(I=A.exec(t))!==null;)e.push(I);return e},MI=U("HTMLFormElement"),qI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(I,e,g){return e.toUpperCase()+g}),rt=(({hasOwnProperty:A})=>(t,I)=>A.call(t,I))(Object.prototype),KI=U("RegExp"),Qt=(A,t)=>{let I=Object.getOwnPropertyDescriptors(A),e={};V(I,(g,r)=>{let o;(o=t(g,r,A))!==!1&&(e[r]=o||g)}),Object.defineProperties(A,e)},OI=A=>{Qt(A,(t,I)=>{if(F(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let e=A[I];if(F(e)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+I+"\'")})}})},TI=(A,t)=>{let I={},e=g=>{g.forEach(r=>{I[r]=!0})};return K(A)?e(A):e(String(A).split(t)),I},PI=()=>{},xI=(A,t)=>(A=+A,Number.isFinite(A)?A:t),RA="abcdefghijklmnopqrstuvwxyz",ot="0123456789",Et={DIGIT:ot,ALPHA:RA,ALPHA_DIGIT:RA+RA.toUpperCase()+ot},jI=(A=16,t=Et.ALPHA_DIGIT)=>{let I="",{length:e}=t;for(;A--;)I+=t[Math.random()*e|0];return I};function WI(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var ZI=A=>{let t=new Array(10),I=(e,g)=>{if(sA(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[g]=e;let r=K(e)?[]:{};return V(e,(o,n)=>{let a=I(o,g+1);!Z(a)&&(r[n]=a)}),t[g]=void 0,r}}return e};return I(A,0)},VI=U("AsyncFunction"),XI=A=>A&&(sA(A)||F(A))&&F(A.then)&&F(A.catch),C={isArray:K,isArrayBuffer:it,isBuffer:lI,isFormData:SI,isArrayBufferView:DI,isString:uI,isNumber:Ct,isBoolean:hI,isObject:sA,isPlainObject:CA,isUndefined:Z,isDate:dI,isFile:yI,isBlob:wI,isRegExp:KI,isFunction:F,isStream:pI,isURLSearchParams:FI,isTypedArray:HI,isFileList:mI,forEach:V,merge:NA,extend:NI,trim:RI,stripBOM:UI,inherits:GI,toFlatObject:kI,kindOf:BA,kindOfTest:U,endsWith:LI,toArray:JI,forEachEntry:YI,matchAll:bI,isHTMLForm:MI,hasOwnProperty:rt,hasOwnProp:rt,reduceDescriptors:Qt,freezeMethods:OI,toObjectSet:TI,toCamelCase:qI,noop:PI,toFiniteNumber:xI,findKey:Bt,global:nt,isContextDefined:st,ALPHABET:Et,generateString:jI,isSpecCompliantForm:WI,toJSONObject:ZI,isAsyncFn:VI,isThenable:XI};function O(A,t,I,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),I&&(this.config=I),e&&(this.request=e),g&&(this.response=g)}C.inherits(O,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var at=O.prototype,ct={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ct[A]={value:A}});Object.defineProperties(O,ct);Object.defineProperty(at,"isAxiosError",{value:!0});O.from=(A,t,I,e,g,r)=>{let o=Object.create(at);return C.toFlatObject(A,o,function(a){return a!==Error.prototype},n=>n!=="isAxiosError"),O.call(o,A.message,t,I,e,g),o.cause=A,o.name=A.name,r&&Object.assign(o,r),o};var l=O;var QA=null;function GA(A){return C.isPlainObject(A)||C.isArray(A)}function lt(A){return C.endsWith(A,"[]")?A.slice(0,-2):A}function ft(A,t,I){return A?A.concat(t).map(function(g,r){return g=lt(g),!I&&r?"["+g+"]":g}).join(I?".":""):t}function zI(A){return C.isArray(A)&&!A.some(GA)}var _I=C.toFlatObject(C,{},null,function(t){return/^is[A-Z]/.test(t)});function vI(A,t,I){if(!C.isObject(A))throw new TypeError("target must be an object");t=t||new(QA||FormData),I=C.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!C.isUndefined(u[c])});let e=I.metaTokens,g=I.visitor||B,r=I.dots,o=I.indexes,a=(I.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(t);if(!C.isFunction(g))throw new TypeError("visitor must be a function");function Q(E){if(E===null)return"";if(C.isDate(E))return E.toISOString();if(!a&&C.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(E)||C.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function B(E,c,u){let y=E;if(E&&!u&&typeof E=="object"){if(C.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(C.isArray(E)&&zI(E)||(C.isFileList(E)||C.endsWith(c,"[]"))&&(y=C.toArray(E)))return c=lt(c),y.forEach(function(N,tI){!(C.isUndefined(N)||N===null)&&t.append(o===!0?ft([c],tI,r):o===null?c:c+"[]",Q(N))}),!1}return GA(E)?!0:(t.append(ft(u,c,r),Q(E)),!1)}let i=[],f=Object.assign(_I,{defaultVisitor:B,convertValue:Q,isVisitable:GA});function s(E,c){if(!C.isUndefined(E)){if(i.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));i.push(E),C.forEach(E,function(y,R){(!(C.isUndefined(y)||y===null)&&g.call(t,y,C.isString(R)?R.trim():R,c,f))===!0&&s(y,c?c.concat(R):[R])}),i.pop()}}if(!C.isObject(A))throw new TypeError("data must be an object");return s(A),t}var J=vI;function Dt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return t[e]})}function ut(A,t){this._pairs=[],A&&J(A,this,t)}var ht=ut.prototype;ht.append=function(t,I){this._pairs.push([t,I])};ht.toString=function(t){let I=t?function(e){return t.call(this,e,Dt)}:Dt;return this._pairs.map(function(g){return I(g[0])+"="+I(g[1])},"").join("&")};var EA=ut;function $I(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,t,I){if(!t)return A;let e=I&&I.encode||$I,g=I&&I.serialize,r;if(g?r=g(t,I):r=C.isURLSearchParams(t)?t.toString():new EA(t,I).toString(e),r){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var kA=class{constructor(){this.handlers=[]}use(t,I,e){return this.handlers.push({fulfilled:t,rejected:I,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){C.forEach(this.handlers,function(e){e!==null&&t(e)})}},LA=kA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dt=typeof URLSearchParams<"u"?URLSearchParams:EA;var yt=typeof FormData<"u"?FormData:null;var wt=typeof Blob<"u"?Blob:null;var mt={isBrowser:!0,classes:{URLSearchParams:dt,FormData:yt,Blob:wt},protocols:["http","https","file","blob","url","data"]};var JA={};eI(JA,{hasBrowserEnv:()=>pt,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>te});var pt=typeof window<"u"&&typeof document<"u",Ae=(A=>pt&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),te=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...JA,...mt};function HA(A,t){return J(A,new w.classes.URLSearchParams,Object.assign({visitor:function(I,e,g,r){return w.isNode&&C.isBuffer(I)?(this.append(e,I.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Ie(A){return C.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ee(A){let t={},I=Object.keys(A),e,g=I.length,r;for(e=0;e<g;e++)r=I[e],t[r]=A[r];return t}function ge(A){function t(I,e,g,r){let o=I[r++];if(o==="__proto__")return!0;let n=Number.isFinite(+o),a=r>=I.length;return o=!o&&C.isArray(g)?g.length:o,a?(C.hasOwnProp(g,o)?g[o]=[g[o],e]:g[o]=e,!n):((!g[o]||!C.isObject(g[o]))&&(g[o]=[]),t(I,e,g[o],r)&&C.isArray(g[o])&&(g[o]=ee(g[o])),!n)}if(C.isFormData(A)&&C.isFunction(A.entries)){let I={};return C.forEachEntry(A,(e,g)=>{t(Ie(e),g,I,0)}),I}return null}var cA=ge;function re(A,t,I){if(C.isString(A))try{return(t||JSON.parse)(A),C.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(I||JSON.stringify)(A)}var YA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(t,I){let e=I.getContentType()||"",g=e.indexOf("application/json")>-1,r=C.isObject(t);if(r&&C.isHTMLForm(t)&&(t=new FormData(t)),C.isFormData(t))return g?JSON.stringify(cA(t)):t;if(C.isArrayBuffer(t)||C.isBuffer(t)||C.isStream(t)||C.isFile(t)||C.isBlob(t))return t;if(C.isArrayBufferView(t))return t.buffer;if(C.isURLSearchParams(t))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return HA(t,this.formSerializer).toString();if((n=C.isFileList(t))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return J(n?{"files[]":t}:t,a&&new a,this.formSerializer)}}return r||g?(I.setContentType("application/json",!1),re(t)):t}],transformResponse:[function(t){let I=this.transitional||YA.transitional,e=I&&I.forcedJSONParsing,g=this.responseType==="json";if(t&&C.isString(t)&&(e&&!this.responseType||g)){let o=!(I&&I.silentJSONParsing)&&g;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],A=>{YA.headers[A]={}});var T=YA;var oe=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),St=A=>{let t={},I,e,g;return A&&A.split(`%0A`).forEach(function(o){g=o.indexOf(":"),I=o.substring(0,g).trim().toLowerCase(),e=o.substring(g+1).trim(),!(!I||t[I]&&oe[I])&&(I==="set-cookie"?t[I]?t[I].push(e):t[I]=[e]:t[I]=t[I]?t[I]+", "+e:e)}),t};var Ft=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:C.isArray(A)?A.map(fA):String(A)}function ie(A){let t=Object.create(null),I=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=I.exec(A);)t[e[1]]=e[2];return t}var Ce=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function bA(A,t,I,e,g){if(C.isFunction(e))return e.call(this,t,I);if(g&&(t=I),!!C.isString(t)){if(C.isString(e))return t.indexOf(e)!==-1;if(C.isRegExp(e))return e.test(t)}}function Be(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,I,e)=>I.toUpperCase()+e)}function ne(A,t){let I=C.toCamelCase(" "+t);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+I,{value:function(g,r,o){return this[e].call(this,t,g,r,o)},configurable:!0})})}var P=class{constructor(t){t&&this.set(t)}set(t,I,e){let g=this;function r(n,a,Q){let B=z(a);if(!B)throw new Error("header name must be a non-empty string");let i=C.findKey(g,B);(!i||g[i]===void 0||Q===!0||Q===void 0&&g[i]!==!1)&&(g[i||a]=fA(n))}let o=(n,a)=>C.forEach(n,(Q,B)=>r(Q,B,a));return C.isPlainObject(t)||t instanceof this.constructor?o(t,I):C.isString(t)&&(t=t.trim())&&!Ce(t)?o(St(t),I):t!=null&&r(I,t,e),this}get(t,I){if(t=z(t),t){let e=C.findKey(this,t);if(e){let g=this[e];if(!I)return g;if(I===!0)return ie(g);if(C.isFunction(I))return I.call(this,g,e);if(C.isRegExp(I))return I.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,I){if(t=z(t),t){let e=C.findKey(this,t);return!!(e&&this[e]!==void 0&&(!I||bA(this,this[e],e,I)))}return!1}delete(t,I){let e=this,g=!1;function r(o){if(o=z(o),o){let n=C.findKey(e,o);n&&(!I||bA(e,e[n],n,I))&&(delete e[n],g=!0)}}return C.isArray(t)?t.forEach(r):r(t),g}clear(t){let I=Object.keys(this),e=I.length,g=!1;for(;e--;){let r=I[e];(!t||bA(this,this[r],r,t,!0))&&(delete this[r],g=!0)}return g}normalize(t){let I=this,e={};return C.forEach(this,(g,r)=>{let o=C.findKey(e,r);if(o){I[o]=fA(g),delete I[r];return}let n=t?Be(r):String(r).trim();n!==r&&delete I[r],I[n]=fA(g),e[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let I=Object.create(null);return C.forEach(this,(e,g)=>{e!=null&&e!==!1&&(I[g]=t&&C.isArray(e)?e.join(", "):e)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,I])=>t+": "+I).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...I){let e=new this(t);return I.forEach(g=>e.set(g)),e}static accessor(t){let e=(this[Ft]=this[Ft]={accessors:{}}).accessors,g=this.prototype;function r(o){let n=z(o);e[n]||(ne(g,o),e[n]=!0)}return C.isArray(t)?t.forEach(r):r(t),this}};P.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(P.prototype,({value:A},t)=>{let I=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(e){this[I]=e}}});C.freezeMethods(P);var m=P;function _(A,t){let I=this||T,e=t||I,g=m.from(e.headers),r=e.data;return C.forEach(A,function(n){r=n.call(I,r,g.normalize(),t?t.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function Rt(A,t,I){l.call(this,A??"canceled",l.ERR_CANCELED,t,I),this.name="CanceledError"}C.inherits(Rt,l,{__CANCEL__:!0});var H=Rt;function MA(A,t,I){let e=I.config.validateStatus;!I.status||!e||e(I.status)?A(I):t(new l("Request failed with status code "+I.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}var Nt=w.hasStandardBrowserEnv?{write(A,t,I,e,g,r){let o=[A+"="+encodeURIComponent(t)];C.isNumber(I)&&o.push("expires="+new Date(I).toGMTString()),C.isString(e)&&o.push("path="+e),C.isString(g)&&o.push("domain="+g),r===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function qA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function KA(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function $(A,t){return A&&!qA(t)?KA(A,t):t}var Ut=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a"),e;function g(r){let o=r;return t&&(I.setAttribute("href",o),o=I.href),I.setAttribute("href",o),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^%23/,""):"",hostname:I.hostname,port:I.port,pathname:I.pathname.charAt(0)==="/"?I.pathname:"/"+I.pathname}}return e=g(window.location.href),function(o){let n=C.isString(o)?g(o):o;return n.protocol===e.protocol&&n.host===e.host}}():function(){return function(){return!0}}();function OA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function se(A,t){A=A||10;let I=new Array(A),e=new Array(A),g=0,r=0,o;return t=t!==void 0?t:1e3,function(a){let Q=Date.now(),B=e[r];o||(o=Q),I[g]=a,e[g]=Q;let i=r,f=0;for(;i!==g;)f+=I[i++],i=i%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-o<t)return;let s=B&&Q-B;return s?Math.round(f*1e3/s):void 0}}var Gt=se;function kt(A,t){let I=0,e=Gt(50,250);return g=>{let r=g.loaded,o=g.lengthComputable?g.total:void 0,n=r-I,a=e(n),Q=r<=o;I=r;let B={loaded:r,total:o,progress:o?r/o:void 0,bytes:n,rate:a||void 0,estimated:a&&o&&Q?(o-r)/a:void 0,event:g};B[t?"download":"upload"]=!0,A(B)}}var Qe=typeof XMLHttpRequest<"u",Lt=Qe&&function(A){return new Promise(function(I,e){let g=A.data,r=m.from(A.headers).normalize(),{responseType:o,withXSRFToken:n}=A,a;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let B;if(C.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((B=r.getContentType())!==!1){let[c,...u]=B?B.split(";").map(y=>y.trim()).filter(Boolean):[];r.setContentType([c||"multipart/form-data",...u].join("; "))}}let i=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);i.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),i.timeout=A.timeout;function s(){if(!i)return;let c=m.from("getAllResponseHeaders"in i&&i.getAllResponseHeaders()),y={data:!o||o==="text"||o==="json"?i.responseText:i.response,status:i.status,statusText:i.statusText,headers:c,config:A,request:i};MA(function(N){I(N),Q()},function(N){e(N),Q()},y),i=null}if("onloadend"in i?i.onloadend=s:i.onreadystatechange=function(){!i||i.readyState!==4||i.status===0&&!(i.responseURL&&i.responseURL.indexOf("file:")===0)||setTimeout(s)},i.onabort=function(){i&&(e(new l("Request aborted",l.ECONNABORTED,A,i)),i=null)},i.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,i)),i=null},i.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",y=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,i)),i=null},w.hasStandardBrowserEnv&&(n&&C.isFunction(n)&&(n=n(A)),n||n!==!1&&Ut(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&Nt.read(A.xsrfCookieName);c&&r.set(A.xsrfHeaderName,c)}g===void 0&&r.setContentType(null),"setRequestHeader"in i&&C.forEach(r.toJSON(),function(u,y){i.setRequestHeader(y,u)}),C.isUndefined(A.withCredentials)||(i.withCredentials=!!A.withCredentials),o&&o!=="json"&&(i.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&i.addEventListener("progress",kt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&i.upload&&i.upload.addEventListener("progress",kt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{i&&(e(!c||c.type?new H(null,A,i):c),i.abort(),i=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=OA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}i.send(g||null)})};var TA={http:QA,xhr:Lt};C.forEach(TA,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Jt=A=>`- ${A}`,Ee=A=>C.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=C.isArray(A)?A:[A];let{length:t}=A,I,e,g={};for(let r=0;r<t;r++){I=A[r];let o;if(e=I,!Ee(I)&&(e=TA[(o=String(I)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${o}\'`);if(e)break;g[o||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([n,a])=>`adapter ${n} `+(a===!1?"is not supported by the environment":"is not available in the build")),o=t?r.length>1?`since :%0A`+r.map(Jt).join(`%0A`):" "+Jt(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return e},adapters:TA};function PA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new H(null,A)}function DA(A){return PA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||T.adapter)(A).then(function(e){return PA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(PA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var Ht=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let I={};function e(Q,B,i){return C.isPlainObject(Q)&&C.isPlainObject(B)?C.merge.call({caseless:i},Q,B):C.isPlainObject(B)?C.merge({},B):C.isArray(B)?B.slice():B}function g(Q,B,i){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q,i)}else return e(Q,B,i)}function r(Q,B){if(!C.isUndefined(B))return e(void 0,B)}function o(Q,B){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q)}else return e(void 0,B)}function n(Q,B,i){if(i in t)return e(Q,B);if(i in A)return e(void 0,Q)}let a={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(Q,B)=>g(Ht(Q),Ht(B),!0)};return C.forEach(Object.keys(Object.assign({},A,t)),function(B){let i=a[B]||g,f=i(A[B],t[B],B);C.isUndefined(f)&&i!==n||(I[B]=f)}),I}var uA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{xA[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}});var Yt={};xA.transitional=function(t,I,e){function g(r,o){return"[Axios v"+uA+"] Transitional option \'"+r+"\'"+o+(e?". "+e:"")}return(r,o,n)=>{if(t===!1)throw new l(g(o," has been removed"+(I?" in "+I:"")),l.ERR_DEPRECATED);return I&&!Yt[o]&&(Yt[o]=!0,console.warn(g(o," has been deprecated since v"+I+" and will be removed in the near future"))),t?t(r,o,n):!0}};function ae(A,t,I){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],o=t[r];if(o){let n=A[r],a=n===void 0||o(n,r,A);if(a!==!0)throw new l("option "+r+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var Y=hA.validators,x=class{constructor(t){this.defaults=t,this.interceptors={request:new LA,response:new LA}}async request(t,I){try{return await this._request(t,I)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(t,I){typeof t=="string"?(I=I||{},I.url=t):I=t||{},I=k(this.defaults,I);let{transitional:e,paramsSerializer:g,headers:r}=I;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),g!=null&&(C.isFunction(g)?I.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:Y.function,serialize:Y.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let o=r&&C.merge(r.common,r[I.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],E=>{delete r[E]}),I.headers=m.concat(o,r);let n=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(I)===!1||(a=a&&c.synchronous,n.unshift(c.fulfilled,c.rejected))});let Q=[];this.interceptors.response.forEach(function(c){Q.push(c.fulfilled,c.rejected)});let B,i=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,n),E.push.apply(E,Q),f=E.length,B=Promise.resolve(I);i<f;)B=B.then(E[i++],E[i++]);return B}f=n.length;let s=I;for(i=0;i<f;){let E=n[i++],c=n[i++];try{s=E(s)}catch(u){c.call(this,u);break}}try{B=DA.call(this,s)}catch(E){return Promise.reject(E)}for(i=0,f=Q.length;i<f;)B=B.then(Q[i++],Q[i++]);return B}getUri(t){t=k(this.defaults,t);let I=$(t.baseURL,t.url);return X(I,t.params,t.paramsSerializer)}};C.forEach(["delete","get","head","options"],function(t){x.prototype[t]=function(I,e){return this.request(k(e||{},{method:t,url:I,data:(e||{}).data}))}});C.forEach(["post","put","patch"],function(t){function I(e){return function(r,o,n){return this.request(k(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:o}))}}x.prototype[t]=I(),x.prototype[t+"Form"]=I(!0)});var AA=x;var jA=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(r){I=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,o=new Promise(n=>{e.subscribe(n),r=n}).then(g);return o.cancel=function(){e.unsubscribe(r)},o},t(function(r,o,n){e.reason||(e.reason=new H(r,o,n),I(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let I=this._listeners.indexOf(t);I!==-1&&this._listeners.splice(I,1)}static source(){let t;return{token:new A(function(g){t=g}),cancel:t}}},bt=jA;function WA(A){return function(I){return A.apply(null,I)}}function ZA(A){return C.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,t])=>{VA[t]=A});var Mt=VA;function qt(A){let t=new AA(A),I=W(AA.prototype.request,t);return C.extend(I,AA.prototype,t,{allOwnKeys:!0}),C.extend(I,t,null,{allOwnKeys:!0}),I.create=function(g){return qt(k(A,g))},I}var h=qt(T);h.Axios=AA;h.CanceledError=H;h.CancelToken=bt;h.isCancel=v;h.VERSION=uA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(t){return Promise.all(t)};h.spread=WA;h.isAxiosError=ZA;h.mergeConfig=k;h.AxiosHeaders=m;h.formToJSON=A=>cA(C.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=Mt;h.default=h;var dA=h;var{Axios:io,AxiosError:Co,CanceledError:Bo,isCancel:no,CancelToken:so,VERSION:Qo,all:Eo,Cancel:ao,isAxiosError:co,spread:fo,toFormData:lo,AxiosHeaders:Do,HttpStatusCode:uo,formToJSON:ho,getAdapter:yo,mergeConfig:wo}=dA;var tA,L,zA,XA={env:{emscripten_notify_memory_growth:function(A){zA=new Uint8Array(L.exports.memory.buffer)}}},yA=class{init(){return tA||(typeof fetch<"u"?tA=fetch("data:application/wasm;base64,"+Kt).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,XA)).then(this._init):tA=WebAssembly.instantiate(Buffer.from(Kt,"base64"),XA).then(this._init),tA)}_init(t){L=t.instance,XA.env.emscripten_notify_memory_growth(0)}decode(t,I=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=t.byteLength,g=L.exports.malloc(e);zA.set(t,g),I=I||Number(L.exports.ZSTD_findDecompressedSize(g,e));let r=L.exports.malloc(I),o=L.exports.ZSTD_decompress(r,I,g,e),n=zA.slice(r,r+o);return L.exports.free(g),L.exports.free(r),n}},Kt="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var Ot=new yA,Tt=!1;async function ce(A,t,I){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${t}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await dA.get(`${g}.zst`,{responseType:"arraybuffer",params:I});Tt||(await Ot.init(),Tt=!0);let n=Ot.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:n})}var Pt=ce;var wA=new Map;async function fe(A,t,I){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),wA.has(g)?r=await wA.get(g):(wA.set(g,Pt(e,t,I)),r=await wA.get(g)),r}var xt=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},S=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=ue;function he(A,t){let I=null;switch(A){case S.UInt8:{I=new Uint8Array(t);break}case S.Int8:{I=new Int8Array(t);break}case S.UInt16:{I=new Uint16Array(t);break}case S.Int16:{I=new Int16Array(t);break}case S.UInt32:{I=new Uint32Array(t);break}case S.Int32:{I=new Int32Array(t);break}case S.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(t):I=new Uint8Array(t);break}case S.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(t):I=new Uint8Array(t);break}case j.Float32:{I=new Float32Array(t);break}case j.Float64:{I=new Float64Array(t);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var G=he;var Zt=typeof globalThis.SharedArrayBuffer=="function",jt=new TextEncoder,Wt=new TextDecoder("utf-8");function de(A,t){let I={flags:"r",encoding:"binary"},e=A.fs_open(t,I.flags),r=A.fs_stat(t).size,o=null;Zt?o=new SharedArrayBuffer(r):o=new ArrayBuffer(r);let n=new Uint8Array(o);return A.fs_read(e,n,0,r,0),A.fs_close(e),n}function Vt(A,t,I){let e=null;Zt?e=new SharedArrayBuffer(I):e=new ArrayBuffer(I);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,t,I);return g.set(r),g}function d(A,t,I,e){let g=0;return t!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,e,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),g)),g}function M(A,t,I){let e=JSON.stringify(t),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,g]);A.stringToUTF8(e,r,g)}function p(A,t,I,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,I]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,I]),o=Vt(A,g,r);return G(e,o.buffer)}function mA(A,t){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),e=A.UTF8ToString(I);return JSON.parse(e)}function ye(A,t,I,e){e!=null&&e.length>0&&e.forEach(function(Q,B){switch(Q.type){case D.TextStream:{let i=jt.encode(Q.data.data),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.JsonCompatible:{let i=jt.encode(JSON.stringify(Q.data)),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.BinaryStream:{let i=Q.data.data,f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let i=Q.data,f=d(A,i.data,B,0),s=d(A,i.direction,B,1),E=typeof i.metadata?.entries<"u"?Array.from(i.metadata.entries()):[],c={imageType:i.imageType,name:i.name,origin:i.origin,spacing:i.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:i.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};M(A,c,B);break}case D.Mesh:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.cells,B,1),E=d(A,i.pointData,B,2),c=d(A,i.cellData,B,3),u={meshType:i.meshType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:i.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:i.cellBufferSize,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};M(A,u,B);break}case D.PointSet:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.pointData,B,1),E={pointSetType:i.pointSetType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};M(A,E,B);break}case D.PolyData:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.vertices,B,1),E=d(A,i.lines,B,2),c=d(A,i.polygons,B,3),u=d(A,i.triangleStrips,B,4),y=d(A,i.pointData,B,5),R=d(A,i.pointData,B,6),N={polyDataType:i.polyDataType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:i.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:i.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:i.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:i.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${y}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};M(A,N,B);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(t.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let o=A.getModuleStdout(),n=A.getModuleStderr(),a=[];return I!=null&&I.length>0&&r===0&&I.forEach(function(Q,B){let i=null;switch(Q.type){case D.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i={data:Wt.decode(c)};break}case D.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i=JSON.parse(Wt.decode(c));break}case D.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);i={data:Vt(A,s,E)};break}case D.TextFile:{i={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{i={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let s=mA(A,B);s.data=p(A,B,0,s.imageType.componentType),s.direction=p(A,B,1,j.Float64),s.metadata=new Map(s.metadata),i=s;break}case D.Mesh:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.meshType.pointComponentType):s.points=G(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=p(A,B,1,s.meshType.cellComponentType):s.cells=G(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,2,s.meshType.pointPixelComponentType):s.pointData=G(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,3,s.meshType.cellPixelComponentType):s.cellData=G(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PointSet:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.pointSetType.pointComponentType):s.points=G(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,1,s.pointSetType.pointPixelComponentType):s.pointData=G(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PolyData:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,j.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=p(A,B,1,S.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=p(A,B,2,S.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=p(A,B,3,S.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=p(A,B,4,S.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=p(A,B,5,s.polyDataType.pointPixelComponentType):s.pointData=G(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,6,s.polyDataType.cellPixelComponentType):s.cellData=G(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:i};a.push(f)}),{returnValue:r,stdout:o,stderr:n,outputs:a}}var Xt=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,t){if(A==null)return[];let I=[];for(let e=0;e<A.length;e++){let g=pe(A[e],t);g!==null&&I.push(g)}return I}function pe(A,t){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:t?I:I.slice(0)}var zt=me;function Se(A){return[A.data,A.direction]}var _t=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vt=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $t=Re;async function Ne(A,t,I,e){let g=Xt(A,t,I,e),r=[];return g.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let n=o.data;r.push(n)}else if(o.type===D.Image){let n=o.data;r.push(..._t(n))}else if(o.type===D.Mesh){let n=o.data;r.push(...vt(n))}else if(o.type===D.PolyData){let n=o.data;r.push(...$t(n))}}),FA(g,zt(r,!0))}var AI=Ne;var Ue={runPipeline:async function(A,t,I,e,g,r){let o=await xt(A,t,r);return await AI(o,I,e,g)}};iA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';ht(Dt);export{Bi as applyPresentationStateToImage,F as getDefaultWebWorker,h as getPipelineWorkerUrl,w as getPipelinesBaseUrl,ci as readDicomEncapsulatedPdf,mi as readDicomTags,wi as readImageDicomFileSeries,le as readImageDicomFileSeriesWorkerFunction,Fi as readOverlappingSegmentation,Si as readSegmentation,eI as setDefaultWebWorker,ht as setPipelineWorkerUrl,_s as setPipelinesBaseUrl,fi as structuredReportToHtml,pi as structuredReportToText,RA as version,Gi as writeMultiSegmentation,Ni as writeOverlappingSegmentation,Ri as writeSegmentation};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
