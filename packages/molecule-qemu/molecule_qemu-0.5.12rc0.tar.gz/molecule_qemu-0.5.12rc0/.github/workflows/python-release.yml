name: Python Package - Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'


permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up direnv
        uses: andreygubarev/setup-direnv@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pipenv'

      - name: Install pipenv
        run: pip install pipenv

      - name: Lint with ansible-lint
        run: |
          direnv allow .
          direnv exec . python -m build --sdist --wheel --outdir dist/ .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: 'dist/*'

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package

      - name: Publish package
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: .

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if pre-release
        id: prerelease
        run: |
          echo "prerelease=$(if [[ "${{ github.ref }}" == *"rc"* ]]; then echo "true"; else echo "false"; fi)" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          name: python-package

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          generate_release_notes: true
          files: |
            *.whl
            *.tar.gz
