[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "msearch"
dynamic = ["version"]
description = "Search web, hf, pypi, stackovf"
readme = "README.md"
requires-python = ">=3.10"
license = "apache-2.0"
keywords = []
authors = [{name="mbodiai"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
    'bs4==0.0.2',
    'git-python',
    'html2text==2024.2.26',
    "html5lib>=1.1",
    "mbpy",
    'minspect',
    'mrender',
    "prompt-toolkit>=3.0.48",
    'PyGithub',
    'requests==2.32.3',
    "rich-click>=1.8.3",
    'rich==13.7.1',
    "twine>=5.1.1",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["msearch"]

[tool.hatch.version]
path = "msearch/__about__.py"

[tool.hatch.build.targets.wheel.force-include]
"resources" = "msearch/resources"

[tool.hatch.envs.default]
python = "3.10"
path = ".msearch/envs/msearch"
dependencies = [
  "pytest",
  "pytest-mock",
  "pytest-asyncio",
]

[tool.hatch.envs.default.env-vars]

[tool.hatch.envs.conda]
type = "conda"
python = "3.10"
command = "conda"
conda-forge = false
environment-file = "environment.yml"
prefix = ".venv/"

[tool.hatch.envs.default.scripts]
test = "pytest -vv {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0"
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:msearch/ tests}"

[tool.coverage.run]
source_pkgs = ["msearch", "tests"]
branch = true
parallel = true
omit = ["msearch/__about__.py"]

[tool.coverage.paths]
msearch = ["msearch/"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
extend-unsafe-fixes = ["ALL"]
select = [
"A", "C4", "D", "E", "F", "UP", "B", "SIM", "N", "ANN", "ASYNC",
"S", "T20", "RET", "SIM", "ARG", "PTH", "ERA", "PD", "I", "PLW",
]
ignore = [
"D100", "D101", "D104", "D106", "ANN101", "ANN102", "ANN003", "UP009", "ANN204",
"B026", "ANN001", "ANN401", "ANN202", "D107", "D102", "D103", "E731", "UP006",
"UP035", "ANN002", "PLW2901"
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.uv]
dev-dependencies = [
    "mypy>=1.12.0",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs}/*" = ["ALL"]
"**__init__.py" = ["F401"]
