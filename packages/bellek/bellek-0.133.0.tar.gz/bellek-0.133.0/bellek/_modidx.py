# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/bellek',
                'doc_host': 'https://bdsaglam.github.io',
                'git_url': 'https://github.com/bdsaglam/bellek',
                'lib_path': 'bellek'},
  'syms': { 'bellek.ds': { 'bellek.ds.NestedDict': ('ds.html#nesteddict', 'bellek/ds.py'),
                           'bellek.ds.NestedDict.__init__': ('ds.html#nesteddict.__init__', 'bellek/ds.py'),
                           'bellek.ds.NestedDict.at': ('ds.html#nesteddict.at', 'bellek/ds.py'),
                           'bellek.ds.NestedDict.flat': ('ds.html#nesteddict.flat', 'bellek/ds.py'),
                           'bellek.ds.NestedDict.from_flat_dict': ('ds.html#nesteddict.from_flat_dict', 'bellek/ds.py'),
                           'bellek.ds.NestedDict.set': ('ds.html#nesteddict.set', 'bellek/ds.py'),
                           'bellek.ds.flatten_dict': ('ds.html#flatten_dict', 'bellek/ds.py'),
                           'bellek.ds.unflatten_dict': ('ds.html#unflatten_dict', 'bellek/ds.py')},
            'bellek.dspy.predict.cte': { 'bellek.dspy.predict.cte.ConnectTheEntities': ( 'dspy.predict.cte.html#connecttheentities',
                                                                                         'bellek/dspy/predict/cte.py'),
                                         'bellek.dspy.predict.cte.ConnectTheEntities.__init__': ( 'dspy.predict.cte.html#connecttheentities.__init__',
                                                                                                  'bellek/dspy/predict/cte.py'),
                                         'bellek.dspy.predict.cte.ConnectTheEntities.demos': ( 'dspy.predict.cte.html#connecttheentities.demos',
                                                                                               'bellek/dspy/predict/cte.py'),
                                         'bellek.dspy.predict.cte.ConnectTheEntities.extended_signature': ( 'dspy.predict.cte.html#connecttheentities.extended_signature',
                                                                                                            'bellek/dspy/predict/cte.py'),
                                         'bellek.dspy.predict.cte.ConnectTheEntities.forward': ( 'dspy.predict.cte.html#connecttheentities.forward',
                                                                                                 'bellek/dspy/predict/cte.py')},
            'bellek.dvc.experiment': { 'bellek.dvc.experiment.load_experiments': ( 'dvc.experiment.html#load_experiments',
                                                                                   'bellek/dvc/experiment.py'),
                                       'bellek.dvc.experiment.parse_experiment': ( 'dvc.experiment.html#parse_experiment',
                                                                                   'bellek/dvc/experiment.py'),
                                       'bellek.dvc.experiment.parse_experiments': ( 'dvc.experiment.html#parse_experiments',
                                                                                    'bellek/dvc/experiment.py'),
                                       'bellek.dvc.experiment.parse_metrics': ( 'dvc.experiment.html#parse_metrics',
                                                                                'bellek/dvc/experiment.py'),
                                       'bellek.dvc.experiment.parse_params': ( 'dvc.experiment.html#parse_params',
                                                                               'bellek/dvc/experiment.py')},
            'bellek.hf.datasets.utils': { 'bellek.hf.datasets.utils.chunk_random_dataset': ( 'hf.datasets.utils.html#chunk_random_dataset',
                                                                                             'bellek/hf/datasets/utils.py'),
                                          'bellek.hf.datasets.utils.concatenate_dataset_dicts': ( 'hf.datasets.utils.html#concatenate_dataset_dicts',
                                                                                                  'bellek/hf/datasets/utils.py'),
                                          'bellek.hf.datasets.utils.load_datasets': ( 'hf.datasets.utils.html#load_datasets',
                                                                                      'bellek/hf/datasets/utils.py')},
            'bellek.hf.transformers.experiment': { 'bellek.hf.transformers.experiment._load_tokenizer_model': ( 'hf.transformers.experiment.html#_load_tokenizer_model',
                                                                                                                'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.calculate_token_counts': ( 'hf.transformers.experiment.html#calculate_token_counts',
                                                                                                                 'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.evaluate_': ( 'hf.transformers.experiment.html#evaluate_',
                                                                                                    'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.fine_tune': ( 'hf.transformers.experiment.html#fine_tune',
                                                                                                    'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.make_datacollator': ( 'hf.transformers.experiment.html#make_datacollator',
                                                                                                            'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.make_pipeline': ( 'hf.transformers.experiment.html#make_pipeline',
                                                                                                        'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.predict': ( 'hf.transformers.experiment.html#predict',
                                                                                                  'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.prepare_config_for_fp': ( 'hf.transformers.experiment.html#prepare_config_for_fp',
                                                                                                                'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.prepare_model_for_inference': ( 'hf.transformers.experiment.html#prepare_model_for_inference',
                                                                                                                      'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.prepare_model_for_training': ( 'hf.transformers.experiment.html#prepare_model_for_training',
                                                                                                                     'bellek/hf/transformers/experiment.py'),
                                                   'bellek.hf.transformers.experiment.preprocess_config': ( 'hf.transformers.experiment.html#preprocess_config',
                                                                                                            'bellek/hf/transformers/experiment.py')},
            'bellek.hf.transformers.generation': { 'bellek.hf.transformers.generation.flat_pipeline': ( 'hf.transformers.generation.html#flat_pipeline',
                                                                                                        'bellek/hf/transformers/generation.py'),
                                                   'bellek.hf.transformers.generation.generate': ( 'hf.transformers.generation.html#generate',
                                                                                                   'bellek/hf/transformers/generation.py'),
                                                   'bellek.hf.transformers.generation.preprocess_generation_params': ( 'hf.transformers.generation.html#preprocess_generation_params',
                                                                                                                       'bellek/hf/transformers/generation.py')},
            'bellek.hf.transformers.llama3': { 'bellek.hf.transformers.llama3.prepare_llama3_for_inference': ( 'hf.transformers.llama3.html#prepare_llama3_for_inference',
                                                                                                               'bellek/hf/transformers/llama3.py'),
                                               'bellek.hf.transformers.llama3.prepare_llama3_for_training': ( 'hf.transformers.llama3.html#prepare_llama3_for_training',
                                                                                                              'bellek/hf/transformers/llama3.py')},
            'bellek.hf.transformers.utils': { 'bellek.hf.transformers.utils.load_tokenizer_model': ( 'hf.transformers.utils.html#load_tokenizer_model',
                                                                                                     'bellek/hf/transformers/utils.py'),
                                              'bellek.hf.transformers.utils.merge_adapters_and_publish': ( 'hf.transformers.utils.html#merge_adapters_and_publish',
                                                                                                           'bellek/hf/transformers/utils.py'),
                                              'bellek.hf.transformers.utils.prepare_model_kwargs': ( 'hf.transformers.utils.html#prepare_model_kwargs',
                                                                                                     'bellek/hf/transformers/utils.py')},
            'bellek.jerx.dataset.docred': { 'bellek.jerx.dataset.docred.extract_sentences': ( 'jerx.dataset.docred.html#extract_sentences',
                                                                                              'bellek/jerx/dataset/docred.py'),
                                            'bellek.jerx.dataset.docred.extract_text': ( 'jerx.dataset.docred.html#extract_text',
                                                                                         'bellek/jerx/dataset/docred.py'),
                                            'bellek.jerx.dataset.docred.extract_triplets': ( 'jerx.dataset.docred.html#extract_triplets',
                                                                                             'bellek/jerx/dataset/docred.py'),
                                            'bellek.jerx.dataset.docred.join_tokens': ( 'jerx.dataset.docred.html#join_tokens',
                                                                                        'bellek/jerx/dataset/docred.py'),
                                            'bellek.jerx.dataset.docred.transform_docred': ( 'jerx.dataset.docred.html#transform_docred',
                                                                                             'bellek/jerx/dataset/docred.py')},
            'bellek.jerx.dataset.webnlg': { 'bellek.jerx.dataset.webnlg._batch_transform_webnlg': ( 'jerx.dataset.webnlg.html#_batch_transform_webnlg',
                                                                                                    'bellek/jerx/dataset/webnlg.py'),
                                            'bellek.jerx.dataset.webnlg._transform_entity': ( 'jerx.dataset.webnlg.html#_transform_entity',
                                                                                              'bellek/jerx/dataset/webnlg.py'),
                                            'bellek.jerx.dataset.webnlg._transform_relation': ( 'jerx.dataset.webnlg.html#_transform_relation',
                                                                                                'bellek/jerx/dataset/webnlg.py'),
                                            'bellek.jerx.dataset.webnlg._transform_triplet': ( 'jerx.dataset.webnlg.html#_transform_triplet',
                                                                                               'bellek/jerx/dataset/webnlg.py'),
                                            'bellek.jerx.dataset.webnlg.batch_transform_webnlg': ( 'jerx.dataset.webnlg.html#batch_transform_webnlg',
                                                                                                   'bellek/jerx/dataset/webnlg.py')},
            'bellek.jerx.eval': { 'bellek.jerx.eval.evaluate_jerx': ('jerx.eval.html#evaluate_jerx', 'bellek/jerx/eval.py'),
                                  'bellek.jerx.eval.evaluate_jerx_single': ('jerx.eval.html#evaluate_jerx_single', 'bellek/jerx/eval.py'),
                                  'bellek.jerx.eval.evaluate_model_jerx': ('jerx.eval.html#evaluate_model_jerx', 'bellek/jerx/eval.py'),
                                  'bellek.jerx.eval.evaluate_pipe_jerx': ('jerx.eval.html#evaluate_pipe_jerx', 'bellek/jerx/eval.py')},
            'bellek.jerx.fewshot.llm': { 'bellek.jerx.fewshot.llm.make_kg_triplet_extract_fn': ( 'jerx.fewshot.llm.html#make_kg_triplet_extract_fn',
                                                                                                 'bellek/jerx/fewshot/llm.py'),
                                         'bellek.jerx.fewshot.llm.parse_triplet_response': ( 'jerx.fewshot.llm.html#parse_triplet_response',
                                                                                             'bellek/jerx/fewshot/llm.py')},
            'bellek.jerx.offline.llm': { 'bellek.jerx.offline.llm.make_kg_triplet_extract_fn': ( 'jerx.offline.llm.html#make_kg_triplet_extract_fn',
                                                                                                 'bellek/jerx/offline/llm.py'),
                                         'bellek.jerx.offline.llm.parse_triplet_response': ( 'jerx.offline.llm.html#parse_triplet_response',
                                                                                             'bellek/jerx/offline/llm.py')},
            'bellek.jerx.prompt': { 'bellek.jerx.prompt.JERXChatFormatter': ('jerx.prompt.html#jerxchatformatter', 'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXChatFormatter.__post_init__': ( 'jerx.prompt.html#jerxchatformatter.__post_init__',
                                                                                            'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXChatFormatter._format_triplets': ( 'jerx.prompt.html#jerxchatformatter._format_triplets',
                                                                                               'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXChatFormatter.format': ( 'jerx.prompt.html#jerxchatformatter.format',
                                                                                     'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXChatFormatter.make_messages': ( 'jerx.prompt.html#jerxchatformatter.make_messages',
                                                                                            'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXChatFormatter.make_system_message': ( 'jerx.prompt.html#jerxchatformatter.make_system_message',
                                                                                                  'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXSimpleChatFormatter': ( 'jerx.prompt.html#jerxsimplechatformatter',
                                                                                    'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXSimpleChatFormatter._format_triplets': ( 'jerx.prompt.html#jerxsimplechatformatter._format_triplets',
                                                                                                     'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXSimpleChatFormatter.format': ( 'jerx.prompt.html#jerxsimplechatformatter.format',
                                                                                           'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXSimpleChatFormatter.make_messages': ( 'jerx.prompt.html#jerxsimplechatformatter.make_messages',
                                                                                                  'bellek/jerx/prompt.py'),
                                    'bellek.jerx.prompt.JERXSimpleChatFormatter.make_system_message': ( 'jerx.prompt.html#jerxsimplechatformatter.make_system_message',
                                                                                                        'bellek/jerx/prompt.py')},
            'bellek.jerx.reward.heuristic': { 'bellek.jerx.reward.heuristic.compute_heuristic_reward': ( 'jerx.reward.heuristic.html#compute_heuristic_reward',
                                                                                                         'bellek/jerx/reward/heuristic.py')},
            'bellek.jerx.reward.llm': { 'bellek.jerx.reward.llm.Assessment': ( 'jerx.reward.llm.html#assessment',
                                                                               'bellek/jerx/reward/llm.py'),
                                        'bellek.jerx.reward.llm._assess_triplets': ( 'jerx.reward.llm.html#_assess_triplets',
                                                                                     'bellek/jerx/reward/llm.py'),
                                        'bellek.jerx.reward.llm.assess_quality': ( 'jerx.reward.llm.html#assess_quality',
                                                                                   'bellek/jerx/reward/llm.py')},
            'bellek.jerx.reward.qa': { 'bellek.jerx.reward.qa.QuestionAnsweringResult': ( 'jerx.reward.qa.html#questionansweringresult',
                                                                                          'bellek/jerx/reward/qa.py'),
                                       'bellek.jerx.reward.qa.RewardAssessment': ( 'jerx.reward.qa.html#rewardassessment',
                                                                                   'bellek/jerx/reward/qa.py'),
                                       'bellek.jerx.reward.qa.make_qa_reward_func': ( 'jerx.reward.qa.html#make_qa_reward_func',
                                                                                      'bellek/jerx/reward/qa.py'),
                                       'bellek.jerx.reward.qa.make_question_answer_func': ( 'jerx.reward.qa.html#make_question_answer_func',
                                                                                            'bellek/jerx/reward/qa.py')},
            'bellek.jerx.utils': { 'bellek.jerx.utils.parse_triplet_strings': ( 'jerx.utils.html#parse_triplet_strings',
                                                                                'bellek/jerx/utils.py'),
                                   'bellek.jerx.utils.parse_triplets': ('jerx.utils.html#parse_triplets', 'bellek/jerx/utils.py'),
                                   'bellek.jerx.utils.remove_enumeration': ('jerx.utils.html#remove_enumeration', 'bellek/jerx/utils.py')},
            'bellek.lang.dataset': { 'bellek.lang.dataset.alpaca2openai': ('lang.dataset.html#alpaca2openai', 'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.alpaca2sharegpt': ('lang.dataset.html#alpaca2sharegpt', 'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.openai2sharegpt': ('lang.dataset.html#openai2sharegpt', 'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.openai2sharegpt_message': ( 'lang.dataset.html#openai2sharegpt_message',
                                                                                      'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.partition_input_output_messages': ( 'lang.dataset.html#partition_input_output_messages',
                                                                                              'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.sharegpt2openai': ('lang.dataset.html#sharegpt2openai', 'bellek/lang/dataset.py'),
                                     'bellek.lang.dataset.sharegpt2openai_message': ( 'lang.dataset.html#sharegpt2openai_message',
                                                                                      'bellek/lang/dataset.py')},
            'bellek.lang.qdecomp': { 'bellek.lang.qdecomp.make_chat_prompt_template': ( 'lang.qdecomp.html#make_chat_prompt_template',
                                                                                        'bellek/lang/qdecomp.py'),
                                     'bellek.lang.qdecomp.make_question_decomposer': ( 'lang.qdecomp.html#make_question_decomposer',
                                                                                       'bellek/lang/qdecomp.py'),
                                     'bellek.lang.qdecomp.parse_sub_questions': ( 'lang.qdecomp.html#parse_sub_questions',
                                                                                  'bellek/lang/qdecomp.py')},
            'bellek.llama_index.data_structs.data_structs': { 'bellek.llama_index.data_structs.data_structs.KG': ( 'llama_index.data_structs.data_structs.html#kg',
                                                                                                                   'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.KG.add_node': ( 'llama_index.data_structs.data_structs.html#kg.add_node',
                                                                                                                            'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.KG.add_to_embedding_dict': ( 'llama_index.data_structs.data_structs.html#kg.add_to_embedding_dict',
                                                                                                                                         'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.KG.get_type': ( 'llama_index.data_structs.data_structs.html#kg.get_type',
                                                                                                                            'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.KG.node_ids': ( 'llama_index.data_structs.data_structs.html#kg.node_ids',
                                                                                                                            'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.KG.search_node_by_keyword': ( 'llama_index.data_structs.data_structs.html#kg.search_node_by_keyword',
                                                                                                                                          'bellek/llama_index/data_structs/data_structs.py'),
                                                              'bellek.llama_index.data_structs.data_structs.patch_kg_data_struct': ( 'llama_index.data_structs.data_structs.html#patch_kg_data_struct',
                                                                                                                                     'bellek/llama_index/data_structs/data_structs.py')},
            'bellek.llama_index.graph_stores.kuzu': { 'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore',
                                                                                                               'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.__init__': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.__init__',
                                                                                                                        'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.client': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.client',
                                                                                                                      'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.delete': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.delete',
                                                                                                                      'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.from_dict': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.from_dict',
                                                                                                                         'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.from_persist_dir': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.from_persist_dir',
                                                                                                                                'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.get': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.get',
                                                                                                                   'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.get_rel_map': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.get_rel_map',
                                                                                                                           'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.init_schema': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.init_schema',
                                                                                                                           'bellek/llama_index/graph_stores/kuzu.py'),
                                                      'bellek.llama_index.graph_stores.kuzu.KuzuGraphStore.upsert_triplet': ( 'llama_index.graph_stores.kuzu.html#kuzugraphstore.upsert_triplet',
                                                                                                                              'bellek/llama_index/graph_stores/kuzu.py')},
            'bellek.llama_index.indices.knowledge_graph.base': { 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex',
                                                                                                                                          'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.__init__': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.__init__',
                                                                                                                                                   'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._build_index_from_nodes': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._build_index_from_nodes',
                                                                                                                                                                  'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._delete_node': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._delete_node',
                                                                                                                                                       'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._extract_triplets': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._extract_triplets',
                                                                                                                                                            'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._insert': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._insert',
                                                                                                                                                  'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._llm_extract_triplets': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._llm_extract_triplets',
                                                                                                                                                                'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex._parse_triplet_response': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex._parse_triplet_response',
                                                                                                                                                                  'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.add_node': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.add_node',
                                                                                                                                                   'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.as_retriever': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.as_retriever',
                                                                                                                                                       'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.get_networkx_graph': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.get_networkx_graph',
                                                                                                                                                             'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.graph_store': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.graph_store',
                                                                                                                                                      'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.query_context': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.query_context',
                                                                                                                                                        'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.ref_doc_info': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.ref_doc_info',
                                                                                                                                                       'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.upsert_triplet': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.upsert_triplet',
                                                                                                                                                         'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.KnowledgeGraphIndex.upsert_triplet_and_node': ( 'llama_index.indices.knowledge_graph.base.html#knowledgegraphindex.upsert_triplet_and_node',
                                                                                                                                                                  'bellek/llama_index/indices/knowledge_graph/base.py'),
                                                                 'bellek.llama_index.indices.knowledge_graph.base.patch_knowledge_graph_index': ( 'llama_index.indices.knowledge_graph.base.html#patch_knowledge_graph_index',
                                                                                                                                                  'bellek/llama_index/indices/knowledge_graph/base.py')},
            'bellek.llama_index.indices.knowledge_graph.retrievers': { 'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever',
                                                                                                                                                   'bellek/llama_index/indices/knowledge_graph/retrievers.py'),
                                                                       'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever.__init__': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever.__init__',
                                                                                                                                                            'bellek/llama_index/indices/knowledge_graph/retrievers.py'),
                                                                       'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever._extract_rel_text_keywords': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever._extract_rel_text_keywords',
                                                                                                                                                                              'bellek/llama_index/indices/knowledge_graph/retrievers.py'),
                                                                       'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever._get_keywords': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever._get_keywords',
                                                                                                                                                                 'bellek/llama_index/indices/knowledge_graph/retrievers.py'),
                                                                       'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever._get_metadata_for_response': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever._get_metadata_for_response',
                                                                                                                                                                              'bellek/llama_index/indices/knowledge_graph/retrievers.py'),
                                                                       'bellek.llama_index.indices.knowledge_graph.retrievers.KGTableRetriever._retrieve': ( 'llama_index.indices.knowledge_graph.retrievers.html#kgtableretriever._retrieve',
                                                                                                                                                             'bellek/llama_index/indices/knowledge_graph/retrievers.py')},
            'bellek.llama_index.obs': { 'bellek.llama_index.obs.FileSpanExporter': ( 'llama_index.obs.html#filespanexporter',
                                                                                     'bellek/llama_index/obs.py'),
                                        'bellek.llama_index.obs.FileSpanExporter.__init__': ( 'llama_index.obs.html#filespanexporter.__init__',
                                                                                              'bellek/llama_index/obs.py'),
                                        'bellek.llama_index.obs.FileSpanExporter._generate_filename': ( 'llama_index.obs.html#filespanexporter._generate_filename',
                                                                                                        'bellek/llama_index/obs.py'),
                                        'bellek.llama_index.obs.FileSpanExporter.export': ( 'llama_index.obs.html#filespanexporter.export',
                                                                                            'bellek/llama_index/obs.py'),
                                        'bellek.llama_index.obs.make_phoenix_trace_callback_handler': ( 'llama_index.obs.html#make_phoenix_trace_callback_handler',
                                                                                                        'bellek/llama_index/obs.py')},
            'bellek.logging': {'bellek.logging.get_logger': ('logging.html#get_logger', 'bellek/logging.py')},
            'bellek.mhqa.llm': { 'bellek.mhqa.llm.QuestionAnsweringResult': ('mhqa.llm.html#questionansweringresult', 'bellek/mhqa/llm.py'),
                                 'bellek.mhqa.llm.make_mhqa_chat': ('mhqa.llm.html#make_mhqa_chat', 'bellek/mhqa/llm.py'),
                                 'bellek.mhqa.llm.make_question_answer_func': ( 'mhqa.llm.html#make_question_answer_func',
                                                                                'bellek/mhqa/llm.py'),
                                 'bellek.mhqa.llm.parse_llm_generation': ('mhqa.llm.html#parse_llm_generation', 'bellek/mhqa/llm.py')},
            'bellek.ml.clip': { 'bellek.ml.clip.ClipClassificationHead': ('ml.clip.html#clipclassificationhead', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipClassificationHead.__init__': ( 'ml.clip.html#clipclassificationhead.__init__',
                                                                                    'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipClassificationHead.forward': ( 'ml.clip.html#clipclassificationhead.forward',
                                                                                   'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier': ('ml.clip.html#clipzeroshotclassifier', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.__init__': ( 'ml.clip.html#clipzeroshotclassifier.__init__',
                                                                                    'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.compute_text_features': ( 'ml.clip.html#clipzeroshotclassifier.compute_text_features',
                                                                                                 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.forward': ( 'ml.clip.html#clipzeroshotclassifier.forward',
                                                                                   'bellek/ml/clip.py'),
                                'bellek.ml.clip.load_clip_preprocess': ('ml.clip.html#load_clip_preprocess', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.make_tfms_from_clip_preprocess': ( 'ml.clip.html#make_tfms_from_clip_preprocess',
                                                                                   'bellek/ml/clip.py')},
            'bellek.ml.coop': { 'bellek.ml.coop.ClipVisualEncoder': ('ml.coop.html#clipvisualencoder', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.ClipVisualEncoder.__init__': ( 'ml.coop.html#clipvisualencoder.__init__',
                                                                               'bellek/ml/coop.py'),
                                'bellek.ml.coop.ClipVisualEncoder.forward': ('ml.coop.html#clipvisualencoder.forward', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearner': ('ml.coop.html#promptlearner', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearner.__init__': ('ml.coop.html#promptlearner.__init__', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearner.forward': ('ml.coop.html#promptlearner.forward', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningClip': ('ml.coop.html#promptlearningclip', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningClip.__init__': ( 'ml.coop.html#promptlearningclip.__init__',
                                                                                'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningClip.forward': ( 'ml.coop.html#promptlearningclip.forward',
                                                                               'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningTextEncoder': ('ml.coop.html#promptlearningtextencoder', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningTextEncoder.__init__': ( 'ml.coop.html#promptlearningtextencoder.__init__',
                                                                                       'bellek/ml/coop.py'),
                                'bellek.ml.coop.PromptLearningTextEncoder.forward': ( 'ml.coop.html#promptlearningtextencoder.forward',
                                                                                      'bellek/ml/coop.py'),
                                'bellek.ml.coop.TextEncoder': ('ml.coop.html#textencoder', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.TextEncoder.__init__': ('ml.coop.html#textencoder.__init__', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.TextEncoder.forward': ('ml.coop.html#textencoder.forward', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.make_prompt_learning_clip': ('ml.coop.html#make_prompt_learning_clip', 'bellek/ml/coop.py'),
                                'bellek.ml.coop.prepare_prompt_learning_clip': ( 'ml.coop.html#prepare_prompt_learning_clip',
                                                                                 'bellek/ml/coop.py')},
            'bellek.ml.data': { 'bellek.ml.data.ZippedDataLoader': ('ml.data.html#zippeddataloader', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__init__': ('ml.data.html#zippeddataloader.__init__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__iter__': ('ml.data.html#zippeddataloader.__iter__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__next__': ('ml.data.html#zippeddataloader.__next__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset': ('ml.data.html#zippeddataset', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__getitem__': ('ml.data.html#zippeddataset.__getitem__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__init__': ('ml.data.html#zippeddataset.__init__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__len__': ('ml.data.html#zippeddataset.__len__', 'bellek/ml/data.py'),
                                'bellek.ml.data.fetch_imagenet_label_synsets': ( 'ml.data.html#fetch_imagenet_label_synsets',
                                                                                 'bellek/ml/data.py'),
                                'bellek.ml.data.get_imagenet_id_label_map': ('ml.data.html#get_imagenet_id_label_map', 'bellek/ml/data.py'),
                                'bellek.ml.data.get_imagenet_id_synset_map': ( 'ml.data.html#get_imagenet_id_synset_map',
                                                                               'bellek/ml/data.py'),
                                'bellek.ml.data.make_imagenet_id_synset_map': ( 'ml.data.html#make_imagenet_id_synset_map',
                                                                                'bellek/ml/data.py')},
            'bellek.ml.evaluation': { 'bellek.ml.evaluation.classification_summary': ( 'ml.evaluation.html#classification_summary',
                                                                                       'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.evaluate_slmc': ('ml.evaluation.html#evaluate_slmc', 'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.find_binary_clf_threshold': ( 'ml.evaluation.html#find_binary_clf_threshold',
                                                                                          'bellek/ml/evaluation.py')},
            'bellek.ml.experiment': { 'bellek.ml.experiment.after_experiment': ( 'ml.experiment.html#after_experiment',
                                                                                 'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.before_experiment': ( 'ml.experiment.html#before_experiment',
                                                                                  'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.main': ('ml.experiment.html#main', 'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.make_experiment_dir': ( 'ml.experiment.html#make_experiment_dir',
                                                                                    'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.make_run_experiment_sweep': ( 'ml.experiment.html#make_run_experiment_sweep',
                                                                                          'bellek/ml/experiment.py')},
            'bellek.ml.layer': { 'bellek.ml.layer.GradReverse': ('ml.layer.html#gradreverse', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.__init__': ('ml.layer.html#gradreverse.__init__', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.forward': ('ml.layer.html#gradreverse.forward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad': ('ml.layer.html#reverse_grad', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.backward': ('ml.layer.html#reverse_grad.backward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.forward': ('ml.layer.html#reverse_grad.forward', 'bellek/ml/layer.py')},
            'bellek.ml.loss': { 'bellek.ml.loss.BinaryFocalLoss': ('ml.loss.html#binaryfocalloss', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.__init__': ('ml.loss.html#binaryfocalloss.__init__', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.activation': ( 'ml.loss.html#binaryfocalloss.activation',
                                                                               'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.decodes': ('ml.loss.html#binaryfocalloss.decodes', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.forward': ('ml.loss.html#binaryfocalloss.forward', 'bellek/ml/loss.py')},
            'bellek.ml.mcd': { 'bellek.ml.mcd.DiscrepancyLoss': ('ml.mcd.html#discrepancyloss', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.DiscrepancyLoss.__call__': ('ml.mcd.html#discrepancyloss.__call__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel': ('ml.mcd.html#ensemblemcdmodel', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.__init__': ('ml.mcd.html#ensemblemcdmodel.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.forward': ('ml.mcd.html#ensemblemcdmodel.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.from_mcd_model': ( 'ml.mcd.html#ensemblemcdmodel.from_mcd_model',
                                                                                  'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature': ('ml.mcd.html#feature', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature.__init__': ('ml.mcd.html#feature.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature.forward': ('ml.mcd.html#feature.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback': ('ml.mcd.html#mcdcallback', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.__init__': ('ml.mcd.html#mcdcallback.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._do_grad_opt': ('ml.mcd.html#mcdcallback._do_grad_opt', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._do_one_batch': ('ml.mcd.html#mcdcallback._do_one_batch', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._predict_source': ('ml.mcd.html#mcdcallback._predict_source', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._predict_target': ('ml.mcd.html#mcdcallback._predict_target', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.before_batch': ('ml.mcd.html#mcdcallback.before_batch', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.before_fit': ('ml.mcd.html#mcdcallback.before_fit', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader': ('ml.mcd.html#mcddataloader', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__init__': ('ml.mcd.html#mcddataloader.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__iter__': ('ml.mcd.html#mcddataloader.__iter__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__len__': ('ml.mcd.html#mcddataloader.__len__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__next__': ('ml.mcd.html#mcddataloader.__next__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.new': ('ml.mcd.html#mcddataloader.new', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.to': ('ml.mcd.html#mcddataloader.to', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset': ('ml.mcd.html#mcddataset', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__getitem__': ('ml.mcd.html#mcddataset.__getitem__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__init__': ('ml.mcd.html#mcddataset.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__len__': ('ml.mcd.html#mcddataset.__len__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel': ('ml.mcd.html#mcdmodel', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel.__init__': ('ml.mcd.html#mcdmodel.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel.forward': ('ml.mcd.html#mcdmodel.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor': ('ml.mcd.html#predictor', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor.__init__': ('ml.mcd.html#predictor.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor.forward': ('ml.mcd.html#predictor.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.discrepancy': ('ml.mcd.html#discrepancy', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.discrepancy_metric': ('ml.mcd.html#discrepancy_metric', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.mcd_learner': ('ml.mcd.html#mcd_learner', 'bellek/ml/mcd.py')},
            'bellek.ml.vision': { 'bellek.ml.vision.Make3Channel': ('ml.vision.html#make3channel', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__call__': ('ml.vision.html#make3channel.__call__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__repr__': ('ml.vision.html#make3channel.__repr__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform': ('ml.vision.html#torchvisiontransform', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.__init__': ( 'ml.vision.html#torchvisiontransform.__init__',
                                                                                      'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.encodes': ( 'ml.vision.html#torchvisiontransform.encodes',
                                                                                     'bellek/ml/vision.py')},
            'bellek.musique.baseline': { 'bellek.musique.baseline.BaselineMultiHop': ( 'musique.baseline.html#baselinemultihop',
                                                                                       'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineMultiHop.__call__': ( 'musique.baseline.html#baselinemultihop.__call__',
                                                                                                'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineMultiHop.__init__': ( 'musique.baseline.html#baselinemultihop.__init__',
                                                                                                'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineMultiHop._call': ( 'musique.baseline.html#baselinemultihop._call',
                                                                                             'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineSingleHop': ( 'musique.baseline.html#baselinesinglehop',
                                                                                        'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineSingleHop.__call__': ( 'musique.baseline.html#baselinesinglehop.__call__',
                                                                                                 'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineSingleHop.__init__': ( 'musique.baseline.html#baselinesinglehop.__init__',
                                                                                                 'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.BaselineSingleHop._call': ( 'musique.baseline.html#baselinesinglehop._call',
                                                                                              'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.benchmark': ( 'musique.baseline.html#benchmark',
                                                                                'bellek/musique/baseline.py'),
                                         'bellek.musique.baseline.make_docs': ( 'musique.baseline.html#make_docs',
                                                                                'bellek/musique/baseline.py')},
            'bellek.musique.constants': {},
            'bellek.musique.eval': { 'bellek.musique.eval._exact_match': ('musique.eval.html#_exact_match', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval._fuzzy_match': ('musique.eval.html#_fuzzy_match', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.calculate_metrics': ( 'musique.eval.html#calculate_metrics',
                                                                                'bellek/musique/eval.py'),
                                     'bellek.musique.eval.compare_answers': ('musique.eval.html#compare_answers', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.compute_exact_match': ( 'musique.eval.html#compute_exact_match',
                                                                                  'bellek/musique/eval.py'),
                                     'bellek.musique.eval.compute_f1': ('musique.eval.html#compute_f1', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.compute_scores': ('musique.eval.html#compute_scores', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.fuzzy_match_metric': ( 'musique.eval.html#fuzzy_match_metric',
                                                                                 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.get_tokens': ('musique.eval.html#get_tokens', 'bellek/musique/eval.py'),
                                     'bellek.musique.eval.metric_max_over_ground_truths': ( 'musique.eval.html#metric_max_over_ground_truths',
                                                                                            'bellek/musique/eval.py'),
                                     'bellek.musique.eval.normalize_answer': ( 'musique.eval.html#normalize_answer',
                                                                               'bellek/musique/eval.py')},
            'bellek.musique.multihop': { 'bellek.musique.multihop.BaselineMultiHop': ( 'musique.multihop.html#baselinemultihop',
                                                                                       'bellek/musique/multihop.py'),
                                         'bellek.musique.multihop.BaselineMultiHop.__call__': ( 'musique.multihop.html#baselinemultihop.__call__',
                                                                                                'bellek/musique/multihop.py'),
                                         'bellek.musique.multihop.BaselineMultiHop.__init__': ( 'musique.multihop.html#baselinemultihop.__init__',
                                                                                                'bellek/musique/multihop.py'),
                                         'bellek.musique.multihop.BaselineMultiHop._call': ( 'musique.multihop.html#baselinemultihop._call',
                                                                                             'bellek/musique/multihop.py'),
                                         'bellek.musique.multihop.benchmark': ( 'musique.multihop.html#benchmark',
                                                                                'bellek/musique/multihop.py'),
                                         'bellek.musique.multihop.make_docs': ( 'musique.multihop.html#make_docs',
                                                                                'bellek/musique/multihop.py')},
            'bellek.musique.multihopjerx': { 'bellek.musique.multihopjerx.BaselineMultiHop': ( 'musique.multihopjerx.html#baselinemultihop',
                                                                                               'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.BaselineMultiHop.__call__': ( 'musique.multihopjerx.html#baselinemultihop.__call__',
                                                                                                        'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.BaselineMultiHop.__init__': ( 'musique.multihopjerx.html#baselinemultihop.__init__',
                                                                                                        'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.BaselineMultiHop._call': ( 'musique.multihopjerx.html#baselinemultihop._call',
                                                                                                     'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.QuestionAnsweringResult': ( 'qa.llm.html#questionansweringresult',
                                                                                                      'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.benchmark': ( 'musique.multihopjerx.html#benchmark',
                                                                                        'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.make_docs': ( 'musique.multihopjerx.html#make_docs',
                                                                                        'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.make_qa_chat': ( 'musique.multihopjerx.html#make_qa_chat',
                                                                                           'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.make_question_answer_func': ( 'qa.llm.html#make_question_answer_func',
                                                                                                        'bellek/musique/multihopjerx.py'),
                                             'bellek.musique.multihopjerx.parse_llm_generation': ( 'qa.llm.html#parse_llm_generation',
                                                                                                   'bellek/musique/multihopjerx.py')},
            'bellek.musique.nhop': { 'bellek.musique.nhop.BaselineMultiHop': ( 'musique.nhop.html#baselinemultihop',
                                                                               'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.BaselineMultiHop.__call__': ( 'musique.nhop.html#baselinemultihop.__call__',
                                                                                        'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.BaselineMultiHop.__init__': ( 'musique.nhop.html#baselinemultihop.__init__',
                                                                                        'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.BaselineMultiHop._call': ( 'musique.nhop.html#baselinemultihop._call',
                                                                                     'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.Result': ('musique.nhop.html#result', 'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.benchmark': ('musique.nhop.html#benchmark', 'bellek/musique/nhop.py'),
                                     'bellek.musique.nhop.make_docs': ('musique.nhop.html#make_docs', 'bellek/musique/nhop.py')},
            'bellek.musique.qa': { 'bellek.musique.qa.load_qa_func': ('musique.qa.html#load_qa_func', 'bellek/musique/qa.py'),
                                   'bellek.musique.qa.make_qa_func': ('musique.qa.html#make_qa_func', 'bellek/musique/qa.py')},
            'bellek.musique.singlehop': { 'bellek.musique.singlehop.BaselineSingleHop': ( 'musique.singlehop.html#baselinesinglehop',
                                                                                          'bellek/musique/singlehop.py'),
                                          'bellek.musique.singlehop.BaselineSingleHop.__call__': ( 'musique.singlehop.html#baselinesinglehop.__call__',
                                                                                                   'bellek/musique/singlehop.py'),
                                          'bellek.musique.singlehop.BaselineSingleHop.__init__': ( 'musique.singlehop.html#baselinesinglehop.__init__',
                                                                                                   'bellek/musique/singlehop.py'),
                                          'bellek.musique.singlehop.BaselineSingleHop._call': ( 'musique.singlehop.html#baselinesinglehop._call',
                                                                                                'bellek/musique/singlehop.py'),
                                          'bellek.musique.singlehop.benchmark': ( 'musique.singlehop.html#benchmark',
                                                                                  'bellek/musique/singlehop.py'),
                                          'bellek.musique.singlehop.make_docs': ( 'musique.singlehop.html#make_docs',
                                                                                  'bellek/musique/singlehop.py')},
            'bellek.qa.ablation': { 'bellek.qa.ablation.QuestionAnsweringResultCOT': ( 'qa.ablation.html#questionansweringresultcot',
                                                                                       'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.QuestionAnsweringResultCOTFS': ( 'qa.ablation.html#questionansweringresultcotfs',
                                                                                         'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.QuestionAnsweringResultCTE': ( 'qa.ablation.html#questionansweringresultcte',
                                                                                       'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.QuestionAnsweringResultCTECOT': ( 'qa.ablation.html#questionansweringresultctecot',
                                                                                          'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.QuestionAnsweringResultStandard': ( 'qa.ablation.html#questionansweringresultstandard',
                                                                                            'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation._QuestionAnsweringResultCTE': ( 'qa.ablation.html#_questionansweringresultcte',
                                                                                        'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation._answer_question_cte': ( 'qa.ablation.html#_answer_question_cte',
                                                                                 'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.answer_question_cot': ( 'qa.ablation.html#answer_question_cot',
                                                                                'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.answer_question_cot_fs': ( 'qa.ablation.html#answer_question_cot_fs',
                                                                                   'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.answer_question_cte': ( 'qa.ablation.html#answer_question_cte',
                                                                                'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.answer_question_cte_cot': ( 'qa.ablation.html#answer_question_cte_cot',
                                                                                    'bellek/qa/ablation.py'),
                                    'bellek.qa.ablation.answer_question_standard': ( 'qa.ablation.html#answer_question_standard',
                                                                                     'bellek/qa/ablation.py')},
            'bellek.qa.llm': { 'bellek.qa.llm.QuestionAnsweringResult': ('qa.llm.html#questionansweringresult', 'bellek/qa/llm.py'),
                               'bellek.qa.llm.make_qa_chat': ('qa.llm.html#make_qa_chat', 'bellek/qa/llm.py'),
                               'bellek.qa.llm.make_question_answer_func': ('qa.llm.html#make_question_answer_func', 'bellek/qa/llm.py'),
                               'bellek.qa.llm.parse_llm_generation': ('qa.llm.html#parse_llm_generation', 'bellek/qa/llm.py')},
            'bellek.qdecomp.llm': { 'bellek.qdecomp.llm.make_question_decomposer': ( 'qdecomp.llm.html#make_question_decomposer',
                                                                                     'bellek/qdecomp/llm.py'),
                                    'bellek.qdecomp.llm.parse_llm_generation': ( 'qdecomp.llm.html#parse_llm_generation',
                                                                                 'bellek/qdecomp/llm.py')},
            'bellek.testing': { 'bellek.testing.fixture_directory': ('testing.html#fixture_directory', 'bellek/testing.py'),
                                'bellek.testing.fixture_path': ('testing.html#fixture_path', 'bellek/testing.py')},
            'bellek.text.utils': { 'bellek.text.utils.fuzzy_match': ('text.utils.html#fuzzy_match', 'bellek/text/utils.py'),
                                   'bellek.text.utils.similarity': ('text.utils.html#similarity', 'bellek/text/utils.py')},
            'bellek.torch.dataset.utils': { 'bellek.torch.dataset.utils.ListDataset': ( 'torch.dataset.utils.html#listdataset',
                                                                                        'bellek/torch/dataset/utils.py'),
                                            'bellek.torch.dataset.utils.ListDataset.__getitem__': ( 'torch.dataset.utils.html#listdataset.__getitem__',
                                                                                                    'bellek/torch/dataset/utils.py'),
                                            'bellek.torch.dataset.utils.ListDataset.__init__': ( 'torch.dataset.utils.html#listdataset.__init__',
                                                                                                 'bellek/torch/dataset/utils.py'),
                                            'bellek.torch.dataset.utils.ListDataset.__len__': ( 'torch.dataset.utils.html#listdataset.__len__',
                                                                                                'bellek/torch/dataset/utils.py')},
            'bellek.utils': { 'bellek.utils.Path.ls_sorted': ('utils.html#path.ls_sorted', 'bellek/utils.py'),
                              'bellek.utils.chunk_random': ('utils.html#chunk_random', 'bellek/utils.py'),
                              'bellek.utils.context_chdir': ('utils.html#context_chdir', 'bellek/utils.py'),
                              'bellek.utils.generate_time_id': ('utils.html#generate_time_id', 'bellek/utils.py'),
                              'bellek.utils.is_in': ('utils.html#is_in', 'bellek/utils.py'),
                              'bellek.utils.jprint': ('utils.html#jprint', 'bellek/utils.py'),
                              'bellek.utils.most_common': ('utils.html#most_common', 'bellek/utils.py'),
                              'bellek.utils.print_dict_schema': ('utils.html#print_dict_schema', 'bellek/utils.py'),
                              'bellek.utils.set_seed': ('utils.html#set_seed', 'bellek/utils.py'),
                              'bellek.utils.split_camel_case': ('utils.html#split_camel_case', 'bellek/utils.py')},
            'bellek.wandb': { 'bellek.wandb.fetch_wandb_config': ('wandb.html#fetch_wandb_config', 'bellek/wandb.py'),
                              'bellek.wandb.fetch_wandb_run': ('wandb.html#fetch_wandb_run', 'bellek/wandb.py'),
                              'bellek.wandb.generate_run_id': ('wandb.html#generate_run_id', 'bellek/wandb.py')}}}
