"""
    Copyright 2024 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import fs
import mitogen

entity Key:
    """
        A public ssh-key used to access virtual machine

        :attr public_key: The actual public key that needs to be deployed
        :attr name: An identifier for the public key
        :attr command: The command that can be executed with this public key
        :attr options: SSH options associated with this public key
    """
    string public_key
    string name
    string command=""
    string options=""
end

implement Key using std::none

entity SSHUser:
    """
        An ssh users allows authorized keys to be installed
    """
    string home_dir
    string user
    string group
end

SSHUser.ssh_keys [0:] -- Key.ssh_users [0:]

SSHUser.via [0:1] -- mitogen::Context
"""
Mitogen context dedicated to this resource.  If not specified, defaults
to the one of the host.
"""

SSHUser.host [1] -- std::Host
"""
Relation to the host on which the package should be deployed.
"""

index SSHUser(host, home_dir)

implementation sshUser for SSHUser:
    dir = fs::Directory(
        host=self.host, 
        path="{{ home_dir }}/.ssh", 
        mode=700,
        owner=user, 
        group=group,
        via=self.via is defined ? self.via: null,
    )
    file = fs::File(
        host=host,
        mode=600,
        owner=user,
        requires=dir,
        group=group,
        content=std::template("ssh/authorized_keys", ssh_keys=self.ssh_keys),
        path="{{ home_dir }}/.ssh/authorized_keys",
        via=self.via is defined ? self.via: null,
    )
end

implement SSHUser using sshUser
