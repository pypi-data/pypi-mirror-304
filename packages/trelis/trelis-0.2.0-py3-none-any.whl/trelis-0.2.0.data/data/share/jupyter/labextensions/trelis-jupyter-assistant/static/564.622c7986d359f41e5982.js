"use strict";(self.webpackChunktrelis_jupyter_assistant=self.webpackChunktrelis_jupyter_assistant||[]).push([[564],{564:(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var a=n(909),o=n(614),r=n(480),i=n(215),s=n(256);class c extends s.Widget{constructor(e,t){super(),this.notebookTracker=e,this.addClass("jp-ChatbotWidget"),this.chatContainer=document.createElement("div"),this.inputArea=document.createElement("textarea"),this.rendermime=t,this.initializeWidget(),this.checkStoredApiKey()}initializeWidget(){this.node.style.display="flex",this.node.style.flexDirection="column",this.node.style.height="100%",this.apiKeyContainer=document.createElement("div"),this.apiKeyContainer.className="api-key-container";const e=document.createElement("label");e.textContent="API Key: ",this.apiKeyInput=document.createElement("input"),this.apiKeyInput.type="password",this.apiKeyInput.className="api-key-input";const t=document.createElement("div");t.className="save-key-container";const n=document.createElement("input");n.type="checkbox",n.id="save-key";const a=document.createElement("label");a.htmlFor="save-key",a.textContent="Remember API key";const o=document.createElement("button");o.textContent="Save",o.className="save-button",o.onclick=()=>this.saveApiKey(),t.appendChild(n),t.appendChild(a),t.appendChild(o),this.apiKeyContainer.appendChild(e),this.apiKeyContainer.appendChild(this.apiKeyInput),this.apiKeyContainer.appendChild(t);const r=document.createElement("div");r.className="chat-interface",this.chatContainer=document.createElement("div"),this.chatContainer.className="chat-container";const i=document.createElement("div");i.className="input-container",this.inputArea=document.createElement("textarea"),this.inputArea.rows=3,this.inputArea.className="input-area",this.inputArea.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.handleSend())}));const s=document.createElement("div");s.className="send-button-container";const c=document.createElement("div");c.style.display="flex",c.style.alignItems="center";const l=document.createElement("button");l.textContent="Send",l.className="send-button",l.onclick=()=>this.handleSend();const d=document.createElement("span");d.className="send-button-hint",d.textContent="(or press Enter)";const p=document.createElement("button");p.textContent="New Chat",p.className="new-chat-button",p.onclick=()=>this.startNewChat(),c.appendChild(l),c.appendChild(d),s.appendChild(c),s.appendChild(p),i.appendChild(this.inputArea),i.appendChild(s),r.appendChild(this.chatContainer),r.appendChild(i),this.node.appendChild(this.apiKeyContainer),this.node.appendChild(r)}startNewChat(){this.chatContainer.innerHTML="",this.inputArea.value=""}async addMessage(e,t){const n=document.createElement("div");if(n.className=`chat-message ${e}-message`,"assistant"===e){const e=await this.renderAssistantMessage(t);n.appendChild(e)}else{const e=await this.renderMarkdown(t);n.appendChild(e)}this.chatContainer.appendChild(n),this.chatContainer.scrollTop=this.chatContainer.scrollHeight}async validateApiKey(e){console.log("Attempting to validate API key...");try{const t="http://127.0.0.1:8000/api/v1/validate-key";console.log("Sending request to:",t);const n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({api_key:e})});return console.log("Validation response:",n.status),n.ok?!0===(await n.json()).valid:!1}catch(e){return console.error("Detailed error validating API key:",e),!1}}async handleSend(){const e=this.inputArea.value.trim();if(!e)return void alert("Please enter a message");const t=this.apiKeyInput.value.trim();if(!t)return alert("Please enter an API key first"),void(this.apiKeyContainer.style.display="block");try{const n=this.node.querySelector(".send-button");this.inputArea.disabled=!0,n.disabled=!0,n.textContent="Generating...",this.addMessage("user",e),this.inputArea.value="";const a=document.createElement("div");a.className="generating-message",a.textContent="Generating response...",this.chatContainer.appendChild(a),this.chatContainer.scrollTop=this.chatContainer.scrollHeight;const o=this.notebookTracker.currentWidget;if(!o||!o.model)return console.warn("No active notebook found"),void await this.addMessage("assistant","Please open a notebook to use this feature.");const r=o.model;try{const n=r.toJSON();if(!n||!n.cells)return console.warn("No cells found in notebook"),void await this.addMessage("assistant","Unable to read notebook cells.");const o=n.cells;console.log("Total cells found:",o.length),o.forEach(((e,t)=>{e.outputs&&(console.log(`Cell ${t} type:`,e.cell_type),console.log(`Cell ${t} outputs:`,JSON.stringify(e.outputs,null,2)))}));const i=o.map((e=>e.outputs&&0!==e.outputs.length?{...e,outputs:e.outputs.map((e=>{var t;if("error"===e.output_type)return{output_type:"error",content:{error_type:e.ename,error_message:e.evalue,traceback:e.traceback}};let n="";return"stream"===e.output_type?n=e.text||"":"execute_result"!==e.output_type&&"display_data"!==e.output_type||(n=(null===(t=e.data)||void 0===t?void 0:t["text/plain"])||JSON.stringify(e.data||{})),{output_type:e.output_type,content:n}})).filter(Boolean)}:e));console.log("Processed cells:",JSON.stringify(i,null,2)),this.setLoadingState(!0);try{const n=await fetch("http://127.0.0.1:8000/api/v1/chat",{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":t},body:JSON.stringify({message:e,notebook_cells:i})});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const o=await n.json();console.log("Raw assistant response:",o.response),this.chatContainer.removeChild(a),await this.addMessage("assistant",o.response)}catch(e){console.error("Error:",e),await this.addMessage("assistant","An error occurred while fetching the response.")}finally{this.setLoadingState(!1)}}catch(e){console.error("Error:",e),await this.addMessage("assistant","Sorry, there was an error processing your request. Please try again.")}}catch(e){console.error("Error:",e),await this.addMessage("assistant","Sorry, there was an error processing your request. Please try again.")}finally{this.inputArea.disabled=!1;const e=this.node.querySelector(".send-button");e.disabled=!1,e.textContent="Send"}}async checkStoredApiKey(){console.log("Checking stored API key...");const e=localStorage.getItem("trelis_api_key");e&&(console.log("Found stored key"),this.apiKeyInput.value=e,await this.validateApiKey(e)?this.apiKeyContainer.style.display="none":localStorage.removeItem("trelis_api_key"))}async saveApiKey(){console.log("Save API key triggered");const e=this.apiKeyInput.value.trim(),t=this.node.querySelector("#save-key");e?await this.validateApiKey(e)?((null==t?void 0:t.checked)&&localStorage.setItem("trelis_api_key",e),this.apiKeyContainer.style.display="none"):alert("Invalid API key. Please check and try again."):alert("Please enter an API key")}async renderAssistantMessage(e){const t=document.createElement("div");try{const n=e.replace(/(\d+\.|[*-])\s/g,"\n$1 ").replace(/```/g,"\n```").replace(/\*\*/g,"**"),a=await this.renderMarkdown(n);t.appendChild(a);const o=t.querySelectorAll("pre code"),r=this.parseCodeSuggestions(e);o.forEach((e=>{var t;const n=e.textContent||"",a=e.parentElement;if(!a)return;const o=document.createElement("div");o.className="code-container",null===(t=a.parentNode)||void 0===t||t.replaceChild(o,a),o.appendChild(a);const i=document.createElement("div");i.className="button-container";const s=r.find((([e,t])=>t.trim()===n.trim()));if(s){const[e,t]=s,a=this.createReplaceButton(e,n);i.appendChild(a)}const c=this.createCopyButton(n);i.appendChild(c),o.appendChild(i)}))}catch(n){console.error("Error rendering markdown:",n),t.textContent=e}return t}createReplaceButton(e,t){const n=document.createElement("button");return n.textContent=`Replace cell ${e}`,n.className="replace-button",n.onclick=()=>this.replaceCode(e,t),n}createCopyButton(e){const t=document.createElement("button");return t.innerHTML='<svg width="16" height="16" fill="currentColor" class="bi bi-files" viewBox="0 0 16 16">\n        <path d="M13 0H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM3 1h10a1 1 0 0 1 1 1v1H2V2a1 1 0 0 1 1-1zm10 14H3a1 1 0 0 1-1-1V4h10v10a1 1 0 0 1-1 1z"/>\n    </svg>',t.className="copy-button",t.onclick=()=>{navigator.clipboard.writeText(e).then((()=>{console.log("Code copied to clipboard")}))},t}async renderMarkdown(e){const t="text/markdown",n=new i.MimeModel({data:{[t]:e},metadata:{}}),a=this.rendermime.createRenderer(t);return await a.renderModel(n),a.node}parseCodeSuggestions(e){const t=/(?:```(?:python\s*)?|`)([^`]+)(?:```|`)/g,n=/(?:in|In) cell (?:\[?(\d+)\]?|(\w+))|Cell (\d+):/i,a=[];let o;for(;null!==(o=t.exec(e));){const t=o[1].trim(),r=e.substring(Math.max(0,o.index-100),o.index).match(n);if(r){const e=parseInt(r[1]||r[2]||r[3]||r[4]);isNaN(e)||a.push([e,t])}}return a}replaceCode(e,t){const n=this.notebookTracker.currentWidget;if(n){const a=n.content.widgets[e-1];a&&"code"===a.model.type&&a.model.sharedModel.setSource(t)}}setLoadingState(e){const t=this.node.querySelector(".input-area"),n=this.node.querySelector(".send-button");e?(t.disabled=!0,n.disabled=!0,n.textContent="Generating..."):(t.disabled=!1,n.disabled=!1,n.textContent="Send")}}var l=n(72),d=n.n(l),p=n(825),u=n.n(p),h=n(659),m=n.n(h),g=n(56),y=n.n(g),f=n(540),b=n.n(f),v=n(113),x=n.n(v),C=n(646),k={};k.styleTagTransform=x(),k.setAttributes=y(),k.insert=m().bind(null,"head"),k.domAPI=u(),k.insertStyleElement=b(),d()(C.A,k),C.A&&C.A.locals&&C.A.locals;const w={id:"trelis-jupyter-assistant:plugin",description:"A JupyterLab Code Assistant",autoStart:!0,requires:[r.INotebookTracker,i.IRenderMimeRegistry],optional:[o.ISettingRegistry,a.ILayoutRestorer],activate:(e,t,n,a,o)=>{console.log("JupyterLab extension trelis-jupyter-assistant is activated!");const r=new c(t,n);r.id="trelis-chatbot",r.title.label="Trelis",r.title.closable=!0,e.shell.add(r,"right",{rank:1e3}),o&&o.add(r,"trelis-chatbot"),a&&a.load(w.id).then((e=>{console.log("trelis-jupyter-assistant settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for trelis-jupyter-assistant.",e)}))}},S=w},475:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(601),o=n.n(a),r=n(314),i=n.n(r)()(o());i.push([e.id,"/*\n    See the JupyterLab Developer Guide for useful CSS Patterns:\n\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\n*/\n",""]);const s=i},646:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(601),o=n.n(a),r=n(314),i=n.n(r),s=n(475),c=i()(o());c.i(s.A),c.push([e.id,'#trelis-chatbot {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n}\n\n.jp-ChatbotWidget {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  padding: 10px;\n}\n\n.chat-interface {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.chat-container {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n}\n\n.chat-message {\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 8px;\n  position: relative; /* For the left border */\n  padding-left: 20px; /* Make room for the left border */\n}\n\n.user-message {\n  border-left: 4px solid #4CAF50; /* Green for user */\n  background-color: #f5f9f5;\n}\n\n.assistant-message {\n  border-left: 4px solid #0f579b; /* Blue for assistant */\n  background-color: #f8f9fa;\n}\n\n/* Remove the "You:" and "Trelis Assistant:" labels from the messages */\n.chat-message strong {\n  display: none;\n}\n\n/* Style for the generating message */\n.generating-message {\n  font-style: italic;\n  color: #666;\n  padding: 10px;\n  margin-bottom: 15px;\n  background-color: #f8f9fa;\n  border-left: 4px solid #0f579b;\n  padding-left: 20px;\n}\n\n.code-container {\n  display: flex;\n  flex-direction: column; /* Stack children vertically */\n  position: relative;\n  margin: 0.5rem 0;\n  padding: 0.25rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.code-container pre {\n  padding: 0.25rem;\n  margin: 0;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.button-container {\n  display: flex;\n  gap: 8px; /* Space between buttons */\n  align-items: center;\n  margin-top: 8px; /* Space between code and buttons */\n}\n\n.replace-button {\n  background-color: #0f579b;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.input-container {\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid #ccc;\n  padding-top: 10px;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.input-area {\n  width: 100%;\n  min-height: 60px;\n  margin-bottom: 10px;\n  resize: vertical;\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n.send-button-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px; /* Space between buttons */\n}\n\n/* Style for the send button and hint */\n.send-button {\n  background-color: #0f579b;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  cursor: pointer;\n  border-radius: 4px;\n  width: 100px;\n}\n\n.send-button-hint {\n  font-style: italic;\n  color: #666;\n  margin-left: 10px;\n}\n\n.copy-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n}\n\n.copy-button svg {\n  width: 16px; /* Adjust size as needed */\n  height: 16px; /* Adjust size as needed */\n  fill: #0f579b; /* Match the theme color */\n}\n\n/* Optional: Add hover effect */\n.copy-button:hover {\n  opacity: 0.7; /* Slightly fade on hover */\n}\n\n.api-key-container {\n  padding: 10px;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #ccc;\n}\n\n.api-key-input {\n  margin: 0 10px;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 200px;\n}\n\n.save-key-container {\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.save-button {\n  background-color: #0f579b;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.error-message {\n  background-color: #ffebee;\n  border-left: 4px solid #f44336;\n  padding: 10px;\n  margin: 10px 0;\n  font-family: monospace;\n  white-space: pre-wrap;\n}\n\n.send-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.input-area:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n/* Add styles for the button container */\n.action-buttons-container {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n/* Style for the New Chat button */\n.new-chat-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  cursor: pointer;\n  border-radius: 4px;\n  width: 100px;\n  align-self: flex-start; /* Align with the Send button */\n}\n\n.new-chat-button:hover {\n  background-color: #45a049;\n}\n',""]);const l=c},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);a&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},601:e=>{e.exports=function(e){return e[1]}},72:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],s=0;s<e.length;s++){var c=e[s],l=a.base?c[0]+a.base:c[0],d=r[l]||0,p="".concat(l," ").concat(d);r[l]=d+1;var u=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(h);else{var m=o(h,a);a.byIndex=s,t.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var s=n(r[i]);t[s].references--}for(var c=a(e,o),l=0;l<r.length;l++){var d=n(r[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=c}}},659:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}}]);