# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Xt=Object.defineProperty;var $t=(A,e)=>{for(var t in e)Xt(A,t,{get:e[t],enumerable:!0})};var Ar=new Map([["vtk","vtk"],["byu","byu"],["fsa","free-surfer-ascii"],["fsb","free-surfer-binary"],["obj","obj"],["off","off"],["stl","stl"],["swc","swc"],["iwm","wasm"],["iwm.cbor","wasm"],["iwm.cbor.zst","wasm-zstd"]]),J=Ar;var er=new Map([["vtk","vtk"],["obj","obj"],["off","off"],["iwm","wasm"],["iwm.cbor","wasm"],["iwm.cbor.zst","wasm-zstd"]]),H=er;var tr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},F=tr;var rr={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},K=rr;function ir(A,e){let t=null;switch(A){case F.UInt8:{t=new Uint8Array(e);break}case F.Int8:{t=new Int8Array(e);break}case F.UInt16:{t=new Uint16Array(e);break}case F.Int16:{t=new Int16Array(e);break}case F.UInt32:{t=new Uint32Array(e);break}case F.Int32:{t=new Int32Array(e);break}case F.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case F.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case K.Float32:{t=new Float32Array(e);break}case K.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var N=ir;function or(A){let e=A.slice((A.lastIndexOf(".")-1>>>0)+2);if(e.toLowerCase()==="gz"){let t=A.slice(0,-3).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="cbor"){let t=A.slice(0,-5).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zst"){let t=A.slice(0,-10).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zip"){let t=A.slice(0,-4).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}return e}var M=or;var nr={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},u=nr;var He=Symbol("Comlink.proxy"),ar=Symbol("Comlink.endpoint"),TA=Symbol("Comlink.releaseProxy"),MA=Symbol("Comlink.finalizer"),BA=Symbol("Comlink.thrown"),Ye=A=>typeof A=="object"&&A!==null||typeof A=="function",sr={canHandle:A=>Ye(A)&&A[He],serialize(A){let{port1:e,port2:t}=new MessageChannel;return Ke(A,e),[t,[t]]},deserialize(A){return A.start(),GA(A)}},Ir={canHandle:A=>Ye(A)&&BA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},qe=new Map([["proxy",sr],["throw",Ir]]);function lr(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function Ke(A,e=globalThis,t=["*"]){e.addEventListener("message",function i(o){if(!o||!o.data)return;if(!lr(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:r,type:a,path:g}=Object.assign({path:[]},o.data),c=(o.data.argumentList||[]).map(Y),p;try{let n=g.slice(0,-1).reduce((B,I)=>B[I],A),s=g.reduce((B,I)=>B[I],A);switch(a){case"GET":p=s;break;case"SET":n[g.slice(-1)[0]]=Y(o.data.value),p=!0;break;case"APPLY":p=s.apply(n,c);break;case"CONSTRUCT":{let B=new s(...c);p=Br(B)}break;case"ENDPOINT":{let{port1:B,port2:I}=new MessageChannel;Ke(A,I),p=LA(B,[B])}break;case"RELEASE":p=void 0;break;default:return}}catch(n){p={value:n,[BA]:0}}Promise.resolve(p).catch(n=>({value:n,[BA]:0})).then(n=>{let[s,B]=mA(n);e.postMessage(Object.assign(Object.assign({},s),{id:r}),B),a==="RELEASE"&&(e.removeEventListener("message",i),je(e),MA in A&&typeof A[MA]=="function"&&A[MA]())}).catch(n=>{let[s,B]=mA({value:new TypeError("Unserializable return value"),[BA]:0});e.postMessage(Object.assign(Object.assign({},s),{id:r}),B)})}),e.start&&e.start()}function gr(A){return A.constructor.name==="MessagePort"}function je(A){gr(A)&&A.close()}function GA(A,e){return xA(A,[],e)}function fA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ve(A){return j(A,{type:"RELEASE"}).then(()=>{je(A)})}var cA=new WeakMap,CA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(cA.get(A)||0)-1;cA.set(A,e),e===0&&ve(A)});function pr(A,e){let t=(cA.get(e)||0)+1;cA.set(e,t),CA&&CA.register(A,e,A)}function ur(A){CA&&CA.unregister(A)}function xA(A,e=[],t=function(){}){let i=!1,o=new Proxy(t,{get(r,a){if(fA(i),a===TA)return()=>{ur(o),ve(A),i=!0};if(a==="then"){if(e.length===0)return{then:()=>o};let g=j(A,{type:"GET",path:e.map(c=>c.toString())}).then(Y);return g.then.bind(g)}return xA(A,[...e,a])},set(r,a,g){fA(i);let[c,p]=mA(g);return j(A,{type:"SET",path:[...e,a].map(n=>n.toString()),value:c},p).then(Y)},apply(r,a,g){fA(i);let c=e[e.length-1];if(c===ar)return j(A,{type:"ENDPOINT"}).then(Y);if(c==="bind")return xA(A,e.slice(0,-1));let[p,n]=Je(g);return j(A,{type:"APPLY",path:e.map(s=>s.toString()),argumentList:p},n).then(Y)},construct(r,a){fA(i);let[g,c]=Je(a);return j(A,{type:"CONSTRUCT",path:e.map(p=>p.toString()),argumentList:g},c).then(Y)}});return pr(o,A),o}function fr(A){return Array.prototype.concat.apply([],A)}function Je(A){let e=A.map(mA);return[e.map(t=>t[0]),fr(e.map(t=>t[1]))]}var _e=new WeakMap;function LA(A,e){return _e.set(A,e),A}function Br(A){return Object.assign(A,{[He]:!0})}function mA(A){for(let[e,t]of qe)if(t.canHandle(A)){let[i,o]=t.serialize(A);return[{type:"HANDLER",name:e,value:i},o]}return[{type:"RAW",value:A},_e.get(A)||[]]}function Y(A){switch(A.type){case"HANDLER":return qe.get(A.name).deserialize(A.value);case"RAW":return A.value}}function j(A,e,t){return new Promise(i=>{let o=cr();A.addEventListener("message",function r(a){!a.data||!a.data.id||a.data.id!==o||(A.removeEventListener("message",r),i(a.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:o},e),t)})}function cr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function iA(A,e){return function(){return A.apply(e,arguments)}}var{toString:Cr}=Object.prototype,{getPrototypeOf:YA}=Object,dA=(A=>e=>{let t=Cr.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),O=A=>(A=A.toLowerCase(),e=>dA(e)===A),QA=A=>e=>typeof e===A,{isArray:v}=Array,oA=QA("undefined");function mr(A){return A!==null&&!oA(A)&&A.constructor!==null&&!oA(A.constructor)&&P(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var Xe=O("ArrayBuffer");function Er(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&Xe(A.buffer),e}var dr=QA("string"),P=QA("function"),$e=QA("number"),yA=A=>A!==null&&typeof A=="object",Qr=A=>A===!0||A===!1,EA=A=>{if(dA(A)!=="object")return!1;let e=YA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},yr=O("Date"),hr=O("File"),wr=O("Blob"),Dr=O("FileList"),Sr=A=>yA(A)&&P(A.pipe),br=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||P(A.append)&&((e=dA(A))==="formdata"||e==="object"&&P(A.toString)&&A.toString()==="[object FormData]"))},kr=O("URLSearchParams"),Rr=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function nA(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let i,o;if(typeof A!="object"&&(A=[A]),v(A))for(i=0,o=A.length;i<o;i++)e.call(null,A[i],i,A);else{let r=t?Object.getOwnPropertyNames(A):Object.keys(A),a=r.length,g;for(i=0;i<a;i++)g=r[i],e.call(null,A[g],g,A)}}function At(A,e){e=e.toLowerCase();let t=Object.keys(A),i=t.length,o;for(;i-- >0;)if(o=t[i],e===o.toLowerCase())return o;return null}var et=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,tt=A=>!oA(A)&&A!==et;function HA(){let{caseless:A}=tt(this)&&this||{},e={},t=(i,o)=>{let r=A&&At(e,o)||o;EA(e[r])&&EA(i)?e[r]=HA(e[r],i):EA(i)?e[r]=HA({},i):v(i)?e[r]=i.slice():e[r]=i};for(let i=0,o=arguments.length;i<o;i++)arguments[i]&&nA(arguments[i],t);return e}var Fr=(A,e,t,{allOwnKeys:i}={})=>(nA(e,(o,r)=>{t&&P(o)?A[r]=iA(o,t):A[r]=o},{allOwnKeys:i}),A),Pr=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Wr=(A,e,t,i)=>{A.prototype=Object.create(e.prototype,i),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Ur=(A,e,t,i)=>{let o,r,a,g={};if(e=e||{},A==null)return e;do{for(o=Object.getOwnPropertyNames(A),r=o.length;r-- >0;)a=o[r],(!i||i(a,A,e))&&!g[a]&&(e[a]=A[a],g[a]=!0);A=t!==!1&&YA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Nr=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let i=A.indexOf(e,t);return i!==-1&&i===t},Or=A=>{if(!A)return null;if(v(A))return A;let e=A.length;if(!$e(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Mr=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&YA(Uint8Array)),xr=(A,e)=>{let i=(A&&A[Symbol.iterator]).call(A),o;for(;(o=i.next())&&!o.done;){let r=o.value;e.call(A,r[0],r[1])}},Tr=(A,e)=>{let t,i=[];for(;(t=A.exec(e))!==null;)i.push(t);return i},Gr=O("HTMLFormElement"),Lr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,i,o){return i.toUpperCase()+o}),ze=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),Jr=O("RegExp"),rt=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),i={};nA(t,(o,r)=>{let a;(a=e(o,r,A))!==!1&&(i[r]=a||o)}),Object.defineProperties(A,i)},Hr=A=>{rt(A,(e,t)=>{if(P(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let i=A[t];if(P(i)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},Yr=(A,e)=>{let t={},i=o=>{o.forEach(r=>{t[r]=!0})};return v(A)?i(A):i(String(A).split(e)),t},qr=()=>{},Kr=(A,e)=>(A=+A,Number.isFinite(A)?A:e),JA="abcdefghijklmnopqrstuvwxyz",Ze="0123456789",it={DIGIT:Ze,ALPHA:JA,ALPHA_DIGIT:JA+JA.toUpperCase()+Ze},jr=(A=16,e=it.ALPHA_DIGIT)=>{let t="",{length:i}=e;for(;A--;)t+=e[Math.random()*i|0];return t};function vr(A){return!!(A&&P(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var _r=A=>{let e=new Array(10),t=(i,o)=>{if(yA(i)){if(e.indexOf(i)>=0)return;if(!("toJSON"in i)){e[o]=i;let r=v(i)?[]:{};return nA(i,(a,g)=>{let c=t(a,o+1);!oA(c)&&(r[g]=c)}),e[o]=void 0,r}}return i};return t(A,0)},Vr=O("AsyncFunction"),zr=A=>A&&(yA(A)||P(A))&&P(A.then)&&P(A.catch),f={isArray:v,isArrayBuffer:Xe,isBuffer:mr,isFormData:br,isArrayBufferView:Er,isString:dr,isNumber:$e,isBoolean:Qr,isObject:yA,isPlainObject:EA,isUndefined:oA,isDate:yr,isFile:hr,isBlob:wr,isRegExp:Jr,isFunction:P,isStream:Sr,isURLSearchParams:kr,isTypedArray:Mr,isFileList:Dr,forEach:nA,merge:HA,extend:Fr,trim:Rr,stripBOM:Pr,inherits:Wr,toFlatObject:Ur,kindOf:dA,kindOfTest:O,endsWith:Nr,toArray:Or,forEachEntry:xr,matchAll:Tr,isHTMLForm:Gr,hasOwnProperty:ze,hasOwnProp:ze,reduceDescriptors:rt,freezeMethods:Hr,toObjectSet:Yr,toCamelCase:Lr,noop:qr,toFiniteNumber:Kr,findKey:At,global:et,isContextDefined:tt,ALPHABET:it,generateString:jr,isSpecCompliantForm:vr,toJSONObject:_r,isAsyncFn:Vr,isThenable:zr};function _(A,e,t,i,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),i&&(this.request=i),o&&(this.response=o)}f.inherits(_,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:f.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var ot=_.prototype,nt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{nt[A]={value:A}});Object.defineProperties(_,nt);Object.defineProperty(ot,"isAxiosError",{value:!0});_.from=(A,e,t,i,o,r)=>{let a=Object.create(ot);return f.toFlatObject(A,a,function(c){return c!==Error.prototype},g=>g!=="isAxiosError"),_.call(a,A.message,e,t,i,o),a.cause=A,a.name=A.name,r&&Object.assign(a,r),a};var h=_;var hA=null;function qA(A){return f.isPlainObject(A)||f.isArray(A)}function st(A){return f.endsWith(A,"[]")?A.slice(0,-2):A}function at(A,e,t){return A?A.concat(e).map(function(o,r){return o=st(o),!t&&r?"["+o+"]":o}).join(t?".":""):e}function Zr(A){return f.isArray(A)&&!A.some(qA)}var Xr=f.toFlatObject(f,{},null,function(e){return/^is[A-Z]/.test(e)});function $r(A,e,t){if(!f.isObject(A))throw new TypeError("target must be an object");e=e||new(hA||FormData),t=f.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(C,m){return!f.isUndefined(m[C])});let i=t.metaTokens,o=t.visitor||n,r=t.dots,a=t.indexes,c=(t.Blob||typeof Blob<"u"&&Blob)&&f.isSpecCompliantForm(e);if(!f.isFunction(o))throw new TypeError("visitor must be a function");function p(l){if(l===null)return"";if(f.isDate(l))return l.toISOString();if(!c&&f.isBlob(l))throw new h("Blob is not supported. Use a Buffer instead.");return f.isArrayBuffer(l)||f.isTypedArray(l)?c&&typeof Blob=="function"?new Blob([l]):Buffer.from(l):l}function n(l,C,m){let w=l;if(l&&!m&&typeof l=="object"){if(f.endsWith(C,"{}"))C=i?C:C.slice(0,-2),l=JSON.stringify(l);else if(f.isArray(l)&&Zr(l)||(f.isFileList(l)||f.endsWith(C,"[]"))&&(w=f.toArray(l)))return C=st(C),w.forEach(function(U,Zt){!(f.isUndefined(U)||U===null)&&e.append(a===!0?at([C],Zt,r):a===null?C:C+"[]",p(U))}),!1}return qA(l)?!0:(e.append(at(m,C,r),p(l)),!1)}let s=[],B=Object.assign(Xr,{defaultVisitor:n,convertValue:p,isVisitable:qA});function I(l,C){if(!f.isUndefined(l)){if(s.indexOf(l)!==-1)throw Error("Circular reference detected in "+C.join("."));s.push(l),f.forEach(l,function(w,W){(!(f.isUndefined(w)||w===null)&&o.call(e,w,f.isString(W)?W.trim():W,C,B))===!0&&I(w,C?C.concat(W):[W])}),s.pop()}}if(!f.isObject(A))throw new TypeError("data must be an object");return I(A),e}var T=$r;function It(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(i){return e[i]})}function lt(A,e){this._pairs=[],A&&T(A,this,e)}var gt=lt.prototype;gt.append=function(e,t){this._pairs.push([e,t])};gt.toString=function(e){let t=e?function(i){return e.call(this,i,It)}:It;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var wA=lt;function Ai(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function aA(A,e,t){if(!e)return A;let i=t&&t.encode||Ai,o=t&&t.serialize,r;if(o?r=o(e,t):r=f.isURLSearchParams(e)?e.toString():new wA(e,t).toString(i),r){let a=A.indexOf("#");a!==-1&&(A=A.slice(0,a)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var KA=class{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){f.forEach(this.handlers,function(i){i!==null&&e(i)})}},jA=KA;var DA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var pt=typeof URLSearchParams<"u"?URLSearchParams:wA;var ut=typeof FormData<"u"?FormData:null;var ft=typeof Blob<"u"?Blob:null;var Bt={isBrowser:!0,classes:{URLSearchParams:pt,FormData:ut,Blob:ft},protocols:["http","https","file","blob","url","data"]};var vA={};$t(vA,{hasBrowserEnv:()=>ct,hasStandardBrowserEnv:()=>ei,hasStandardBrowserWebWorkerEnv:()=>ti});var ct=typeof window<"u"&&typeof document<"u",ei=(A=>ct&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),ti=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var b={...vA,...Bt};function _A(A,e){return T(A,new b.classes.URLSearchParams,Object.assign({visitor:function(t,i,o,r){return b.isNode&&f.isBuffer(t)?(this.append(i,t.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},e))}function ri(A){return f.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function ii(A){let e={},t=Object.keys(A),i,o=t.length,r;for(i=0;i<o;i++)r=t[i],e[r]=A[r];return e}function oi(A){function e(t,i,o,r){let a=t[r++];if(a==="__proto__")return!0;let g=Number.isFinite(+a),c=r>=t.length;return a=!a&&f.isArray(o)?o.length:a,c?(f.hasOwnProp(o,a)?o[a]=[o[a],i]:o[a]=i,!g):((!o[a]||!f.isObject(o[a]))&&(o[a]=[]),e(t,i,o[a],r)&&f.isArray(o[a])&&(o[a]=ii(o[a])),!g)}if(f.isFormData(A)&&f.isFunction(A.entries)){let t={};return f.forEachEntry(A,(i,o)=>{e(ri(i),o,t,0)}),t}return null}var SA=oi;function ni(A,e,t){if(f.isString(A))try{return(e||JSON.parse)(A),f.trim(A)}catch(i){if(i.name!=="SyntaxError")throw i}return(t||JSON.stringify)(A)}var VA={transitional:DA,adapter:["xhr","http"],transformRequest:[function(e,t){let i=t.getContentType()||"",o=i.indexOf("application/json")>-1,r=f.isObject(e);if(r&&f.isHTMLForm(e)&&(e=new FormData(e)),f.isFormData(e))return o?JSON.stringify(SA(e)):e;if(f.isArrayBuffer(e)||f.isBuffer(e)||f.isStream(e)||f.isFile(e)||f.isBlob(e))return e;if(f.isArrayBufferView(e))return e.buffer;if(f.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let g;if(r){if(i.indexOf("application/x-www-form-urlencoded")>-1)return _A(e,this.formSerializer).toString();if((g=f.isFileList(e))||i.indexOf("multipart/form-data")>-1){let c=this.env&&this.env.FormData;return T(g?{"files[]":e}:e,c&&new c,this.formSerializer)}}return r||o?(t.setContentType("application/json",!1),ni(e)):e}],transformResponse:[function(e){let t=this.transitional||VA.transitional,i=t&&t.forcedJSONParsing,o=this.responseType==="json";if(e&&f.isString(e)&&(i&&!this.responseType||o)){let a=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(e)}catch(g){if(a)throw g.name==="SyntaxError"?h.from(g,h.ERR_BAD_RESPONSE,this,null,this.response):g}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:b.classes.FormData,Blob:b.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};f.forEach(["delete","get","head","post","put","patch"],A=>{VA.headers[A]={}});var V=VA;var ai=f.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ct=A=>{let e={},t,i,o;return A&&A.split(`
`).forEach(function(a){o=a.indexOf(":"),t=a.substring(0,o).trim().toLowerCase(),i=a.substring(o+1).trim(),!(!t||e[t]&&ai[t])&&(t==="set-cookie"?e[t]?e[t].push(i):e[t]=[i]:e[t]=e[t]?e[t]+", "+i:i)}),e};var mt=Symbol("internals");function sA(A){return A&&String(A).trim().toLowerCase()}function bA(A){return A===!1||A==null?A:f.isArray(A)?A.map(bA):String(A)}function si(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,i;for(;i=t.exec(A);)e[i[1]]=i[2];return e}var Ii=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function zA(A,e,t,i,o){if(f.isFunction(i))return i.call(this,e,t);if(o&&(e=t),!!f.isString(e)){if(f.isString(i))return e.indexOf(i)!==-1;if(f.isRegExp(i))return i.test(e)}}function li(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,i)=>t.toUpperCase()+i)}function gi(A,e){let t=f.toCamelCase(" "+e);["get","set","has"].forEach(i=>{Object.defineProperty(A,i+t,{value:function(o,r,a){return this[i].call(this,e,o,r,a)},configurable:!0})})}var z=class{constructor(e){e&&this.set(e)}set(e,t,i){let o=this;function r(g,c,p){let n=sA(c);if(!n)throw new Error("header name must be a non-empty string");let s=f.findKey(o,n);(!s||o[s]===void 0||p===!0||p===void 0&&o[s]!==!1)&&(o[s||c]=bA(g))}let a=(g,c)=>f.forEach(g,(p,n)=>r(p,n,c));return f.isPlainObject(e)||e instanceof this.constructor?a(e,t):f.isString(e)&&(e=e.trim())&&!Ii(e)?a(Ct(e),t):e!=null&&r(t,e,i),this}get(e,t){if(e=sA(e),e){let i=f.findKey(this,e);if(i){let o=this[i];if(!t)return o;if(t===!0)return si(o);if(f.isFunction(t))return t.call(this,o,i);if(f.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=sA(e),e){let i=f.findKey(this,e);return!!(i&&this[i]!==void 0&&(!t||zA(this,this[i],i,t)))}return!1}delete(e,t){let i=this,o=!1;function r(a){if(a=sA(a),a){let g=f.findKey(i,a);g&&(!t||zA(i,i[g],g,t))&&(delete i[g],o=!0)}}return f.isArray(e)?e.forEach(r):r(e),o}clear(e){let t=Object.keys(this),i=t.length,o=!1;for(;i--;){let r=t[i];(!e||zA(this,this[r],r,e,!0))&&(delete this[r],o=!0)}return o}normalize(e){let t=this,i={};return f.forEach(this,(o,r)=>{let a=f.findKey(i,r);if(a){t[a]=bA(o),delete t[r];return}let g=e?li(r):String(r).trim();g!==r&&delete t[r],t[g]=bA(o),i[g]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return f.forEach(this,(i,o)=>{i!=null&&i!==!1&&(t[o]=e&&f.isArray(i)?i.join(", "):i)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let i=new this(e);return t.forEach(o=>i.set(o)),i}static accessor(e){let i=(this[mt]=this[mt]={accessors:{}}).accessors,o=this.prototype;function r(a){let g=sA(a);i[g]||(gi(o,a),i[g]=!0)}return f.isArray(e)?e.forEach(r):r(e),this}};z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);f.reduceDescriptors(z.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(i){this[t]=i}}});f.freezeMethods(z);var k=z;function IA(A,e){let t=this||V,i=e||t,o=k.from(i.headers),r=i.data;return f.forEach(A,function(g){r=g.call(t,r,o.normalize(),e?e.status:void 0)}),o.normalize(),r}function lA(A){return!!(A&&A.__CANCEL__)}function Et(A,e,t){h.call(this,A??"canceled",h.ERR_CANCELED,e,t),this.name="CanceledError"}f.inherits(Et,h,{__CANCEL__:!0});var G=Et;function ZA(A,e,t){let i=t.config.validateStatus;!t.status||!i||i(t.status)?A(t):e(new h("Request failed with status code "+t.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var dt=b.hasStandardBrowserEnv?{write(A,e,t,i,o,r){let a=[A+"="+encodeURIComponent(e)];f.isNumber(t)&&a.push("expires="+new Date(t).toGMTString()),f.isString(i)&&a.push("path="+i),f.isString(o)&&a.push("domain="+o),r===!0&&a.push("secure"),document.cookie=a.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function XA(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function $A(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function gA(A,e){return A&&!XA(e)?$A(A,e):e}var Qt=b.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),i;function o(r){let a=r;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return i=o(window.location.href),function(a){let g=f.isString(a)?o(a):a;return g.protocol===i.protocol&&g.host===i.host}}():function(){return function(){return!0}}();function Ae(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function pi(A,e){A=A||10;let t=new Array(A),i=new Array(A),o=0,r=0,a;return e=e!==void 0?e:1e3,function(c){let p=Date.now(),n=i[r];a||(a=p),t[o]=c,i[o]=p;let s=r,B=0;for(;s!==o;)B+=t[s++],s=s%A;if(o=(o+1)%A,o===r&&(r=(r+1)%A),p-a<e)return;let I=n&&p-n;return I?Math.round(B*1e3/I):void 0}}var yt=pi;function ht(A,e){let t=0,i=yt(50,250);return o=>{let r=o.loaded,a=o.lengthComputable?o.total:void 0,g=r-t,c=i(g),p=r<=a;t=r;let n={loaded:r,total:a,progress:a?r/a:void 0,bytes:g,rate:c||void 0,estimated:c&&a&&p?(a-r)/c:void 0,event:o};n[e?"download":"upload"]=!0,A(n)}}var ui=typeof XMLHttpRequest<"u",wt=ui&&function(A){return new Promise(function(t,i){let o=A.data,r=k.from(A.headers).normalize(),{responseType:a,withXSRFToken:g}=A,c;function p(){A.cancelToken&&A.cancelToken.unsubscribe(c),A.signal&&A.signal.removeEventListener("abort",c)}let n;if(f.isFormData(o)){if(b.hasStandardBrowserEnv||b.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((n=r.getContentType())!==!1){let[C,...m]=n?n.split(";").map(w=>w.trim()).filter(Boolean):[];r.setContentType([C||"multipart/form-data",...m].join("; "))}}let s=new XMLHttpRequest;if(A.auth){let C=A.auth.username||"",m=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(C+":"+m))}let B=gA(A.baseURL,A.url);s.open(A.method.toUpperCase(),aA(B,A.params,A.paramsSerializer),!0),s.timeout=A.timeout;function I(){if(!s)return;let C=k.from("getAllResponseHeaders"in s&&s.getAllResponseHeaders()),w={data:!a||a==="text"||a==="json"?s.responseText:s.response,status:s.status,statusText:s.statusText,headers:C,config:A,request:s};ZA(function(U){t(U),p()},function(U){i(U),p()},w),s=null}if("onloadend"in s?s.onloadend=I:s.onreadystatechange=function(){!s||s.readyState!==4||s.status===0&&!(s.responseURL&&s.responseURL.indexOf("file:")===0)||setTimeout(I)},s.onabort=function(){s&&(i(new h("Request aborted",h.ECONNABORTED,A,s)),s=null)},s.onerror=function(){i(new h("Network Error",h.ERR_NETWORK,A,s)),s=null},s.ontimeout=function(){let m=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",w=A.transitional||DA;A.timeoutErrorMessage&&(m=A.timeoutErrorMessage),i(new h(m,w.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,A,s)),s=null},b.hasStandardBrowserEnv&&(g&&f.isFunction(g)&&(g=g(A)),g||g!==!1&&Qt(B))){let C=A.xsrfHeaderName&&A.xsrfCookieName&&dt.read(A.xsrfCookieName);C&&r.set(A.xsrfHeaderName,C)}o===void 0&&r.setContentType(null),"setRequestHeader"in s&&f.forEach(r.toJSON(),function(m,w){s.setRequestHeader(w,m)}),f.isUndefined(A.withCredentials)||(s.withCredentials=!!A.withCredentials),a&&a!=="json"&&(s.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&s.addEventListener("progress",ht(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&s.upload&&s.upload.addEventListener("progress",ht(A.onUploadProgress)),(A.cancelToken||A.signal)&&(c=C=>{s&&(i(!C||C.type?new G(null,A,s):C),s.abort(),s=null)},A.cancelToken&&A.cancelToken.subscribe(c),A.signal&&(A.signal.aborted?c():A.signal.addEventListener("abort",c)));let l=Ae(B);if(l&&b.protocols.indexOf(l)===-1){i(new h("Unsupported protocol "+l+":",h.ERR_BAD_REQUEST,A));return}s.send(o||null)})};var ee={http:hA,xhr:wt};f.forEach(ee,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Dt=A=>`- ${A}`,fi=A=>f.isFunction(A)||A===null||A===!1,kA={getAdapter:A=>{A=f.isArray(A)?A:[A];let{length:e}=A,t,i,o={};for(let r=0;r<e;r++){t=A[r];let a;if(i=t,!fi(t)&&(i=ee[(a=String(t)).toLowerCase()],i===void 0))throw new h(`Unknown adapter '${a}'`);if(i)break;o[a||"#"+r]=i}if(!i){let r=Object.entries(o).map(([g,c])=>`adapter ${g} `+(c===!1?"is not supported by the environment":"is not available in the build")),a=e?r.length>1?`since :
`+r.map(Dt).join(`
`):" "+Dt(r[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+a,"ERR_NOT_SUPPORT")}return i},adapters:ee};function te(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new G(null,A)}function RA(A){return te(A),A.headers=k.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),kA.getAdapter(A.adapter||V.adapter)(A).then(function(i){return te(A),i.data=IA.call(A,A.transformResponse,i),i.headers=k.from(i.headers),i},function(i){return lA(i)||(te(A),i&&i.response&&(i.response.data=IA.call(A,A.transformResponse,i.response),i.response.headers=k.from(i.response.headers))),Promise.reject(i)})}var St=A=>A instanceof k?{...A}:A;function x(A,e){e=e||{};let t={};function i(p,n,s){return f.isPlainObject(p)&&f.isPlainObject(n)?f.merge.call({caseless:s},p,n):f.isPlainObject(n)?f.merge({},n):f.isArray(n)?n.slice():n}function o(p,n,s){if(f.isUndefined(n)){if(!f.isUndefined(p))return i(void 0,p,s)}else return i(p,n,s)}function r(p,n){if(!f.isUndefined(n))return i(void 0,n)}function a(p,n){if(f.isUndefined(n)){if(!f.isUndefined(p))return i(void 0,p)}else return i(void 0,n)}function g(p,n,s){if(s in e)return i(p,n);if(s in A)return i(void 0,p)}let c={url:r,method:r,data:r,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:g,headers:(p,n)=>o(St(p),St(n),!0)};return f.forEach(Object.keys(Object.assign({},A,e)),function(n){let s=c[n]||o,B=s(A[n],e[n],n);f.isUndefined(B)&&s!==g||(t[n]=B)}),t}var FA="1.6.8";var re={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{re[A]=function(i){return typeof i===A||"a"+(e<1?"n ":" ")+A}});var bt={};re.transitional=function(e,t,i){function o(r,a){return"[Axios v"+FA+"] Transitional option '"+r+"'"+a+(i?". "+i:"")}return(r,a,g)=>{if(e===!1)throw new h(o(a," has been removed"+(t?" in "+t:"")),h.ERR_DEPRECATED);return t&&!bt[a]&&(bt[a]=!0,console.warn(o(a," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(r,a,g):!0}};function Bi(A,e,t){if(typeof A!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let i=Object.keys(A),o=i.length;for(;o-- >0;){let r=i[o],a=e[r];if(a){let g=A[r],c=g===void 0||a(g,r,A);if(c!==!0)throw new h("option "+r+" must be "+c,h.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new h("Unknown option "+r,h.ERR_BAD_OPTION)}}var PA={assertOptions:Bi,validators:re};var L=PA.validators,Z=class{constructor(e){this.defaults=e,this.interceptors={request:new jA,response:new jA}}async request(e,t){try{return await this._request(e,t)}catch(i){if(i instanceof Error){let o;Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error;let r=o.stack?o.stack.replace(/^.+\n/,""):"";i.stack?r&&!String(i.stack).endsWith(r.replace(/^.+\n.+\n/,""))&&(i.stack+=`
`+r):i.stack=r}throw i}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=x(this.defaults,t);let{transitional:i,paramsSerializer:o,headers:r}=t;i!==void 0&&PA.assertOptions(i,{silentJSONParsing:L.transitional(L.boolean),forcedJSONParsing:L.transitional(L.boolean),clarifyTimeoutError:L.transitional(L.boolean)},!1),o!=null&&(f.isFunction(o)?t.paramsSerializer={serialize:o}:PA.assertOptions(o,{encode:L.function,serialize:L.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let a=r&&f.merge(r.common,r[t.method]);r&&f.forEach(["delete","get","head","post","put","patch","common"],l=>{delete r[l]}),t.headers=k.concat(a,r);let g=[],c=!0;this.interceptors.request.forEach(function(C){typeof C.runWhen=="function"&&C.runWhen(t)===!1||(c=c&&C.synchronous,g.unshift(C.fulfilled,C.rejected))});let p=[];this.interceptors.response.forEach(function(C){p.push(C.fulfilled,C.rejected)});let n,s=0,B;if(!c){let l=[RA.bind(this),void 0];for(l.unshift.apply(l,g),l.push.apply(l,p),B=l.length,n=Promise.resolve(t);s<B;)n=n.then(l[s++],l[s++]);return n}B=g.length;let I=t;for(s=0;s<B;){let l=g[s++],C=g[s++];try{I=l(I)}catch(m){C.call(this,m);break}}try{n=RA.call(this,I)}catch(l){return Promise.reject(l)}for(s=0,B=p.length;s<B;)n=n.then(p[s++],p[s++]);return n}getUri(e){e=x(this.defaults,e);let t=gA(e.baseURL,e.url);return aA(t,e.params,e.paramsSerializer)}};f.forEach(["delete","get","head","options"],function(e){Z.prototype[e]=function(t,i){return this.request(x(i||{},{method:e,url:t,data:(i||{}).data}))}});f.forEach(["post","put","patch"],function(e){function t(i){return function(r,a,g){return this.request(x(g||{},{method:e,headers:i?{"Content-Type":"multipart/form-data"}:{},url:r,data:a}))}}Z.prototype[e]=t(),Z.prototype[e+"Form"]=t(!0)});var pA=Z;var ie=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(r){t=r});let i=this;this.promise.then(o=>{if(!i._listeners)return;let r=i._listeners.length;for(;r-- >0;)i._listeners[r](o);i._listeners=null}),this.promise.then=o=>{let r,a=new Promise(g=>{i.subscribe(g),r=g}).then(o);return a.cancel=function(){i.unsubscribe(r)},a},e(function(r,a,g){i.reason||(i.reason=new G(r,a,g),t(i.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(o){e=o}),cancel:e}}},kt=ie;function oe(A){return function(t){return A.apply(null,t)}}function ne(A){return f.isObject(A)&&A.isAxiosError===!0}var ae={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(ae).forEach(([A,e])=>{ae[e]=A});var Rt=ae;function Ft(A){let e=new pA(A),t=iA(pA.prototype.request,e);return f.extend(t,pA.prototype,e,{allOwnKeys:!0}),f.extend(t,e,null,{allOwnKeys:!0}),t.create=function(o){return Ft(x(A,o))},t}var D=Ft(V);D.Axios=pA;D.CanceledError=G;D.CancelToken=kt;D.isCancel=lA;D.VERSION=FA;D.toFormData=T;D.AxiosError=h;D.Cancel=D.CanceledError;D.all=function(e){return Promise.all(e)};D.spread=oe;D.isAxiosError=ne;D.mergeConfig=x;D.AxiosHeaders=k;D.formToJSON=A=>SA(f.isHTMLForm(A)?new FormData(A):A);D.getAdapter=kA.getAdapter;D.HttpStatusCode=Rt;D.default=D;var X=D;var{Axios:hs,AxiosError:ws,CanceledError:Ds,isCancel:Ss,CancelToken:bs,VERSION:ks,all:Rs,Cancel:Fs,isAxiosError:Ps,spread:Ws,toFormData:Us,AxiosHeaders:Ns,HttpStatusCode:Os,formToJSON:Ms,getAdapter:xs,mergeConfig:Ts}=X;async function ci(A,e){let t=A,i=null;if(t==null)i=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let o=await X.get(t,{responseType:"blob",params:e}),r=URL.createObjectURL(o.data);i=new Worker(r,{type:"module"})}else i=new Worker(t,{type:"module"});return i}var uA=ci;function Pt(A){let e=GA(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[TA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function Ci(A,e,t){let i;if(A!=null){let r=A;return r.workerProxy!==void 0?(i=r.workerProxy,{workerProxy:i,worker:r}):Pt(A)}let o=await uA(e,t);return Pt(o)}var Wt=Ci;async function mi(A,e,t){let i="unknown";typeof A!="string"?i=A.href:A.startsWith("http")?i=A:i=typeof e<"u"?`${e}/${A}`:A,i.endsWith(".js")&&(i=i.substring(0,i.length-3)),i.endsWith(".wasm")&&(i=i.substring(0,i.length-5));let o=`${i}.wasm`,a=(await X.get(o,{responseType:"arraybuffer",params:t})).data;return(await import(`${i}.js`)).default({wasmBinary:a})}var Ut=mi;var Nt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var xt=typeof globalThis.SharedArrayBuffer=="function",Ot=new TextEncoder,Mt=new TextDecoder("utf-8");function Ei(A,e){let t={flags:"r",encoding:"binary"},i=A.fs_open(e,t.flags),r=A.fs_stat(e).size,a=null;xt?a=new SharedArrayBuffer(r):a=new ArrayBuffer(r);let g=new Uint8Array(a);return A.fs_read(i,g,0,r,0),A.fs_close(i),g}function Tt(A,e,t){let i=null;xt?i=new SharedArrayBuffer(t):i=new ArrayBuffer(t);let o=new Uint8Array(i),r=new Uint8Array(A.HEAPU8.buffer,e,t);return o.set(r),o}function S(A,e,t,i){let o=0;return e!==null&&(o=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,i,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),o)),o}function q(A,e,t){let i=JSON.stringify(e),o=A.lengthBytesUTF8(i)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,o]);A.stringToUTF8(i,r,o)}function R(A,e,t,i){let o=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),a=Tt(A,o,r);return N(i,a.buffer)}function WA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),i=A.UTF8ToString(t);return JSON.parse(i)}function di(A,e,t,i){i!=null&&i.length>0&&i.forEach(function(p,n){switch(p.type){case u.TextStream:{let s=Ot.encode(p.data.data),B=S(A,s,n,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${B}`};q(A,I,n);break}case u.JsonCompatible:{let s=Ot.encode(JSON.stringify(p.data)),B=S(A,s,n,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${B}`};q(A,I,n);break}case u.BinaryStream:{let s=p.data.data,B=S(A,s,n,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${B}`};q(A,I,n);break}case u.TextFile:{A.fs_writeFile(p.data.path,p.data.data);break}case u.BinaryFile:{A.fs_writeFile(p.data.path,p.data.data);break}case u.Image:{let s=p.data,B=S(A,s.data,n,0),I=S(A,s.direction,n,1),l=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],C={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${I}`,size:s.size,data:`data:application/vnd.itk.address,0:${B}`,metadata:l};q(A,C,n);break}case u.Mesh:{let s=p.data,B=S(A,s.points,n,0),I=S(A,s.cells,n,1),l=S(A,s.pointData,n,2),C=S(A,s.cellData,n,3),m={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${B}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${I}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${l}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${C}`};q(A,m,n);break}case u.PointSet:{let s=p.data,B=S(A,s.points,n,0),I=S(A,s.pointData,n,1),l={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${B}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${I}`};q(A,l,n);break}case u.PolyData:{let s=p.data,B=S(A,s.points,n,0),I=S(A,s.vertices,n,1),l=S(A,s.lines,n,2),C=S(A,s.polygons,n,3),m=S(A,s.triangleStrips,n,4),w=S(A,s.pointData,n,5),W=S(A,s.pointData,n,6),U={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${B}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${I}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${l}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${C}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${m}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${w}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${W}`};q(A,U,n);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let o=A.stackSave(),r=0;try{r=A.callMain(e.slice())}catch(p){throw typeof p=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(p)):console.error("Build module in Debug mode for exception message information.")),p}finally{A.stackRestore(o)}let a=A.getModuleStdout(),g=A.getModuleStderr(),c=[];return t!=null&&t.length>0&&r===0&&t.forEach(function(p,n){let s=null;switch(p.type){case u.TextStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),C=new Uint8Array(A.HEAPU8.buffer,I,l);s={data:Mt.decode(C)};break}case u.JsonCompatible:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),C=new Uint8Array(A.HEAPU8.buffer,I,l);s=JSON.parse(Mt.decode(C));break}case u.BinaryStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),l=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);s={data:Tt(A,I,l)};break}case u.TextFile:{s={path:p.data.path,data:A.fs_readFile(p.data.path,{encoding:"utf8"})};break}case u.BinaryFile:{s={path:p.data.path,data:Ei(A,p.data.path)};break}case u.Image:{let I=WA(A,n);I.data=R(A,n,0,I.imageType.componentType),I.direction=R(A,n,1,K.Float64),I.metadata=new Map(I.metadata),s=I;break}case u.Mesh:{let I=WA(A,n);I.numberOfPoints>0?I.points=R(A,n,0,I.meshType.pointComponentType):I.points=N(I.meshType.pointComponentType,new ArrayBuffer(0)),I.numberOfCells>0?I.cells=R(A,n,1,I.meshType.cellComponentType):I.cells=N(I.meshType.cellComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=R(A,n,2,I.meshType.pointPixelComponentType):I.pointData=N(I.meshType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=R(A,n,3,I.meshType.cellPixelComponentType):I.cellData=N(I.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}case u.PointSet:{let I=WA(A,n);I.numberOfPoints>0?I.points=R(A,n,0,I.pointSetType.pointComponentType):I.points=N(I.pointSetType.pointComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=R(A,n,1,I.pointSetType.pointPixelComponentType):I.pointData=N(I.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=I;break}case u.PolyData:{let I=WA(A,n);I.numberOfPoints>0?I.points=R(A,n,0,K.Float32):I.points=new Float32Array,I.verticesBufferSize>0?I.vertices=R(A,n,1,F.UInt32):I.vertices=new Uint32Array,I.linesBufferSize>0?I.lines=R(A,n,2,F.UInt32):I.lines=new Uint32Array,I.polygonsBufferSize>0?I.polygons=R(A,n,3,F.UInt32):I.polygons=new Uint32Array,I.triangleStripsBufferSize>0?I.triangleStrips=R(A,n,4,F.UInt32):I.triangleStrips=new Uint32Array,I.numberOfPointPixels>0?I.pointData=R(A,n,5,I.polyDataType.pointPixelComponentType):I.pointData=N(I.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=R(A,n,6,I.polyDataType.cellPixelComponentType):I.cellData=N(I.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}default:throw Error("Unsupported output InterfaceType")}let B={type:p.type,data:s};c.push(B)}),{returnValue:r,stdout:a,stderr:g,outputs:c}}var Gt=di;var Qi=typeof globalThis.SharedArrayBuffer<"u";function yi(A,e){if(A==null)return[];let t=[];for(let i=0;i<A.length;i++){let o=hi(A[i],e);o!==null&&t.push(o)}return t}function hi(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),Qi&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var Lt=yi;function wi(A){return[A.data,A.direction]}var Jt=wi;function Di(A){return[A.points,A.pointData,A.cells,A.cellData]}var Ht=Di;function Si(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var Yt=Si;var bi;function UA(){return bi}var ki;function qt(){return ki}var Ri;function NA(){return Ri}var se=new Map;function Fi(){let A=NA();return typeof A>"u"&&(A=null),A}function Kt(){let A=UA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function OA(){let A=qt();return typeof A>"u"&&(A={}),A}async function Pi(A,e,t){let i=A,o=A;if(typeof A!="string"&&(i=new URL(A.href),o=i.href),se.has(o))return se.get(o);{let r=await Ut(A,e?.toString()??Kt(),t??OA());return se.set(o,r),r}}async function Wi(A,e,t,i,o){if(!await Nt()){let m="WebAssembly SIMD support is required -- please update your browser.";throw alert(m),new Error(m)}let r=o?.webWorker??null;if(r===!1){let m=await Pi(A.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??OA());return Gt(m,e,t,i)}let a=r,g=o?.pipelineWorkerUrl??Fi(),c=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:p,worker:n}=await Wt(a,c,o?.pipelineQueryParams??OA());a=n;let s=[];i!=null&&i.length>0&&i.forEach(function(m){if(m.type===u.BinaryStream){let w=m.data.data;s.push(w)}else if(m.type===u.BinaryFile){let w=m.data.data;s.push(w)}else if(m.type===u.Image){let w=m.data;w.data!==null&&s.push(...Jt(w))}else if(m.type===u.Mesh){let w=m.data;s.push(...Ht(w))}else if(m.type===u.PolyData){let w=m.data;s.push(...Yt(w))}});let B=o?.pipelineBaseUrl??Kt(),I=typeof B!="string"&&typeof B?.href<"u"?B.href:B,l=i!=null?LA(i,Lt(s,o?.noCopy)):null,C=await p.runPipeline(A.toString(),I,e,t,l,o?.pipelineQueryParams??OA());return{returnValue:C.returnValue,stdout:C.stdout,stderr:C.stderr,outputs:C.outputs,webWorker:a}}var d=Wi;var Ui=null;function jt(){return Ui}var Ni=new Map([]),$=Ni;var Oi="1.4.2",vt=Oi;var Ie,Mi=`https://cdn.jsdelivr.net/npm/@itk-wasm/mesh-io@${vt}/dist/pipelines`;function FI(A){Ie=A}function Q(){if(typeof Ie<"u")return Ie;let A=UA();return typeof A<"u"?A:Mi}var le,xi=null;function _t(A){le=A}function E(){if(typeof le<"u")return le;let A=NA();return typeof A<"u"?A:xi}var AA=null;async function Vt(){let A=E(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;AA=await uA(e)}function xI(A){AA=A}async function y(){if(AA!==null)return AA.terminated&&await Vt(),AA;let A=jt();return A!==null?A:(await Vt(),AA)}async function Ti(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="vtk-poly-data-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var ge=Ti;async function Gi(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="vtk-poly-data-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var pe=Gi;async function Li(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="obj-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var ue=Li;async function Ji(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="obj-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var fe=Ji;async function Hi(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="stl-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var Be=Hi;async function Yi(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="stl-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var ce=Yi;async function qi(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="off-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var Ce=qi;async function Ki(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="off-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var me=Ki;async function ji(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="wasm-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var Ee=ji;async function vi(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="wasm-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var de=vi;async function _i(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="wasm-zstd-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var Qe=_i;async function Vi(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="wasm-zstd-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var ye=Vi;async function zi(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="swc-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var he=zi;async function Zi(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="swc-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var we=Zi;async function Xi(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="byu-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var De=Xi;async function $i(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="byu-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var Se=$i;async function Ao(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="free-surfer-ascii-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var be=Ao;async function eo(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="free-surfer-ascii-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var ke=eo;async function to(A,e={}){let t=[{type:u.JsonCompatible},{type:u.Mesh}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="free-surfer-binary-read-mesh",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,mesh:l[1]?.data}}var Re=to;async function ro(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.Mesh,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="free-surfer-binary-write-mesh",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedMesh:l[1]?.data}}var Fe=ro;var io=new Map([["vtk",[ge,pe]],["obj",[ue,fe]],["stl",[Be,ce]],["off",[Ce,me]],["wasm",[Ee,de]],["wasm-zst",[Qe,ye]],["swc",[he,we]],["byu",[De,Se]],["free-surfer-ascii",[be,ke]],["free-surfer-binary",[Re,Fe]]]),eA=io;async function oo(A,e={}){let t=A.type??"",i=A.name??A.path??"fileName",o=M(i).toLowerCase(),r=e?.webWorker,a=A;if(A instanceof Blob){let I=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(I)}}let g=null;if(t&&$.has(t))g=$.get(t);else if(J.has(o))g=J.get(o);else for(let I of eA.values())if(I[0]!==null){let{webWorker:l,couldRead:C,mesh:m}=await I[0]({path:a.path,data:a.data.slice()},{informationOnly:e.informationOnly,webWorker:r,noCopy:e?.noCopy});if(r=l,C)return{webWorker:r,mesh:m}}if(!g)throw Error("Could not find IO for: "+i);let p=eA.get(g)[0],{webWorker:n,couldRead:s,mesh:B}=await p(a,{informationOnly:e.informationOnly,webWorker:r,noCopy:e?.noCopy});if(r=n,!s)throw Error("Could not read: "+i);return{webWorker:r,mesh:B}}var no=oo;async function ao(A,e,t={}){let i=A,o=t.mimeType,r=M(e).toLowerCase(),a=t.webWorker,g=null;if(typeof o<"u"&&$.has(o))g=$.get(o);else if(J.has(r))g=J.get(r);else for(let l of eA.values())if(l[1]!==null){let{webWorker:C,couldWrite:m,serializedMesh:w}=await l[1](i,e,t);if(a=C,m)return{webWorker:a,serializedMesh:w}}if(!g)throw Error("Could not find IO for: "+e);let p=eA.get(g)[1],{webWorker:n,couldWrite:s,serializedMesh:B}=await p(i,e,t);if(a=n,!s)throw Error("Could not write: "+e);return{webWorker:a,serializedMesh:B}}var so=ao;var Io=new Map([]),tA=Io;async function lo(A,e={}){let t=[{type:u.JsonCompatible},{type:u.PointSet}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="vtk-poly-data-read-point-set",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,pointSet:l[1]?.data}}var Pe=lo;async function go(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.PointSet,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="vtk-poly-data-write-point-set",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedPointSet:l[1]?.data}}var We=go;async function po(A,e={}){let t=[{type:u.JsonCompatible},{type:u.PointSet}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="obj-read-point-set",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,pointSet:l[1]?.data}}var Ue=po;async function uo(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.PointSet,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="obj-write-point-set",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedPointSet:l[1]?.data}}var Ne=uo;async function fo(A,e={}){let t=[{type:u.JsonCompatible},{type:u.PointSet}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="off-read-point-set",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,pointSet:l[1]?.data}}var Oe=fo;async function Bo(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.PointSet,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="off-write-point-set",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedPointSet:l[1]?.data}}var Me=Bo;async function co(A,e={}){let t=[{type:u.JsonCompatible},{type:u.PointSet}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="wasm-read-point-set",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,pointSet:l[1]?.data}}var xe=co;async function Co(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.PointSet,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="wasm-write-point-set",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedPointSet:l[1]?.data}}var Te=Co;async function mo(A,e={}){let t=[{type:u.JsonCompatible},{type:u.PointSet}],i=A;if(A instanceof File){let m=await A.arrayBuffer();i={path:A.name,data:new Uint8Array(m)}}let o=[{type:u.BinaryFile,data:i}],r=[],a=i.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),e.informationOnly&&e.informationOnly&&r.push("--information-only");let p="wasm-zstd-read-point-set",n=e?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,t,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:e?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:l[0]?.data,pointSet:l[1]?.data}}var Ge=mo;async function Eo(A,e,t={}){let i=[{type:u.JsonCompatible},{type:u.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:u.PointSet,data:A}],r=[];r.push("0"),r.push("0");let c=e;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let p="wasm-zstd-write-point-set",n=t?.webWorker;n===void 0&&(n=await y());let{webWorker:s,returnValue:B,stderr:I,outputs:l}=await d(p,r,i,o,{pipelineBaseUrl:Q(),pipelineWorkerUrl:E(),webWorker:n,noCopy:t?.noCopy});if(B!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:l[0]?.data,serializedPointSet:l[1]?.data}}var Le=Eo;var Qo=new Map([["vtk",[Pe,We]],["obj",[Ue,Ne]],["off",[Oe,Me]],["wasm",[xe,Te]],["wasm-zst",[Ge,Le]]]),rA=Qo;async function yo(A,e={}){let t=A.type??"",i=A.name??A.path??"fileName",o=M(i).toLowerCase(),r=e?.webWorker,a=A;if(A instanceof Blob){let I=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(I)}}let g=null;if(t&&tA.has(t))g=tA.get(t);else if(H.has(o))g=H.get(o);else for(let I of rA.values())if(I[0]!==null){let{webWorker:l,couldRead:C,pointSet:m}=await I[0]({path:a.path,data:a.data.slice()},{informationOnly:e.informationOnly,webWorker:r,noCopy:e?.noCopy});if(r=l,C)return{webWorker:r,pointSet:m}}if(!g)throw Error("Could not find IO for: "+i);let p=rA.get(g)[0],{webWorker:n,couldRead:s,pointSet:B}=await p(a,{informationOnly:e.informationOnly,webWorker:r,noCopy:e?.noCopy});if(r=n,!s)throw Error("Could not read: "+i);return{webWorker:r,pointSet:B}}var ho=yo;async function wo(A,e,t={}){let i=A,o=t.mimeType,r=M(e).toLowerCase(),a=t.webWorker,g=null;if(typeof o<"u"&&tA.has(o))g=tA.get(o);else if(H.has(r))g=H.get(r);else for(let l of rA.values())if(l[1]!==null){let{webWorker:C,couldWrite:m,serializedPointSet:w}=await l[1](i,e,t);if(a=C,m)return{webWorker:a,serializedPointSet:w}}if(!g)throw Error("Could not find IO for: "+e);let p=rA.get(g)[1],{webWorker:n,couldWrite:s,serializedPointSet:B}=await p(i,e,t);if(a=n,!s)throw Error("Could not write: "+e);return{webWorker:a,serializedPointSet:B}}var Do=wo;var zt='data:text/javascript;charset=utf-8,var II=Object.defineProperty;var eI=(A,t)=>{for(var I in t)II(A,I,{get:t[I],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gI=Symbol("Comlink.endpoint"),rI=Symbol("Comlink.releaseProxy"),pA=Symbol("Comlink.finalizer"),eA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:t,port2:I}=new MessageChannel;return iA(A,t),[I,[I]]},deserialize(A){return A.start(),nI(A)}},iI={canHandle:A=>$A(A)&&eA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},At=new Map([["proxy",oI],["throw",iI]]);function CI(A,t){for(let I of A)if(t===I||I==="*"||I instanceof RegExp&&I.test(t))return!0;return!1}function iA(A,t=globalThis,I=["*"]){t.addEventListener("message",function e(g){if(!g||!g.data)return;if(!CI(I,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:o,path:n}=Object.assign({path:[]},g.data),a=(g.data.argumentList||[]).map(b),Q;try{let B=n.slice(0,-1).reduce((f,s)=>f[s],A),i=n.reduce((f,s)=>f[s],A);switch(o){case"GET":Q=i;break;case"SET":B[n.slice(-1)[0]]=b(g.data.value),Q=!0;break;case"APPLY":Q=i.apply(B,a);break;case"CONSTRUCT":{let f=new i(...a);Q=aI(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;iA(A,s),Q=FA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(B){Q={value:B,[eA]:0}}Promise.resolve(Q).catch(B=>({value:B,[eA]:0})).then(B=>{let[i,f]=oA(B);t.postMessage(Object.assign(Object.assign({},i),{id:r}),f),o==="RELEASE"&&(t.removeEventListener("message",e),tt(t),pA in A&&typeof A[pA]=="function"&&A[pA]())}).catch(B=>{let[i,f]=oA({value:new TypeError("Unserializable return value"),[eA]:0});t.postMessage(Object.assign(Object.assign({},i),{id:r}),f)})}),t.start&&t.start()}function BI(A){return A.constructor.name==="MessagePort"}function tt(A){BI(A)&&A.close()}function nI(A,t){return SA(A,[],t)}function IA(A){if(A)throw new Error("Proxy has been released and is not useable")}function It(A){return q(A,{type:"RELEASE"}).then(()=>{tt(A)})}var gA=new WeakMap,rA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(gA.get(A)||0)-1;gA.set(A,t),t===0&&It(A)});function sI(A,t){let I=(gA.get(t)||0)+1;gA.set(t,I),rA&&rA.register(A,t,A)}function QI(A){rA&&rA.unregister(A)}function SA(A,t=[],I=function(){}){let e=!1,g=new Proxy(I,{get(r,o){if(IA(e),o===rI)return()=>{QI(g),It(A),e=!0};if(o==="then"){if(t.length===0)return{then:()=>g};let n=q(A,{type:"GET",path:t.map(a=>a.toString())}).then(b);return n.then.bind(n)}return SA(A,[...t,o])},set(r,o,n){IA(e);let[a,Q]=oA(n);return q(A,{type:"SET",path:[...t,o].map(B=>B.toString()),value:a},Q).then(b)},apply(r,o,n){IA(e);let a=t[t.length-1];if(a===gI)return q(A,{type:"ENDPOINT"}).then(b);if(a==="bind")return SA(A,t.slice(0,-1));let[Q,B]=_A(n);return q(A,{type:"APPLY",path:t.map(i=>i.toString()),argumentList:Q},B).then(b)},construct(r,o){IA(e);let[n,a]=_A(o);return q(A,{type:"CONSTRUCT",path:t.map(Q=>Q.toString()),argumentList:n},a).then(b)}});return sI(g,A),g}function EI(A){return Array.prototype.concat.apply([],A)}function _A(A){let t=A.map(oA);return[t.map(I=>I[0]),EI(t.map(I=>I[1]))]}var et=new WeakMap;function FA(A,t){return et.set(A,t),A}function aI(A){return Object.assign(A,{[vA]:!0})}function oA(A){for(let[t,I]of At)if(I.canHandle(A)){let[e,g]=I.serialize(A);return[{type:"HANDLER",name:t,value:e},g]}return[{type:"RAW",value:A},et.get(A)||[]]}function b(A){switch(A.type){case"HANDLER":return At.get(A.name).deserialize(A.value);case"RAW":return A.value}}function q(A,t,I){return new Promise(e=>{let g=cI();A.addEventListener("message",function r(o){!o.data||!o.data.id||o.data.id!==g||(A.removeEventListener("message",r),e(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},t),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,t){return function(){return A.apply(t,arguments)}}var{toString:fI}=Object.prototype,{getPrototypeOf:UA}=Object,BA=(A=>t=>{let I=fI.call(t);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),t=>BA(t)===A),nA=A=>t=>typeof t===A,{isArray:K}=Array,Z=nA("undefined");function lI(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&F(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var it=U("ArrayBuffer");function DI(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&it(A.buffer),t}var uI=nA("string"),F=nA("function"),Ct=nA("number"),sA=A=>A!==null&&typeof A=="object",hI=A=>A===!0||A===!1,CA=A=>{if(BA(A)!=="object")return!1;let t=UA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dI=U("Date"),yI=U("File"),wI=U("Blob"),mI=U("FileList"),pI=A=>sA(A)&&F(A.pipe),SI=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||F(A.append)&&((t=BA(A))==="formdata"||t==="object"&&F(A.toString)&&A.toString()==="[object FormData]"))},FI=U("URLSearchParams"),RI=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,t,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),K(A))for(e=0,g=A.length;e<g;e++)t.call(null,A[e],e,A);else{let r=I?Object.getOwnPropertyNames(A):Object.keys(A),o=r.length,n;for(e=0;e<o;e++)n=r[e],t.call(null,A[n],n,A)}}function Bt(A,t){t=t.toLowerCase();let I=Object.keys(A),e=I.length,g;for(;e-- >0;)if(g=I[e],t===g.toLowerCase())return g;return null}var nt=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,st=A=>!Z(A)&&A!==nt;function NA(){let{caseless:A}=st(this)&&this||{},t={},I=(e,g)=>{let r=A&&Bt(t,g)||g;CA(t[r])&&CA(e)?t[r]=NA(t[r],e):CA(e)?t[r]=NA({},e):K(e)?t[r]=e.slice():t[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],I);return t}var NI=(A,t,I,{allOwnKeys:e}={})=>(V(t,(g,r)=>{I&&F(g)?A[r]=W(g,I):A[r]=g},{allOwnKeys:e}),A),UI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),GI=(A,t,I,e)=>{A.prototype=Object.create(t.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),I&&Object.assign(A.prototype,I)},kI=(A,t,I,e)=>{let g,r,o,n={};if(t=t||{},A==null)return t;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)o=g[r],(!e||e(o,A,t))&&!n[o]&&(t[o]=A[o],n[o]=!0);A=I!==!1&&UA(A)}while(A&&(!I||I(A,t))&&A!==Object.prototype);return t},LI=(A,t,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=t.length;let e=A.indexOf(t,I);return e!==-1&&e===I},JI=A=>{if(!A)return null;if(K(A))return A;let t=A.length;if(!Ct(t))return null;let I=new Array(t);for(;t-- >0;)I[t]=A[t];return I},HI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&UA(Uint8Array)),YI=(A,t)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;t.call(A,r[0],r[1])}},bI=(A,t)=>{let I,e=[];for(;(I=A.exec(t))!==null;)e.push(I);return e},MI=U("HTMLFormElement"),qI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(I,e,g){return e.toUpperCase()+g}),rt=(({hasOwnProperty:A})=>(t,I)=>A.call(t,I))(Object.prototype),KI=U("RegExp"),Qt=(A,t)=>{let I=Object.getOwnPropertyDescriptors(A),e={};V(I,(g,r)=>{let o;(o=t(g,r,A))!==!1&&(e[r]=o||g)}),Object.defineProperties(A,e)},OI=A=>{Qt(A,(t,I)=>{if(F(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let e=A[I];if(F(e)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+I+"\'")})}})},TI=(A,t)=>{let I={},e=g=>{g.forEach(r=>{I[r]=!0})};return K(A)?e(A):e(String(A).split(t)),I},PI=()=>{},xI=(A,t)=>(A=+A,Number.isFinite(A)?A:t),RA="abcdefghijklmnopqrstuvwxyz",ot="0123456789",Et={DIGIT:ot,ALPHA:RA,ALPHA_DIGIT:RA+RA.toUpperCase()+ot},jI=(A=16,t=Et.ALPHA_DIGIT)=>{let I="",{length:e}=t;for(;A--;)I+=t[Math.random()*e|0];return I};function WI(A){return!!(A&&F(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var ZI=A=>{let t=new Array(10),I=(e,g)=>{if(sA(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[g]=e;let r=K(e)?[]:{};return V(e,(o,n)=>{let a=I(o,g+1);!Z(a)&&(r[n]=a)}),t[g]=void 0,r}}return e};return I(A,0)},VI=U("AsyncFunction"),XI=A=>A&&(sA(A)||F(A))&&F(A.then)&&F(A.catch),C={isArray:K,isArrayBuffer:it,isBuffer:lI,isFormData:SI,isArrayBufferView:DI,isString:uI,isNumber:Ct,isBoolean:hI,isObject:sA,isPlainObject:CA,isUndefined:Z,isDate:dI,isFile:yI,isBlob:wI,isRegExp:KI,isFunction:F,isStream:pI,isURLSearchParams:FI,isTypedArray:HI,isFileList:mI,forEach:V,merge:NA,extend:NI,trim:RI,stripBOM:UI,inherits:GI,toFlatObject:kI,kindOf:BA,kindOfTest:U,endsWith:LI,toArray:JI,forEachEntry:YI,matchAll:bI,isHTMLForm:MI,hasOwnProperty:rt,hasOwnProp:rt,reduceDescriptors:Qt,freezeMethods:OI,toObjectSet:TI,toCamelCase:qI,noop:PI,toFiniteNumber:xI,findKey:Bt,global:nt,isContextDefined:st,ALPHABET:Et,generateString:jI,isSpecCompliantForm:WI,toJSONObject:ZI,isAsyncFn:VI,isThenable:XI};function O(A,t,I,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),I&&(this.config=I),e&&(this.request=e),g&&(this.response=g)}C.inherits(O,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var at=O.prototype,ct={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ct[A]={value:A}});Object.defineProperties(O,ct);Object.defineProperty(at,"isAxiosError",{value:!0});O.from=(A,t,I,e,g,r)=>{let o=Object.create(at);return C.toFlatObject(A,o,function(a){return a!==Error.prototype},n=>n!=="isAxiosError"),O.call(o,A.message,t,I,e,g),o.cause=A,o.name=A.name,r&&Object.assign(o,r),o};var l=O;var QA=null;function GA(A){return C.isPlainObject(A)||C.isArray(A)}function lt(A){return C.endsWith(A,"[]")?A.slice(0,-2):A}function ft(A,t,I){return A?A.concat(t).map(function(g,r){return g=lt(g),!I&&r?"["+g+"]":g}).join(I?".":""):t}function zI(A){return C.isArray(A)&&!A.some(GA)}var _I=C.toFlatObject(C,{},null,function(t){return/^is[A-Z]/.test(t)});function vI(A,t,I){if(!C.isObject(A))throw new TypeError("target must be an object");t=t||new(QA||FormData),I=C.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(c,u){return!C.isUndefined(u[c])});let e=I.metaTokens,g=I.visitor||B,r=I.dots,o=I.indexes,a=(I.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(t);if(!C.isFunction(g))throw new TypeError("visitor must be a function");function Q(E){if(E===null)return"";if(C.isDate(E))return E.toISOString();if(!a&&C.isBlob(E))throw new l("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(E)||C.isTypedArray(E)?a&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function B(E,c,u){let y=E;if(E&&!u&&typeof E=="object"){if(C.endsWith(c,"{}"))c=e?c:c.slice(0,-2),E=JSON.stringify(E);else if(C.isArray(E)&&zI(E)||(C.isFileList(E)||C.endsWith(c,"[]"))&&(y=C.toArray(E)))return c=lt(c),y.forEach(function(N,tI){!(C.isUndefined(N)||N===null)&&t.append(o===!0?ft([c],tI,r):o===null?c:c+"[]",Q(N))}),!1}return GA(E)?!0:(t.append(ft(u,c,r),Q(E)),!1)}let i=[],f=Object.assign(_I,{defaultVisitor:B,convertValue:Q,isVisitable:GA});function s(E,c){if(!C.isUndefined(E)){if(i.indexOf(E)!==-1)throw Error("Circular reference detected in "+c.join("."));i.push(E),C.forEach(E,function(y,R){(!(C.isUndefined(y)||y===null)&&g.call(t,y,C.isString(R)?R.trim():R,c,f))===!0&&s(y,c?c.concat(R):[R])}),i.pop()}}if(!C.isObject(A))throw new TypeError("data must be an object");return s(A),t}var J=vI;function Dt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return t[e]})}function ut(A,t){this._pairs=[],A&&J(A,this,t)}var ht=ut.prototype;ht.append=function(t,I){this._pairs.push([t,I])};ht.toString=function(t){let I=t?function(e){return t.call(this,e,Dt)}:Dt;return this._pairs.map(function(g){return I(g[0])+"="+I(g[1])},"").join("&")};var EA=ut;function $I(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,t,I){if(!t)return A;let e=I&&I.encode||$I,g=I&&I.serialize,r;if(g?r=g(t,I):r=C.isURLSearchParams(t)?t.toString():new EA(t,I).toString(e),r){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var kA=class{constructor(){this.handlers=[]}use(t,I,e){return this.handlers.push({fulfilled:t,rejected:I,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){C.forEach(this.handlers,function(e){e!==null&&t(e)})}},LA=kA;var aA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dt=typeof URLSearchParams<"u"?URLSearchParams:EA;var yt=typeof FormData<"u"?FormData:null;var wt=typeof Blob<"u"?Blob:null;var mt={isBrowser:!0,classes:{URLSearchParams:dt,FormData:yt,Blob:wt},protocols:["http","https","file","blob","url","data"]};var JA={};eI(JA,{hasBrowserEnv:()=>pt,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>te});var pt=typeof window<"u"&&typeof document<"u",Ae=(A=>pt&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),te=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var w={...JA,...mt};function HA(A,t){return J(A,new w.classes.URLSearchParams,Object.assign({visitor:function(I,e,g,r){return w.isNode&&C.isBuffer(I)?(this.append(e,I.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Ie(A){return C.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ee(A){let t={},I=Object.keys(A),e,g=I.length,r;for(e=0;e<g;e++)r=I[e],t[r]=A[r];return t}function ge(A){function t(I,e,g,r){let o=I[r++];if(o==="__proto__")return!0;let n=Number.isFinite(+o),a=r>=I.length;return o=!o&&C.isArray(g)?g.length:o,a?(C.hasOwnProp(g,o)?g[o]=[g[o],e]:g[o]=e,!n):((!g[o]||!C.isObject(g[o]))&&(g[o]=[]),t(I,e,g[o],r)&&C.isArray(g[o])&&(g[o]=ee(g[o])),!n)}if(C.isFormData(A)&&C.isFunction(A.entries)){let I={};return C.forEachEntry(A,(e,g)=>{t(Ie(e),g,I,0)}),I}return null}var cA=ge;function re(A,t,I){if(C.isString(A))try{return(t||JSON.parse)(A),C.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(I||JSON.stringify)(A)}var YA={transitional:aA,adapter:["xhr","http"],transformRequest:[function(t,I){let e=I.getContentType()||"",g=e.indexOf("application/json")>-1,r=C.isObject(t);if(r&&C.isHTMLForm(t)&&(t=new FormData(t)),C.isFormData(t))return g?JSON.stringify(cA(t)):t;if(C.isArrayBuffer(t)||C.isBuffer(t)||C.isStream(t)||C.isFile(t)||C.isBlob(t))return t;if(C.isArrayBufferView(t))return t.buffer;if(C.isURLSearchParams(t))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return HA(t,this.formSerializer).toString();if((n=C.isFileList(t))||e.indexOf("multipart/form-data")>-1){let a=this.env&&this.env.FormData;return J(n?{"files[]":t}:t,a&&new a,this.formSerializer)}}return r||g?(I.setContentType("application/json",!1),re(t)):t}],transformResponse:[function(t){let I=this.transitional||YA.transitional,e=I&&I.forcedJSONParsing,g=this.responseType==="json";if(t&&C.isString(t)&&(e&&!this.responseType||g)){let o=!(I&&I.silentJSONParsing)&&g;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],A=>{YA.headers[A]={}});var T=YA;var oe=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),St=A=>{let t={},I,e,g;return A&&A.split(`%0A`).forEach(function(o){g=o.indexOf(":"),I=o.substring(0,g).trim().toLowerCase(),e=o.substring(g+1).trim(),!(!I||t[I]&&oe[I])&&(I==="set-cookie"?t[I]?t[I].push(e):t[I]=[e]:t[I]=t[I]?t[I]+", "+e:e)}),t};var Ft=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function fA(A){return A===!1||A==null?A:C.isArray(A)?A.map(fA):String(A)}function ie(A){let t=Object.create(null),I=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=I.exec(A);)t[e[1]]=e[2];return t}var Ce=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function bA(A,t,I,e,g){if(C.isFunction(e))return e.call(this,t,I);if(g&&(t=I),!!C.isString(t)){if(C.isString(e))return t.indexOf(e)!==-1;if(C.isRegExp(e))return e.test(t)}}function Be(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,I,e)=>I.toUpperCase()+e)}function ne(A,t){let I=C.toCamelCase(" "+t);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+I,{value:function(g,r,o){return this[e].call(this,t,g,r,o)},configurable:!0})})}var P=class{constructor(t){t&&this.set(t)}set(t,I,e){let g=this;function r(n,a,Q){let B=z(a);if(!B)throw new Error("header name must be a non-empty string");let i=C.findKey(g,B);(!i||g[i]===void 0||Q===!0||Q===void 0&&g[i]!==!1)&&(g[i||a]=fA(n))}let o=(n,a)=>C.forEach(n,(Q,B)=>r(Q,B,a));return C.isPlainObject(t)||t instanceof this.constructor?o(t,I):C.isString(t)&&(t=t.trim())&&!Ce(t)?o(St(t),I):t!=null&&r(I,t,e),this}get(t,I){if(t=z(t),t){let e=C.findKey(this,t);if(e){let g=this[e];if(!I)return g;if(I===!0)return ie(g);if(C.isFunction(I))return I.call(this,g,e);if(C.isRegExp(I))return I.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,I){if(t=z(t),t){let e=C.findKey(this,t);return!!(e&&this[e]!==void 0&&(!I||bA(this,this[e],e,I)))}return!1}delete(t,I){let e=this,g=!1;function r(o){if(o=z(o),o){let n=C.findKey(e,o);n&&(!I||bA(e,e[n],n,I))&&(delete e[n],g=!0)}}return C.isArray(t)?t.forEach(r):r(t),g}clear(t){let I=Object.keys(this),e=I.length,g=!1;for(;e--;){let r=I[e];(!t||bA(this,this[r],r,t,!0))&&(delete this[r],g=!0)}return g}normalize(t){let I=this,e={};return C.forEach(this,(g,r)=>{let o=C.findKey(e,r);if(o){I[o]=fA(g),delete I[r];return}let n=t?Be(r):String(r).trim();n!==r&&delete I[r],I[n]=fA(g),e[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let I=Object.create(null);return C.forEach(this,(e,g)=>{e!=null&&e!==!1&&(I[g]=t&&C.isArray(e)?e.join(", "):e)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,I])=>t+": "+I).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...I){let e=new this(t);return I.forEach(g=>e.set(g)),e}static accessor(t){let e=(this[Ft]=this[Ft]={accessors:{}}).accessors,g=this.prototype;function r(o){let n=z(o);e[n]||(ne(g,o),e[n]=!0)}return C.isArray(t)?t.forEach(r):r(t),this}};P.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(P.prototype,({value:A},t)=>{let I=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(e){this[I]=e}}});C.freezeMethods(P);var m=P;function _(A,t){let I=this||T,e=t||I,g=m.from(e.headers),r=e.data;return C.forEach(A,function(n){r=n.call(I,r,g.normalize(),t?t.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function Rt(A,t,I){l.call(this,A??"canceled",l.ERR_CANCELED,t,I),this.name="CanceledError"}C.inherits(Rt,l,{__CANCEL__:!0});var H=Rt;function MA(A,t,I){let e=I.config.validateStatus;!I.status||!e||e(I.status)?A(I):t(new l("Request failed with status code "+I.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}var Nt=w.hasStandardBrowserEnv?{write(A,t,I,e,g,r){let o=[A+"="+encodeURIComponent(t)];C.isNumber(I)&&o.push("expires="+new Date(I).toGMTString()),C.isString(e)&&o.push("path="+e),C.isString(g)&&o.push("domain="+g),r===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function qA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function KA(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function $(A,t){return A&&!qA(t)?KA(A,t):t}var Ut=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a"),e;function g(r){let o=r;return t&&(I.setAttribute("href",o),o=I.href),I.setAttribute("href",o),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^%23/,""):"",hostname:I.hostname,port:I.port,pathname:I.pathname.charAt(0)==="/"?I.pathname:"/"+I.pathname}}return e=g(window.location.href),function(o){let n=C.isString(o)?g(o):o;return n.protocol===e.protocol&&n.host===e.host}}():function(){return function(){return!0}}();function OA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function se(A,t){A=A||10;let I=new Array(A),e=new Array(A),g=0,r=0,o;return t=t!==void 0?t:1e3,function(a){let Q=Date.now(),B=e[r];o||(o=Q),I[g]=a,e[g]=Q;let i=r,f=0;for(;i!==g;)f+=I[i++],i=i%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-o<t)return;let s=B&&Q-B;return s?Math.round(f*1e3/s):void 0}}var Gt=se;function kt(A,t){let I=0,e=Gt(50,250);return g=>{let r=g.loaded,o=g.lengthComputable?g.total:void 0,n=r-I,a=e(n),Q=r<=o;I=r;let B={loaded:r,total:o,progress:o?r/o:void 0,bytes:n,rate:a||void 0,estimated:a&&o&&Q?(o-r)/a:void 0,event:g};B[t?"download":"upload"]=!0,A(B)}}var Qe=typeof XMLHttpRequest<"u",Lt=Qe&&function(A){return new Promise(function(I,e){let g=A.data,r=m.from(A.headers).normalize(),{responseType:o,withXSRFToken:n}=A,a;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(a),A.signal&&A.signal.removeEventListener("abort",a)}let B;if(C.isFormData(g)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((B=r.getContentType())!==!1){let[c,...u]=B?B.split(";").map(y=>y.trim()).filter(Boolean):[];r.setContentType([c||"multipart/form-data",...u].join("; "))}}let i=new XMLHttpRequest;if(A.auth){let c=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(c+":"+u))}let f=$(A.baseURL,A.url);i.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),i.timeout=A.timeout;function s(){if(!i)return;let c=m.from("getAllResponseHeaders"in i&&i.getAllResponseHeaders()),y={data:!o||o==="text"||o==="json"?i.responseText:i.response,status:i.status,statusText:i.statusText,headers:c,config:A,request:i};MA(function(N){I(N),Q()},function(N){e(N),Q()},y),i=null}if("onloadend"in i?i.onloadend=s:i.onreadystatechange=function(){!i||i.readyState!==4||i.status===0&&!(i.responseURL&&i.responseURL.indexOf("file:")===0)||setTimeout(s)},i.onabort=function(){i&&(e(new l("Request aborted",l.ECONNABORTED,A,i)),i=null)},i.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,i)),i=null},i.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",y=A.transitional||aA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,i)),i=null},w.hasStandardBrowserEnv&&(n&&C.isFunction(n)&&(n=n(A)),n||n!==!1&&Ut(f))){let c=A.xsrfHeaderName&&A.xsrfCookieName&&Nt.read(A.xsrfCookieName);c&&r.set(A.xsrfHeaderName,c)}g===void 0&&r.setContentType(null),"setRequestHeader"in i&&C.forEach(r.toJSON(),function(u,y){i.setRequestHeader(y,u)}),C.isUndefined(A.withCredentials)||(i.withCredentials=!!A.withCredentials),o&&o!=="json"&&(i.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&i.addEventListener("progress",kt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&i.upload&&i.upload.addEventListener("progress",kt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(a=c=>{i&&(e(!c||c.type?new H(null,A,i):c),i.abort(),i=null)},A.cancelToken&&A.cancelToken.subscribe(a),A.signal&&(A.signal.aborted?a():A.signal.addEventListener("abort",a)));let E=OA(f);if(E&&w.protocols.indexOf(E)===-1){e(new l("Unsupported protocol "+E+":",l.ERR_BAD_REQUEST,A));return}i.send(g||null)})};var TA={http:QA,xhr:Lt};C.forEach(TA,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Jt=A=>`- ${A}`,Ee=A=>C.isFunction(A)||A===null||A===!1,lA={getAdapter:A=>{A=C.isArray(A)?A:[A];let{length:t}=A,I,e,g={};for(let r=0;r<t;r++){I=A[r];let o;if(e=I,!Ee(I)&&(e=TA[(o=String(I)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${o}\'`);if(e)break;g[o||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([n,a])=>`adapter ${n} `+(a===!1?"is not supported by the environment":"is not available in the build")),o=t?r.length>1?`since :%0A`+r.map(Jt).join(`%0A`):" "+Jt(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return e},adapters:TA};function PA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new H(null,A)}function DA(A){return PA(A),A.headers=m.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),lA.getAdapter(A.adapter||T.adapter)(A).then(function(e){return PA(A),e.data=_.call(A,A.transformResponse,e),e.headers=m.from(e.headers),e},function(e){return v(e)||(PA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=m.from(e.response.headers))),Promise.reject(e)})}var Ht=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let I={};function e(Q,B,i){return C.isPlainObject(Q)&&C.isPlainObject(B)?C.merge.call({caseless:i},Q,B):C.isPlainObject(B)?C.merge({},B):C.isArray(B)?B.slice():B}function g(Q,B,i){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q,i)}else return e(Q,B,i)}function r(Q,B){if(!C.isUndefined(B))return e(void 0,B)}function o(Q,B){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q)}else return e(void 0,B)}function n(Q,B,i){if(i in t)return e(Q,B);if(i in A)return e(void 0,Q)}let a={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(Q,B)=>g(Ht(Q),Ht(B),!0)};return C.forEach(Object.keys(Object.assign({},A,t)),function(B){let i=a[B]||g,f=i(A[B],t[B],B);C.isUndefined(f)&&i!==n||(I[B]=f)}),I}var uA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{xA[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}});var Yt={};xA.transitional=function(t,I,e){function g(r,o){return"[Axios v"+uA+"] Transitional option \'"+r+"\'"+o+(e?". "+e:"")}return(r,o,n)=>{if(t===!1)throw new l(g(o," has been removed"+(I?" in "+I:"")),l.ERR_DEPRECATED);return I&&!Yt[o]&&(Yt[o]=!0,console.warn(g(o," has been deprecated since v"+I+" and will be removed in the near future"))),t?t(r,o,n):!0}};function ae(A,t,I){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],o=t[r];if(o){let n=A[r],a=n===void 0||o(n,r,A);if(a!==!0)throw new l("option "+r+" must be "+a,l.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var hA={assertOptions:ae,validators:xA};var Y=hA.validators,x=class{constructor(t){this.defaults=t,this.interceptors={request:new LA,response:new LA}}async request(t,I){try{return await this._request(t,I)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(t,I){typeof t=="string"?(I=I||{},I.url=t):I=t||{},I=k(this.defaults,I);let{transitional:e,paramsSerializer:g,headers:r}=I;e!==void 0&&hA.assertOptions(e,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),g!=null&&(C.isFunction(g)?I.paramsSerializer={serialize:g}:hA.assertOptions(g,{encode:Y.function,serialize:Y.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let o=r&&C.merge(r.common,r[I.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],E=>{delete r[E]}),I.headers=m.concat(o,r);let n=[],a=!0;this.interceptors.request.forEach(function(c){typeof c.runWhen=="function"&&c.runWhen(I)===!1||(a=a&&c.synchronous,n.unshift(c.fulfilled,c.rejected))});let Q=[];this.interceptors.response.forEach(function(c){Q.push(c.fulfilled,c.rejected)});let B,i=0,f;if(!a){let E=[DA.bind(this),void 0];for(E.unshift.apply(E,n),E.push.apply(E,Q),f=E.length,B=Promise.resolve(I);i<f;)B=B.then(E[i++],E[i++]);return B}f=n.length;let s=I;for(i=0;i<f;){let E=n[i++],c=n[i++];try{s=E(s)}catch(u){c.call(this,u);break}}try{B=DA.call(this,s)}catch(E){return Promise.reject(E)}for(i=0,f=Q.length;i<f;)B=B.then(Q[i++],Q[i++]);return B}getUri(t){t=k(this.defaults,t);let I=$(t.baseURL,t.url);return X(I,t.params,t.paramsSerializer)}};C.forEach(["delete","get","head","options"],function(t){x.prototype[t]=function(I,e){return this.request(k(e||{},{method:t,url:I,data:(e||{}).data}))}});C.forEach(["post","put","patch"],function(t){function I(e){return function(r,o,n){return this.request(k(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:o}))}}x.prototype[t]=I(),x.prototype[t+"Form"]=I(!0)});var AA=x;var jA=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(r){I=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,o=new Promise(n=>{e.subscribe(n),r=n}).then(g);return o.cancel=function(){e.unsubscribe(r)},o},t(function(r,o,n){e.reason||(e.reason=new H(r,o,n),I(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let I=this._listeners.indexOf(t);I!==-1&&this._listeners.splice(I,1)}static source(){let t;return{token:new A(function(g){t=g}),cancel:t}}},bt=jA;function WA(A){return function(I){return A.apply(null,I)}}function ZA(A){return C.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,t])=>{VA[t]=A});var Mt=VA;function qt(A){let t=new AA(A),I=W(AA.prototype.request,t);return C.extend(I,AA.prototype,t,{allOwnKeys:!0}),C.extend(I,t,null,{allOwnKeys:!0}),I.create=function(g){return qt(k(A,g))},I}var h=qt(T);h.Axios=AA;h.CanceledError=H;h.CancelToken=bt;h.isCancel=v;h.VERSION=uA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(t){return Promise.all(t)};h.spread=WA;h.isAxiosError=ZA;h.mergeConfig=k;h.AxiosHeaders=m;h.formToJSON=A=>cA(C.isHTMLForm(A)?new FormData(A):A);h.getAdapter=lA.getAdapter;h.HttpStatusCode=Mt;h.default=h;var dA=h;var{Axios:io,AxiosError:Co,CanceledError:Bo,isCancel:no,CancelToken:so,VERSION:Qo,all:Eo,Cancel:ao,isAxiosError:co,spread:fo,toFormData:lo,AxiosHeaders:Do,HttpStatusCode:uo,formToJSON:ho,getAdapter:yo,mergeConfig:wo}=dA;var tA,L,zA,XA={env:{emscripten_notify_memory_growth:function(A){zA=new Uint8Array(L.exports.memory.buffer)}}},yA=class{init(){return tA||(typeof fetch<"u"?tA=fetch("data:application/wasm;base64,"+Kt).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,XA)).then(this._init):tA=WebAssembly.instantiate(Buffer.from(Kt,"base64"),XA).then(this._init),tA)}_init(t){L=t.instance,XA.env.emscripten_notify_memory_growth(0)}decode(t,I=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=t.byteLength,g=L.exports.malloc(e);zA.set(t,g),I=I||Number(L.exports.ZSTD_findDecompressedSize(g,e));let r=L.exports.malloc(I),o=L.exports.ZSTD_decompress(r,I,g,e),n=zA.slice(r,r+o);return L.exports.free(g),L.exports.free(r),n}},Kt="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var Ot=new yA,Tt=!1;async function ce(A,t,I){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${t}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await dA.get(`${g}.zst`,{responseType:"arraybuffer",params:I});Tt||(await Ot.init(),Tt=!0);let n=Ot.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:n})}var Pt=ce;var wA=new Map;async function fe(A,t,I){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),wA.has(g)?r=await wA.get(g):(wA.set(g,Pt(e,t,I)),r=await wA.get(g)),r}var xt=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",Transform:"Transform",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},S=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=ue;function he(A,t){let I=null;switch(A){case S.UInt8:{I=new Uint8Array(t);break}case S.Int8:{I=new Int8Array(t);break}case S.UInt16:{I=new Uint16Array(t);break}case S.Int16:{I=new Int16Array(t);break}case S.UInt32:{I=new Uint32Array(t);break}case S.Int32:{I=new Int32Array(t);break}case S.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(t):I=new Uint8Array(t);break}case S.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(t):I=new Uint8Array(t);break}case j.Float32:{I=new Float32Array(t);break}case j.Float64:{I=new Float64Array(t);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var G=he;var Zt=typeof globalThis.SharedArrayBuffer=="function",jt=new TextEncoder,Wt=new TextDecoder("utf-8");function de(A,t){let I={flags:"r",encoding:"binary"},e=A.fs_open(t,I.flags),r=A.fs_stat(t).size,o=null;Zt?o=new SharedArrayBuffer(r):o=new ArrayBuffer(r);let n=new Uint8Array(o);return A.fs_read(e,n,0,r,0),A.fs_close(e),n}function Vt(A,t,I){let e=null;Zt?e=new SharedArrayBuffer(I):e=new ArrayBuffer(I);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,t,I);return g.set(r),g}function d(A,t,I,e){let g=0;return t!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,e,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),g)),g}function M(A,t,I){let e=JSON.stringify(t),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,g]);A.stringToUTF8(e,r,g)}function p(A,t,I,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,I]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,I]),o=Vt(A,g,r);return G(e,o.buffer)}function mA(A,t){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),e=A.UTF8ToString(I);return JSON.parse(e)}function ye(A,t,I,e){e!=null&&e.length>0&&e.forEach(function(Q,B){switch(Q.type){case D.TextStream:{let i=jt.encode(Q.data.data),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.JsonCompatible:{let i=jt.encode(JSON.stringify(Q.data)),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.BinaryStream:{let i=Q.data.data,f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};M(A,s,B);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let i=Q.data,f=d(A,i.data,B,0),s=d(A,i.direction,B,1),E=typeof i.metadata?.entries<"u"?Array.from(i.metadata.entries()):[],c={imageType:i.imageType,name:i.name,origin:i.origin,spacing:i.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:i.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};M(A,c,B);break}case D.Mesh:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.cells,B,1),E=d(A,i.pointData,B,2),c=d(A,i.cellData,B,3),u={meshType:i.meshType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:i.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:i.cellBufferSize,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${c}`};M(A,u,B);break}case D.PointSet:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.pointData,B,1),E={pointSetType:i.pointSetType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};M(A,E,B);break}case D.PolyData:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.vertices,B,1),E=d(A,i.lines,B,2),c=d(A,i.polygons,B,3),u=d(A,i.triangleStrips,B,4),y=d(A,i.pointData,B,5),R=d(A,i.pointData,B,6),N={polyDataType:i.polyDataType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:i.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:i.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:i.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${c}`,triangleStripsBufferSize:i.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${y}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};M(A,N,B);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(t.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let o=A.getModuleStdout(),n=A.getModuleStderr(),a=[];return I!=null&&I.length>0&&r===0&&I.forEach(function(Q,B){let i=null;switch(Q.type){case D.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i={data:Wt.decode(c)};break}case D.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),c=new Uint8Array(A.HEAPU8.buffer,s,E);i=JSON.parse(Wt.decode(c));break}case D.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);i={data:Vt(A,s,E)};break}case D.TextFile:{i={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{i={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let s=mA(A,B);s.data=p(A,B,0,s.imageType.componentType),s.direction=p(A,B,1,j.Float64),s.metadata=new Map(s.metadata),i=s;break}case D.Mesh:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.meshType.pointComponentType):s.points=G(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=p(A,B,1,s.meshType.cellComponentType):s.cells=G(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,2,s.meshType.pointPixelComponentType):s.pointData=G(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,3,s.meshType.cellPixelComponentType):s.cellData=G(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PointSet:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,s.pointSetType.pointComponentType):s.points=G(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=p(A,B,1,s.pointSetType.pointPixelComponentType):s.pointData=G(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PolyData:{let s=mA(A,B);s.numberOfPoints>0?s.points=p(A,B,0,j.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=p(A,B,1,S.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=p(A,B,2,S.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=p(A,B,3,S.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=p(A,B,4,S.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=p(A,B,5,s.polyDataType.pointPixelComponentType):s.pointData=G(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=p(A,B,6,s.polyDataType.cellPixelComponentType):s.cellData=G(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:i};a.push(f)}),{returnValue:r,stdout:o,stderr:n,outputs:a}}var Xt=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,t){if(A==null)return[];let I=[];for(let e=0;e<A.length;e++){let g=pe(A[e],t);g!==null&&I.push(g)}return I}function pe(A,t){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:t?I:I.slice(0)}var zt=me;function Se(A){return[A.data,A.direction]}var _t=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vt=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $t=Re;async function Ne(A,t,I,e){let g=Xt(A,t,I,e),r=[];return g.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let n=o.data;r.push(n)}else if(o.type===D.Image){let n=o.data;r.push(..._t(n))}else if(o.type===D.Mesh){let n=o.data;r.push(...vt(n))}else if(o.type===D.PolyData){let n=o.data;r.push(...$t(n))}}),FA(g,zt(r,!0))}var AI=Ne;var Ue={runPipeline:async function(A,t,I,e,g,r){let o=await xt(A,t,r);return await AI(o,I,e,g)}};iA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';_t(zt);export{De as byuReadMesh,Se as byuWriteMesh,J as extensionToMeshIo,H as extensionToPointSetIo,be as freeSurferAsciiReadMesh,ke as freeSurferAsciiWriteMesh,Re as freeSurferBinaryReadMesh,Fe as freeSurferBinaryWriteMesh,y as getDefaultWebWorker,E as getPipelineWorkerUrl,Q as getPipelinesBaseUrl,ue as objReadMesh,Ue as objReadPointSet,fe as objWriteMesh,Ne as objWritePointSet,Ce as offReadMesh,Oe as offReadPointSet,me as offWriteMesh,Me as offWritePointSet,no as readMesh,ho as readPointSet,xI as setDefaultWebWorker,_t as setPipelineWorkerUrl,FI as setPipelinesBaseUrl,Be as stlReadMesh,ce as stlWriteMesh,he as swcReadMesh,we as swcWriteMesh,ge as vtkPolyDataReadMesh,Pe as vtkPolyDataReadPointSet,pe as vtkPolyDataWriteMesh,We as vtkPolyDataWritePointSet,Ee as wasmReadMesh,xe as wasmReadPointSet,de as wasmWriteMesh,Te as wasmWritePointSet,Qe as wasmZstdReadMesh,Ge as wasmZstdReadPointSet,ye as wasmZstdWriteMesh,Le as wasmZstdWritePointSet,so as writeMesh,Do as writePointSet};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
