# SPDX-FileCopyrightText: 2024 CERN
#
# SPDX-License-Identifier: BSD-4-Clause

[tool.poetry]
name = "pymbse-commons"
version = "0.1.3"
description = "Common classes and functions for PyMBSE"
authors = ["Matthias Bonora <matthias.bonora@cern.ch>"]
license = "BSD-4-Clause"
readme = "README.md"
repository = "https://gitlab.cern.ch/pymbse/pymbse-commons"
homepage = "https://pymbse.docs.cern.ch"
documentation = "https://pymbse-commons.docs.cern.ch/pymbse-commons"

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
]

packages = [
    { include = "pymbse"},
]

[tool.poetry.dependencies]
python = ">=3.10, <4.0"
pydantic = "^2"


[tool.poetry.group.lint.dependencies]
mypy = "^1"
types-requests = "^2.28.1"
flake8 = "^4.0.1"
black = "^22.6.0"
types-aiofiles = "^23"
reuse = "^4"
pre-commit = "^3.6.2"
ruff = "^0.3.0"
types-toml = "^0.10.8.7"

[tool.poetry.group.test.dependencies]
toml-cli = "^0.3.1"
pytest = "^7.1.2"
pytest-cov = "^5.0.0"
requests = "^2"
pytest-mock = "^3"
pytest-asyncio = "^0"
pyfakefs = "^5"
httpx = "^0.26.0"


[tool.poetry.group.docs.dependencies]
myst-parser = "^0.18.1"
sphinx = "^5"
toml = "^0.10.2"
sphinx-gallery = "^0.11.1"
pillow = "^9.4.0"
nbsphinx = "^0.8.12"
sphinxcontrib-apidoc = "^0.3.0"



[tool.mypy]
ignore_missing_imports = true
python_version = "3.10"
exclude = "docs"
mypy_path = "$MYPY_CONFIG_FILE_DIR"
explicit_package_bases=true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
pattern = "default-unprefixed"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-select = ["I", "B", "Q"]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.coverage.report]
exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "@(abc\\.)?abstractmethod",
    ]
